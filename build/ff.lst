ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	ld_word:
  25              	.LFB124:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE124:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	ld_dword:
  54              	.LFB125:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE125:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	st_word:
  90              	.LFB126:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 104 0006 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE126:
 108              		.section	.text.st_dword,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	st_dword:
 116              	.LFB127:
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 117              		.loc 1 662 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 123              		.loc 1 663 0
 124 0000 0170     		strb	r1, [r0]
 125              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 126              		.loc 1 664 0
 127 0002 C1F30723 		ubfx	r3, r1, #8, #8
 128 0006 4370     		strb	r3, [r0, #1]
 129              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 130              		.loc 1 665 0
 131 0008 C1F30743 		ubfx	r3, r1, #16, #8
 132 000c 8370     		strb	r3, [r0, #2]
 133              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 134              		.loc 1 666 0
 135 000e 090E     		lsrs	r1, r1, #24
 136              	.LVL17:
 137 0010 C170     		strb	r1, [r0, #3]
 138 0012 7047     		bx	lr
 139              		.cfi_endproc
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 15


 140              	.LFE127:
 142              		.section	.text.mem_cpy,"ax",%progbits
 143              		.align	1
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	mem_cpy:
 150              	.LFB128:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 151              		.loc 1 693 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 157              		.loc 1 697 0
 158 0000 1346     		mov	r3, r2
 159 0002 2AB1     		cbz	r2, .L5
 160              	.LVL19:
 161              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 162              		.loc 1 699 0 discriminator 1
 163 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 164 0006 0270     		strb	r2, [r0]
 165              	.LVL20:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 16


 166 0008 0130     		adds	r0, r0, #1
 167              	.LVL21:
 168 000a 0131     		adds	r1, r1, #1
 169              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 170              		.loc 1 700 0 discriminator 1
 171 000c 013B     		subs	r3, r3, #1
 172              	.LVL23:
 173 000e F9D1     		bne	.L7
 174              	.L5:
 175 0010 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE128:
 179              		.section	.text.mem_set,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	mem_set:
 187              	.LFB129:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 188              		.loc 1 706 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL24:
 194              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 195              		.loc 1 710 0 discriminator 1
 196 0000 0170     		strb	r1, [r0]
 197              	.LVL25:
 198 0002 0130     		adds	r0, r0, #1
 199              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 200              		.loc 1 711 0 discriminator 1
 201 0004 013A     		subs	r2, r2, #1
 202              	.LVL27:
 203 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 204              		.loc 1 712 0
 205 0008 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE129:
 209              		.section	.text.mem_cmp,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 17


 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	mem_cmp:
 217              	.LFB130:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 218              		.loc 1 716 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL28:
 224 0000 30B4     		push	{r4, r5}
 225              	.LCFI0:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 5, -4
 229              	.LVL29:
 230              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 231              		.loc 1 721 0 discriminator 2
 232 0002 451C     		adds	r5, r0, #1
 233              	.LVL30:
 234 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 235              	.LVL31:
 236 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 237 0008 1B1A     		subs	r3, r3, r0
 238              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 239              		.loc 1 722 0 discriminator 2
 240 000a 013A     		subs	r2, r2, #1
 241              	.LVL33:
 242 000c 04D0     		beq	.L10
 243 000e 4C1C     		adds	r4, r1, #1
 244              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 245              		.loc 1 721 0 discriminator 1
 246 0010 2846     		mov	r0, r5
 247 0012 2146     		mov	r1, r4
 248              		.loc 1 722 0 discriminator 1
 249 0014 002B     		cmp	r3, #0
 250 0016 F4D0     		beq	.L12
 251              	.LVL35:
 252              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 253              		.loc 1 725 0
 254 0018 1846     		mov	r0, r3
 255 001a 30BC     		pop	{r4, r5}
 256              	.LCFI1:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 18


 257              		.cfi_restore 5
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 260              	.LVL36:
 261 001c 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE130:
 265              		.section	.text.chk_chr,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	chk_chr:
 273              	.LFB131:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 274              		.loc 1 729 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 280              		.loc 1 730 0
 281 0000 00E0     		b	.L15
 282              	.L17:
 283              		.loc 1 730 0 is_stmt 0 discriminator 3
 284 0002 0130     		adds	r0, r0, #1
 285              	.LVL38:
 286              	.L15:
 287              		.loc 1 730 0 discriminator 1
 288 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 289 0006 0BB1     		cbz	r3, .L16
 290              		.loc 1 730 0 discriminator 2
 291 0008 8B42     		cmp	r3, r1
 292 000a FAD1     		bne	.L17
 293              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 294              		.loc 1 732 0 is_stmt 1
 295 000c 1846     		mov	r0, r3
 296              	.LVL39:
 297 000e 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE131:
 301              		.section	.text.chk_lock,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	chk_lock:
 309              	.LFB132:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 19


 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 310              		.loc 1 775 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL40:
 316 0000 30B4     		push	{r4, r5}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 5, -4
 321              	.LVL41:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 20


 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 322              		.loc 1 779 0
 323 0002 0025     		movs	r5, #0
 324 0004 2B46     		mov	r3, r5
 325 0006 01E0     		b	.L19
 326              	.LVL42:
 327              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 328              		.loc 1 785 0
 329 0008 0125     		movs	r5, #1
 330              	.LVL43:
 331              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 332              		.loc 1 779 0 discriminator 2
 333 000a 0133     		adds	r3, r3, #1
 334              	.LVL44:
 335              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 336              		.loc 1 779 0 is_stmt 0 discriminator 1
 337 000c 012B     		cmp	r3, #1
 338 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 780 0 is_stmt 1
 340 0010 1A01     		lsls	r2, r3, #4
 341 0012 174C     		ldr	r4, .L35
 342 0014 A258     		ldr	r2, [r4, r2]
 343 0016 002A     		cmp	r2, #0
 344 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 345              		.loc 1 781 0
 346 001a 0468     		ldr	r4, [r0]
 347 001c A242     		cmp	r2, r4
 348 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 349              		.loc 1 782 0 discriminator 1
 350 0020 134A     		ldr	r2, .L35
 351 0022 02EB0312 		add	r2, r2, r3, lsl #4
 352 0026 5468     		ldr	r4, [r2, #4]
 353 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 354              		.loc 1 781 0 discriminator 1
 355 002a 9442     		cmp	r4, r2
 356 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 357              		.loc 1 783 0
 358 002e 104A     		ldr	r2, .L35
 359 0030 02EB0312 		add	r2, r2, r3, lsl #4
 360 0034 9468     		ldr	r4, [r2, #8]
 361 0036 4269     		ldr	r2, [r0, #20]
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 362              		.loc 1 782 0
 363 0038 9442     		cmp	r4, r2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 21


 364 003a E6D1     		bne	.L20
 365              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 366              		.loc 1 788 0
 367 003c 022B     		cmp	r3, #2
 368 003e 03D0     		beq	.L31
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 369              		.loc 1 793 0
 370 0040 49B1     		cbz	r1, .L32
 371 0042 1020     		movs	r0, #16
 372              	.LVL45:
 373              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 374              		.loc 1 794 0
 375 0044 30BC     		pop	{r4, r5}
 376              	.LCFI3:
 377              		.cfi_remember_state
 378              		.cfi_restore 5
 379              		.cfi_restore 4
 380              		.cfi_def_cfa_offset 0
 381              	.LVL46:
 382 0046 7047     		bx	lr
 383              	.LVL47:
 384              	.L31:
 385              	.LCFI4:
 386              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 387              		.loc 1 789 0
 388 0048 85B9     		cbnz	r5, .L26
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 389              		.loc 1 789 0 is_stmt 0 discriminator 2
 390 004a 0229     		cmp	r1, #2
 391 004c 01D0     		beq	.L33
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 392              		.loc 1 789 0
 393 004e 1220     		movs	r0, #18
 394              	.LVL48:
 395 0050 F8E7     		b	.L24
 396              	.LVL49:
 397              	.L33:
 398 0052 0020     		movs	r0, #0
 399              	.LVL50:
 400 0054 F6E7     		b	.L24
 401              	.LVL51:
 402              	.L32:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 403              		.loc 1 793 0 is_stmt 1 discriminator 2
 404 0056 064A     		ldr	r2, .L35
 405 0058 02EB0313 		add	r3, r2, r3, lsl #4
 406              	.LVL52:
 407 005c 9B89     		ldrh	r3, [r3, #12]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 22


 408 005e B3F5807F 		cmp	r3, #256
 409 0062 01D0     		beq	.L34
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 410              		.loc 1 793 0 is_stmt 0
 411 0064 0020     		movs	r0, #0
 412              	.LVL53:
 413 0066 EDE7     		b	.L24
 414              	.LVL54:
 415              	.L34:
 416 0068 1020     		movs	r0, #16
 417              	.LVL55:
 418 006a EBE7     		b	.L24
 419              	.LVL56:
 420              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 421              		.loc 1 789 0 is_stmt 1
 422 006c 0020     		movs	r0, #0
 423              	.LVL57:
 424 006e E9E7     		b	.L24
 425              	.L36:
 426              		.align	2
 427              	.L35:
 428 0070 00000000 		.word	.LANCHOR0
 429              		.cfi_endproc
 430              	.LFE132:
 432              		.section	.text.enq_lock,"ax",%progbits
 433              		.align	1
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	enq_lock:
 440              	.LFB133:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 441              		.loc 1 799 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL58:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 447              		.loc 1 802 0
 448 0000 0020     		movs	r0, #0
 449 0002 00E0     		b	.L38
 450              	.LVL59:
 451              	.L40:
 452              		.loc 1 802 0 is_stmt 0 discriminator 4
 453 0004 0130     		adds	r0, r0, #1
 454              	.LVL60:
 455              	.L38:
 456              		.loc 1 802 0 discriminator 1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 23


 457 0006 0128     		cmp	r0, #1
 458 0008 04D8     		bhi	.L39
 459              		.loc 1 802 0 discriminator 3
 460 000a 0301     		lsls	r3, r0, #4
 461 000c 034A     		ldr	r2, .L41
 462 000e D358     		ldr	r3, [r2, r3]
 463 0010 002B     		cmp	r3, #0
 464 0012 F7D1     		bne	.L40
 465              	.L39:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 466              		.loc 1 804 0 is_stmt 1
 467 0014 0238     		subs	r0, r0, #2
 468              	.LVL61:
 469 0016 18BF     		it	ne
 470 0018 0120     		movne	r0, #1
 471              	.LVL62:
 472 001a 7047     		bx	lr
 473              	.L42:
 474              		.align	2
 475              	.L41:
 476 001c 00000000 		.word	.LANCHOR0
 477              		.cfi_endproc
 478              	.LFE133:
 480              		.section	.text.inc_lock,"ax",%progbits
 481              		.align	1
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	inc_lock:
 488              	.LFB134:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 489              		.loc 1 812 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL63:
 495 0000 70B4     		push	{r4, r5, r6}
 496              	.LCFI5:
 497              		.cfi_def_cfa_offset 12
 498              		.cfi_offset 4, -12
 499              		.cfi_offset 5, -8
 500              		.cfi_offset 6, -4
 501              	.LVL64:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 24


 502              		.loc 1 816 0
 503 0002 0023     		movs	r3, #0
 504 0004 00E0     		b	.L44
 505              	.LVL65:
 506              	.L45:
 507              		.loc 1 816 0 is_stmt 0 discriminator 2
 508 0006 0133     		adds	r3, r3, #1
 509              	.LVL66:
 510              	.L44:
 511              		.loc 1 816 0 discriminator 1
 512 0008 012B     		cmp	r3, #1
 513 000a 13D8     		bhi	.L46
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 514              		.loc 1 817 0 is_stmt 1
 515 000c 1A01     		lsls	r2, r3, #4
 516 000e 244C     		ldr	r4, .L61
 517 0010 A458     		ldr	r4, [r4, r2]
 518 0012 0268     		ldr	r2, [r0]
 519 0014 9442     		cmp	r4, r2
 520 0016 F6D1     		bne	.L45
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 521              		.loc 1 818 0 discriminator 1
 522 0018 214A     		ldr	r2, .L61
 523 001a 02EB0312 		add	r2, r2, r3, lsl #4
 524 001e 5468     		ldr	r4, [r2, #4]
 525 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 526              		.loc 1 817 0 discriminator 1
 527 0022 9442     		cmp	r4, r2
 528 0024 EFD1     		bne	.L45
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 529              		.loc 1 819 0
 530 0026 1E4A     		ldr	r2, .L61
 531 0028 02EB0312 		add	r2, r2, r3, lsl #4
 532 002c 9468     		ldr	r4, [r2, #8]
 533 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 534              		.loc 1 818 0
 535 0030 9442     		cmp	r4, r2
 536 0032 E8D1     		bne	.L45
 537              	.L46:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 538              		.loc 1 822 0
 539 0034 022B     		cmp	r3, #2
 540 0036 29D0     		beq	.L60
 541              	.LVL67:
 542              	.L49:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 25


 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 543              		.loc 1 831 0
 544 0038 21B1     		cbz	r1, .L53
 545              		.loc 1 831 0 is_stmt 0 discriminator 1
 546 003a 194A     		ldr	r2, .L61
 547 003c 02EB0312 		add	r2, r2, r3, lsl #4
 548 0040 9289     		ldrh	r2, [r2, #12]
 549 0042 52BB     		cbnz	r2, .L57
 550              	.L53:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 551              		.loc 1 833 0 is_stmt 1
 552 0044 21BB     		cbnz	r1, .L58
 553              		.loc 1 833 0 is_stmt 0 discriminator 1
 554 0046 164A     		ldr	r2, .L61
 555 0048 02EB0312 		add	r2, r2, r3, lsl #4
 556 004c 9189     		ldrh	r1, [r2, #12]
 557              	.LVL68:
 558 004e 0131     		adds	r1, r1, #1
 559 0050 89B2     		uxth	r1, r1
 560              	.L54:
 561              		.loc 1 833 0 discriminator 4
 562 0052 134A     		ldr	r2, .L61
 563 0054 02EB0312 		add	r2, r2, r3, lsl #4
 564 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 565              		.loc 1 835 0 is_stmt 1 discriminator 4
 566 005a 581C     		adds	r0, r3, #1
 567              	.L43:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 568              		.loc 1 836 0
 569 005c 70BC     		pop	{r4, r5, r6}
 570              	.LCFI6:
 571              		.cfi_remember_state
 572              		.cfi_restore 6
 573              		.cfi_restore 5
 574              		.cfi_restore 4
 575              		.cfi_def_cfa_offset 0
 576 005e 7047     		bx	lr
 577              	.LVL69:
 578              	.L51:
 579              	.LCFI7:
 580              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 581              		.loc 1 823 0 discriminator 4
 582 0060 0133     		adds	r3, r3, #1
 583              	.LVL70:
 584              	.L48:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 585              		.loc 1 823 0 is_stmt 0 discriminator 1
 586 0062 012B     		cmp	r3, #1
 587 0064 04D8     		bhi	.L50
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 588              		.loc 1 823 0 discriminator 3
 589 0066 1A01     		lsls	r2, r3, #4
 590 0068 0D4C     		ldr	r4, .L61
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 26


 591 006a A258     		ldr	r2, [r4, r2]
 592 006c 002A     		cmp	r2, #0
 593 006e F7D1     		bne	.L51
 594              	.L50:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 595              		.loc 1 824 0 is_stmt 1
 596 0070 022B     		cmp	r3, #2
 597 0072 10D0     		beq	.L56
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 598              		.loc 1 825 0
 599 0074 0668     		ldr	r6, [r0]
 600 0076 0A4D     		ldr	r5, .L61
 601 0078 1C01     		lsls	r4, r3, #4
 602 007a 2A19     		adds	r2, r5, r4
 603 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 604              		.loc 1 826 0
 605 007e 8468     		ldr	r4, [r0, #8]
 606 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 607              		.loc 1 827 0
 608 0082 4069     		ldr	r0, [r0, #20]
 609              	.LVL71:
 610 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 611              		.loc 1 828 0
 612 0086 0020     		movs	r0, #0
 613 0088 9081     		strh	r0, [r2, #12]	@ movhi
 614 008a D5E7     		b	.L49
 615              	.LVL72:
 616              	.L60:
 617 008c 0023     		movs	r3, #0
 618              	.LVL73:
 619 008e E8E7     		b	.L48
 620              	.LVL74:
 621              	.L58:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622              		.loc 1 833 0
 623 0090 4FF48071 		mov	r1, #256
 624              	.LVL75:
 625 0094 DDE7     		b	.L54
 626              	.LVL76:
 627              	.L56:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 628              		.loc 1 824 0
 629 0096 0020     		movs	r0, #0
 630              	.LVL77:
 631 0098 E0E7     		b	.L43
 632              	.L57:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 633              		.loc 1 831 0
 634 009a 0020     		movs	r0, #0
 635 009c DEE7     		b	.L43
 636              	.L62:
 637 009e 00BF     		.align	2
 638              	.L61:
 639 00a0 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 27


 640              		.cfi_endproc
 641              	.LFE134:
 643              		.section	.text.dec_lock,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	dec_lock:
 651              	.LFB135:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 652              		.loc 1 843 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL78:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 658              		.loc 1 848 0
 659 0000 0138     		subs	r0, r0, #1
 660              	.LVL79:
 661 0002 0128     		cmp	r0, #1
 662 0004 01D9     		bls	.L70
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 663              		.loc 1 856 0
 664 0006 0220     		movs	r0, #2
 665              	.LVL80:
 666 0008 7047     		bx	lr
 667              	.LVL81:
 668              	.L70:
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 669              		.loc 1 849 0
 670 000a 0C4B     		ldr	r3, .L72
 671 000c 03EB0013 		add	r3, r3, r0, lsl #4
 672 0010 9B89     		ldrh	r3, [r3, #12]
 673              	.LVL82:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 674              		.loc 1 850 0
 675 0012 B3F5807F 		cmp	r3, #256
 676 0016 0CD0     		beq	.L71
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 28


 677              	.LVL83:
 678              	.L65:
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 679              		.loc 1 851 0
 680 0018 0BB1     		cbz	r3, .L66
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 681              		.loc 1 851 0 is_stmt 0 discriminator 1
 682 001a 013B     		subs	r3, r3, #1
 683              	.LVL84:
 684 001c 9BB2     		uxth	r3, r3
 685              	.LVL85:
 686              	.L66:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 687              		.loc 1 852 0 is_stmt 1
 688 001e 074A     		ldr	r2, .L72
 689 0020 02EB0012 		add	r2, r2, r0, lsl #4
 690 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 691              		.loc 1 853 0
 692 0026 33B9     		cbnz	r3, .L69
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 693              		.loc 1 853 0 is_stmt 0 discriminator 1
 694 0028 0301     		lsls	r3, r0, #4
 695              	.LVL86:
 696 002a 0020     		movs	r0, #0
 697              	.LVL87:
 698 002c 034A     		ldr	r2, .L72
 699              	.LVL88:
 700 002e D050     		str	r0, [r2, r3]
 701 0030 7047     		bx	lr
 702              	.LVL89:
 703              	.L71:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 704              		.loc 1 850 0 is_stmt 1
 705 0032 0023     		movs	r3, #0
 706              	.LVL90:
 707 0034 F0E7     		b	.L65
 708              	.LVL91:
 709              	.L69:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 710              		.loc 1 854 0
 711 0036 0020     		movs	r0, #0
 712              	.LVL92:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 713              		.loc 1 859 0
 714 0038 7047     		bx	lr
 715              	.L73:
 716 003a 00BF     		.align	2
 717              	.L72:
 718 003c 00000000 		.word	.LANCHOR0
 719              		.cfi_endproc
 720              	.LFE135:
 722              		.section	.text.clear_lock,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 29


 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	clear_lock:
 730              	.LFB136:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 731              		.loc 1 866 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL93:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 737              		.loc 1 869 0
 738 0000 0023     		movs	r3, #0
 739 0002 03E0     		b	.L79
 740              	.LVL94:
 741              	.L85:
 742              	.LCFI8:
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 745              		.loc 1 872 0
 746 0004 5DF8044B 		ldr	r4, [sp], #4
 747              	.LCFI9:
 748              		.cfi_restore 4
 749              		.cfi_def_cfa_offset 0
 750 0008 7047     		bx	lr
 751              	.L81:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 752              		.loc 1 869 0
 753 000a 0133     		adds	r3, r3, #1
 754              	.LVL95:
 755              	.L79:
 756 000c 012B     		cmp	r3, #1
 757 000e 11D8     		bhi	.L84
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 758              		.loc 1 870 0
 759 0010 1A01     		lsls	r2, r3, #4
 760 0012 0949     		ldr	r1, .L86
 761 0014 8A58     		ldr	r2, [r1, r2]
 762 0016 8242     		cmp	r2, r0
 763 0018 F7D1     		bne	.L81
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 764              		.loc 1 866 0
 765 001a 10B4     		push	{r4}
 766              	.LCFI10:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 30


 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 4, -4
 769              	.L80:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 770              		.loc 1 870 0 discriminator 1
 771 001c 1A01     		lsls	r2, r3, #4
 772 001e 0024     		movs	r4, #0
 773 0020 8C50     		str	r4, [r1, r2]
 774              	.L76:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 775              		.loc 1 869 0 discriminator 2
 776 0022 0133     		adds	r3, r3, #1
 777              	.LVL96:
 778 0024 012B     		cmp	r3, #1
 779 0026 EDD8     		bhi	.L85
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 780              		.loc 1 870 0
 781 0028 1A01     		lsls	r2, r3, #4
 782 002a 0349     		ldr	r1, .L86
 783 002c 8A58     		ldr	r2, [r1, r2]
 784 002e 8242     		cmp	r2, r0
 785 0030 F7D1     		bne	.L76
 786 0032 F3E7     		b	.L80
 787              	.L84:
 788              	.LCFI11:
 789              		.cfi_def_cfa_offset 0
 790              		.cfi_restore 4
 791 0034 7047     		bx	lr
 792              	.L87:
 793 0036 00BF     		.align	2
 794              	.L86:
 795 0038 00000000 		.word	.LANCHOR0
 796              		.cfi_endproc
 797              	.LFE136:
 799              		.section	.text.clust2sect,"ax",%progbits
 800              		.align	1
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	clust2sect:
 807              	.LFB140:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 31


 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 32


 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 808              		.loc 1 987 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813              	.LVL97:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 814              		.loc 1 988 0
 815 0000 0239     		subs	r1, r1, #2
 816              	.LVL98:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 817              		.loc 1 989 0
 818 0002 4369     		ldr	r3, [r0, #20]
 819 0004 023B     		subs	r3, r3, #2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 33


 820 0006 9942     		cmp	r1, r3
 821 0008 04D2     		bcs	.L90
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 822              		.loc 1 990 0
 823 000a 4389     		ldrh	r3, [r0, #10]
 824 000c 806A     		ldr	r0, [r0, #40]
 825              	.LVL99:
 826 000e 03FB0100 		mla	r0, r3, r1, r0
 827 0012 7047     		bx	lr
 828              	.LVL100:
 829              	.L90:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 830              		.loc 1 989 0
 831 0014 0020     		movs	r0, #0
 832              	.LVL101:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 833              		.loc 1 991 0
 834 0016 7047     		bx	lr
 835              		.cfi_endproc
 836              	.LFE140:
 838              		.section	.text.clmt_clust,"ax",%progbits
 839              		.align	1
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu fpv4-sp-d16
 845              	clmt_clust:
 846              	.LFB145:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 34


1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 35


1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 36


1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 37


1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 38


1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 39


1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 40


1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 41


1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 847              		.loc 1 1444 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL102:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 853              		.loc 1 1446 0
 854 0000 0268     		ldr	r2, [r0]
 855              	.LVL103:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 856              		.loc 1 1449 0
 857 0002 C36A     		ldr	r3, [r0, #44]
 858 0004 0433     		adds	r3, r3, #4
 859              	.LVL104:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 860              		.loc 1 1450 0
 861 0006 490A     		lsrs	r1, r1, #9
 862              	.LVL105:
 863 0008 5289     		ldrh	r2, [r2, #10]
 864              	.LVL106:
 865 000a B1FBF2F1 		udiv	r1, r1, r2
 866              	.LVL107:
 867              	.L94:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 868              		.loc 1 1452 0
 869 000e 1868     		ldr	r0, [r3]
 870              	.LVL108:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 42


1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 871              		.loc 1 1453 0
 872 0010 30B1     		cbz	r0, .L91
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 873              		.loc 1 1454 0
 874 0012 8142     		cmp	r1, r0
 875 0014 02D3     		bcc	.L93
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 876              		.loc 1 1455 0
 877 0016 091A     		subs	r1, r1, r0
 878              	.LVL109:
 879 0018 0833     		adds	r3, r3, #8
 880              	.LVL110:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 881              		.loc 1 1452 0
 882 001a F8E7     		b	.L94
 883              	.LVL111:
 884              	.L93:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 885              		.loc 1 1457 0
 886 001c 5868     		ldr	r0, [r3, #4]
 887              	.LVL112:
 888 001e 0844     		add	r0, r0, r1
 889              	.L91:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 890              		.loc 1 1458 0
 891 0020 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE145:
 895              		.section	.text.ld_clust,"ax",%progbits
 896              		.align	1
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	ld_clust:
 903              	.LFB149:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 43


1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 44


1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 45


1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 904              		.loc 1 1636 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL113:
 909 0000 70B5     		push	{r4, r5, r6, lr}
 910              	.LCFI12:
 911              		.cfi_def_cfa_offset 16
 912              		.cfi_offset 4, -16
 913              		.cfi_offset 5, -12
 914              		.cfi_offset 6, -8
 915              		.cfi_offset 14, -4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 46


 916 0002 0646     		mov	r6, r0
 917 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 918              		.loc 1 1639 0
 919 0006 01F11A00 		add	r0, r1, #26
 920              	.LVL114:
 921 000a FFF7FEFF 		bl	ld_word
 922              	.LVL115:
 923 000e 0446     		mov	r4, r0
 924              	.LVL116:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 925              		.loc 1 1640 0
 926 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 927 0012 032B     		cmp	r3, #3
 928 0014 00D0     		beq	.L98
 929              	.L95:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 930              		.loc 1 1645 0
 931 0016 70BD     		pop	{r4, r5, r6, pc}
 932              	.LVL117:
 933              	.L98:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 934              		.loc 1 1641 0
 935 0018 05F11400 		add	r0, r5, #20
 936              	.LVL118:
 937 001c FFF7FEFF 		bl	ld_word
 938              	.LVL119:
 939 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 940              	.LVL120:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 941              		.loc 1 1644 0
 942 0024 F7E7     		b	.L95
 943              		.cfi_endproc
 944              	.LFE149:
 946              		.section	.text.st_clust,"ax",%progbits
 947              		.align	1
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv4-sp-d16
 953              	st_clust:
 954              	.LFB150:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 47


1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 955              		.loc 1 1655 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              	.LVL121:
 960 0000 70B5     		push	{r4, r5, r6, lr}
 961              	.LCFI13:
 962              		.cfi_def_cfa_offset 16
 963              		.cfi_offset 4, -16
 964              		.cfi_offset 5, -12
 965              		.cfi_offset 6, -8
 966              		.cfi_offset 14, -4
 967 0002 0646     		mov	r6, r0
 968 0004 0C46     		mov	r4, r1
 969 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 970              		.loc 1 1656 0
 971 0008 91B2     		uxth	r1, r2
 972              	.LVL122:
 973 000a 04F11A00 		add	r0, r4, #26
 974              	.LVL123:
 975 000e FFF7FEFF 		bl	st_word
 976              	.LVL124:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 977              		.loc 1 1657 0
 978 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 979 0014 032B     		cmp	r3, #3
 980 0016 00D0     		beq	.L102
 981              	.L99:
 982 0018 70BD     		pop	{r4, r5, r6, pc}
 983              	.LVL125:
 984              	.L102:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 985              		.loc 1 1658 0
 986 001a 290C     		lsrs	r1, r5, #16
 987 001c 04F11400 		add	r0, r4, #20
 988 0020 FFF7FEFF 		bl	st_word
 989              	.LVL126:
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 990              		.loc 1 1660 0
 991 0024 F8E7     		b	.L99
 992              		.cfi_endproc
 993              	.LFE150:
 995              		.section	.text.get_fileinfo,"ax",%progbits
 996              		.align	1
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	get_fileinfo:
 1003              	.LFB155:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 48


1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 49


1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 50


1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 51


1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 52


1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 53


1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 54


2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 55


2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 56


2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 57


2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 58


2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 59


2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 60


2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 61


2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1004              		.loc 1 2448 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              	.LVL127:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 62


2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
 1009              		.loc 1 2458 0
 1010 0000 0023     		movs	r3, #0
 1011 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1012              		.loc 1 2459 0
 1013 0004 C369     		ldr	r3, [r0, #28]
 1014 0006 73B3     		cbz	r3, .L112
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 1015              		.loc 1 2448 0
 1016 0008 70B5     		push	{r4, r5, r6, lr}
 1017              	.LCFI14:
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 4, -16
 1020              		.cfi_offset 5, -12
 1021              		.cfi_offset 6, -8
 1022              		.cfi_offset 14, -4
 1023 000a 0024     		movs	r4, #0
 1024 000c 2346     		mov	r3, r4
 1025 000e 05E0     		b	.L105
 1026              	.LVL128:
 1027              	.L107:
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 63


2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1028              		.loc 1 2524 0
 1029 0010 092A     		cmp	r2, #9
 1030 0012 0ED0     		beq	.L115
 1031              	.L108:
 1032              	.LVL129:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1033              		.loc 1 2525 0
 1034 0014 0D19     		adds	r5, r1, r4
 1035 0016 6B72     		strb	r3, [r5, #9]
 1036 0018 0134     		adds	r4, r4, #1
 1037              	.LVL130:
 1038              	.L106:
 1039 001a 1346     		mov	r3, r2
 1040              	.LVL131:
 1041              	.L105:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 1042              		.loc 1 2520 0
 1043 001c 0A2B     		cmp	r3, #10
 1044 001e 0DD8     		bhi	.L116
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1045              		.loc 1 2521 0
 1046 0020 056A     		ldr	r5, [r0, #32]
 1047 0022 5A1C     		adds	r2, r3, #1
 1048              	.LVL132:
 1049 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1050              	.LVL133:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 64


 1051              		.loc 1 2522 0
 1052 0026 202B     		cmp	r3, #32
 1053 0028 F7D0     		beq	.L106
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1054              		.loc 1 2523 0
 1055 002a 052B     		cmp	r3, #5
 1056 002c F0D1     		bne	.L107
 1057 002e E523     		movs	r3, #229
 1058              	.LVL134:
 1059 0030 EEE7     		b	.L107
 1060              	.LVL135:
 1061              	.L115:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1062              		.loc 1 2524 0 discriminator 1
 1063 0032 0D19     		adds	r5, r1, r4
 1064 0034 2E26     		movs	r6, #46
 1065 0036 6E72     		strb	r6, [r5, #9]
 1066 0038 0134     		adds	r4, r4, #1
 1067              	.LVL136:
 1068 003a EBE7     		b	.L108
 1069              	.LVL137:
 1070              	.L116:
 1071 003c 0E46     		mov	r6, r1
 1072 003e 0546     		mov	r5, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1073              		.loc 1 2527 0
 1074 0040 0C44     		add	r4, r4, r1
 1075              	.LVL138:
 1076 0042 0023     		movs	r3, #0
 1077              	.LVL139:
 1078 0044 6372     		strb	r3, [r4, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1079              		.loc 1 2530 0
 1080 0046 036A     		ldr	r3, [r0, #32]
 1081 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1082 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1083              		.loc 1 2531 0
 1084 004c 006A     		ldr	r0, [r0, #32]
 1085              	.LVL140:
 1086 004e 1C30     		adds	r0, r0, #28
 1087 0050 FFF7FEFF 		bl	ld_dword
 1088              	.LVL141:
 1089 0054 3060     		str	r0, [r6]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1090              		.loc 1 2532 0
 1091 0056 286A     		ldr	r0, [r5, #32]
 1092 0058 1630     		adds	r0, r0, #22
 1093 005a FFF7FEFF 		bl	ld_dword
 1094              	.LVL142:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1095              		.loc 1 2533 0
 1096 005e F080     		strh	r0, [r6, #6]	@ movhi
 1097 0060 000C     		lsrs	r0, r0, #16
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 65


 1098              	.LVL143:
 1099 0062 B080     		strh	r0, [r6, #4]	@ movhi
 1100 0064 70BD     		pop	{r4, r5, r6, pc}
 1101              	.LVL144:
 1102              	.L112:
 1103              	.LCFI15:
 1104              		.cfi_def_cfa_offset 0
 1105              		.cfi_restore 4
 1106              		.cfi_restore 5
 1107              		.cfi_restore 6
 1108              		.cfi_restore 14
 1109 0066 7047     		bx	lr
 1110              		.cfi_endproc
 1111              	.LFE155:
 1113              		.section	.text.create_name,"ax",%progbits
 1114              		.align	1
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	create_name:
 1121              	.LFB156:
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 66


2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1122              		.loc 1 2622 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 67


 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              	.LVL145:
 1127 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1128              	.LCFI16:
 1129              		.cfi_def_cfa_offset 40
 1130              		.cfi_offset 3, -40
 1131              		.cfi_offset 4, -36
 1132              		.cfi_offset 5, -32
 1133              		.cfi_offset 6, -28
 1134              		.cfi_offset 7, -24
 1135              		.cfi_offset 8, -20
 1136              		.cfi_offset 9, -16
 1137              		.cfi_offset 10, -12
 1138              		.cfi_offset 11, -8
 1139              		.cfi_offset 14, -4
 1140 0004 8346     		mov	fp, r0
 1141 0006 8A46     		mov	r10, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 68


2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 69


2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1142              		.loc 1 2747 0
 1143 0008 0F68     		ldr	r7, [r1]
 1144              	.LVL146:
 1145 000a 00F12409 		add	r9, r0, #36
 1146              	.LVL147:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1147              		.loc 1 2748 0
 1148 000e 0B22     		movs	r2, #11
 1149 0010 2021     		movs	r1, #32
 1150              	.LVL148:
 1151 0012 4846     		mov	r0, r9
 1152              	.LVL149:
 1153 0014 FFF7FEFF 		bl	mem_set
 1154              	.LVL150:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1155              		.loc 1 2749 0
 1156 0018 0026     		movs	r6, #0
 1157 001a 3346     		mov	r3, r6
 1158 001c 4FF00808 		mov	r8, #8
 1159              	.LVL151:
 1160              	.L118:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 70


2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
 1161              		.loc 1 2764 0
 1162 0020 5D1C     		adds	r5, r3, #1
 1163              	.LVL152:
 1164 0022 FC5C     		ldrb	r4, [r7, r3]	@ zero_extendqisi2
 1165              	.LVL153:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1166              		.loc 1 2765 0
 1167 0024 202C     		cmp	r4, #32
 1168 0026 15D9     		bls	.L119
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1169              		.loc 1 2766 0
 1170 0028 2F2C     		cmp	r4, #47
 1171 002a 0ED0     		beq	.L120
 1172              		.loc 1 2766 0 is_stmt 0 discriminator 1
 1173 002c 5C2C     		cmp	r4, #92
 1174 002e 0CD0     		beq	.L120
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
 1175              		.loc 1 2770 0 is_stmt 1
 1176 0030 2E2C     		cmp	r4, #46
 1177 0032 01D0     		beq	.L123
 1178              		.loc 1 2770 0 is_stmt 0 discriminator 1
 1179 0034 B045     		cmp	r8, r6
 1180 0036 18D8     		bhi	.L124
 1181              	.L123:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1182              		.loc 1 2771 0 is_stmt 1
 1183 0038 B8F10B0F 		cmp	r8, #11
 1184 003c 3FD0     		beq	.L131
 1185              		.loc 1 2771 0 is_stmt 0 discriminator 2
 1186 003e 2E2C     		cmp	r4, #46
 1187 0040 0FD0     		beq	.L138
 1188              		.loc 1 2771 0
 1189 0042 0620     		movs	r0, #6
 1190 0044 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1191              	.LVL154:
 1192              	.L122:
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1193              		.loc 1 2767 0 is_stmt 1 discriminator 4
 1194 0048 0135     		adds	r5, r5, #1
 1195              	.LVL155:
 1196              	.L120:
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1197              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1198 004a 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1199 004c 2F2B     		cmp	r3, #47
 1200 004e FBD0     		beq	.L122
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 71


 1201              		.loc 1 2767 0 discriminator 3
 1202 0050 5C2B     		cmp	r3, #92
 1203 0052 F9D0     		beq	.L122
 1204              	.L119:
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1205              		.loc 1 2795 0 is_stmt 1
 1206 0054 3D44     		add	r5, r5, r7
 1207              	.LVL156:
 1208 0056 CAF80050 		str	r5, [r10]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 1209              		.loc 1 2796 0
 1210 005a F6B9     		cbnz	r6, .L139
 1211 005c 0620     		movs	r0, #6
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1212              		.loc 1 2803 0
 1213 005e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1214              	.LVL157:
 1215              	.L138:
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1216              		.loc 1 2772 0
 1217 0062 0826     		movs	r6, #8
 1218              	.LVL158:
 1219 0064 4FF00B08 		mov	r8, #11
 1220              	.LVL159:
 1221 0068 11E0     		b	.L126
 1222              	.LVL160:
 1223              	.L124:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 72


 1224              		.loc 1 2775 0
 1225 006a 14F0800F 		tst	r4, #128
 1226 006e 10D1     		bne	.L140
 1227              	.L127:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1228              		.loc 1 2790 0
 1229 0070 2146     		mov	r1, r4
 1230 0072 1648     		ldr	r0, .L142
 1231 0074 FFF7FEFF 		bl	chk_chr
 1232              	.LVL161:
 1233 0078 20BB     		cbnz	r0, .L133
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1234              		.loc 1 2791 0
 1235 007a A4F16103 		sub	r3, r4, #97
 1236 007e DBB2     		uxtb	r3, r3
 1237 0080 192B     		cmp	r3, #25
 1238 0082 01D8     		bhi	.L128
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1239              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1240 0084 203C     		subs	r4, r4, #32
 1241              	.LVL162:
 1242 0086 E4B2     		uxtb	r4, r4
 1243              	.LVL163:
 1244              	.L128:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1245              		.loc 1 2792 0 is_stmt 1
 1246 0088 09F80640 		strb	r4, [r9, r6]
 1247 008c 0136     		adds	r6, r6, #1
 1248              	.LVL164:
 1249              	.L126:
 1250 008e 2B46     		mov	r3, r5
 1251 0090 C6E7     		b	.L118
 1252              	.LVL165:
 1253              	.L140:
2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1254              		.loc 1 2777 0
 1255 0092 803C     		subs	r4, r4, #128
 1256              	.LVL166:
 1257 0094 0E4B     		ldr	r3, .L142+4
 1258 0096 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1259              	.LVL167:
 1260 0098 EAE7     		b	.L127
 1261              	.LVL168:
 1262              	.L139:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1263              		.loc 1 2798 0
 1264 009a 9BF82430 		ldrb	r3, [fp, #36]	@ zero_extendqisi2
 1265 009e E52B     		cmp	r3, #229
 1266 00a0 07D0     		beq	.L141
 1267              	.L129:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1268              		.loc 1 2799 0
 1269 00a2 202C     		cmp	r4, #32
 1270 00a4 09D8     		bhi	.L135
 1271 00a6 0423     		movs	r3, #4
 1272              	.L130:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 73


 1273              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1274 00a8 8BF82F30 		strb	r3, [fp, #47]
2801:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
 1275              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1276 00ac 0020     		movs	r0, #0
 1277 00ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1278              	.LVL169:
 1279              	.L141:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1280              		.loc 1 2798 0 discriminator 1
 1281 00b2 0523     		movs	r3, #5
 1282 00b4 8BF82430 		strb	r3, [fp, #36]
 1283 00b8 F3E7     		b	.L129
 1284              	.L135:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1285              		.loc 1 2799 0
 1286 00ba 0023     		movs	r3, #0
 1287 00bc F4E7     		b	.L130
 1288              	.LVL170:
 1289              	.L131:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1290              		.loc 1 2771 0
 1291 00be 0620     		movs	r0, #6
 1292 00c0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1293              	.LVL171:
 1294              	.L133:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1295              		.loc 1 2790 0
 1296 00c4 0620     		movs	r0, #6
 1297 00c6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1298              	.LVL172:
 1299              	.L143:
 1300 00ca 00BF     		.align	2
 1301              	.L142:
 1302 00cc 00000000 		.word	.LC0
 1303 00d0 00000000 		.word	.LANCHOR1
 1304              		.cfi_endproc
 1305              	.LFE156:
 1307              		.section	.text.get_ldnumber,"ax",%progbits
 1308              		.align	1
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu fpv4-sp-d16
 1314              	get_ldnumber:
 1315              	.LFB158:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 74


2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 75


2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1316              		.loc 1 2907 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320              		@ link register save eliminated.
 1321              	.LVL173:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1322              		.loc 1 2919 0
 1323 0000 0168     		ldr	r1, [r0]
 1324 0002 09B1     		cbz	r1, .L158
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 76


 1325 0004 0A46     		mov	r2, r1
 1326 0006 03E0     		b	.L145
 1327              	.L158:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1328              		.loc 1 2910 0
 1329 0008 4FF0FF33 		mov	r3, #-1
 1330 000c 08E0     		b	.L155
 1331              	.LVL174:
 1332              	.L148:
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1333              		.loc 1 2920 0 discriminator 4
 1334 000e 0132     		adds	r2, r2, #1
 1335              	.LVL175:
 1336              	.L145:
 1337              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1338 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1339 0012 202B     		cmp	r3, #32
 1340 0014 01D9     		bls	.L147
 1341              		.loc 1 2920 0 discriminator 3
 1342 0016 3A2B     		cmp	r3, #58
 1343 0018 F9D1     		bne	.L148
 1344              	.L147:
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1345              		.loc 1 2921 0 is_stmt 1
 1346 001a 3A2B     		cmp	r3, #58
 1347 001c 02D0     		beq	.L159
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1348              		.loc 1 2951 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 77


 1349 001e 0023     		movs	r3, #0
 1350              	.LVL176:
 1351              	.L155:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1352              		.loc 1 2955 0
 1353 0020 1846     		mov	r0, r3
 1354              	.LVL177:
 1355 0022 7047     		bx	lr
 1356              	.LVL178:
 1357              	.L159:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1358              		.loc 1 2907 0
 1359 0024 10B4     		push	{r4}
 1360              	.LCFI17:
 1361              		.cfi_def_cfa_offset 4
 1362              		.cfi_offset 4, -4
 1363              	.LVL179:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1364              		.loc 1 2923 0
 1365 0026 4C1C     		adds	r4, r1, #1
 1366              	.LVL180:
 1367 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1368 002a 303B     		subs	r3, r3, #48
 1369              	.LVL181:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1370              		.loc 1 2924 0
 1371 002c 092B     		cmp	r3, #9
 1372 002e 08D8     		bhi	.L151
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1373              		.loc 1 2924 0 is_stmt 0 discriminator 1
 1374 0030 A242     		cmp	r2, r4
 1375 0032 09D1     		bne	.L152
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1376              		.loc 1 2925 0 is_stmt 1
 1377 0034 5BB9     		cbnz	r3, .L153
 1378              	.LVL182:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1379              		.loc 1 2927 0
 1380 0036 0132     		adds	r2, r2, #1
 1381              	.LVL183:
 1382 0038 0260     		str	r2, [r0]
 1383              	.LVL184:
 1384              	.L144:
 1385              		.loc 1 2955 0
 1386 003a 1846     		mov	r0, r3
 1387              	.LVL185:
 1388 003c 5DF8044B 		ldr	r4, [sp], #4
 1389              	.LCFI18:
 1390              		.cfi_remember_state
 1391              		.cfi_restore 4
 1392              		.cfi_def_cfa_offset 0
 1393              	.LVL186:
 1394 0040 7047     		bx	lr
 1395              	.LVL187:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 78


 1396              	.L151:
 1397              	.LCFI19:
 1398              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1399              		.loc 1 2910 0
 1400 0042 4FF0FF33 		mov	r3, #-1
 1401              	.LVL188:
 1402 0046 F8E7     		b	.L144
 1403              	.LVL189:
 1404              	.L152:
 1405 0048 4FF0FF33 		mov	r3, #-1
 1406              	.LVL190:
 1407 004c F5E7     		b	.L144
 1408              	.LVL191:
 1409              	.L153:
 1410 004e 4FF0FF33 		mov	r3, #-1
 1411              	.LVL192:
 1412 0052 F2E7     		b	.L144
 1413              		.cfi_endproc
 1414              	.LFE158:
 1416              		.section	.text.putc_init,"ax",%progbits
 1417              		.align	1
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu fpv4-sp-d16
 1423              	putc_init:
 1424              	.LFB184:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 79


2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 80


3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 81


3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 82


3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 83


3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 84


3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 85


3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 86


3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 87


3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 88


3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 89


3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 90


3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 91


3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 92


3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 93


3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 94


3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 95


3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 96


3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 97


4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 98


4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 99


4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 100


4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 101


4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 102


4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 103


4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 104


4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 105


4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 106


4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 107


4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 108


4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 109


4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 110


4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 111


4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 112


4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 113


4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 114


4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++)	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5023:Middlewares/Third_Party/FatFs/src/ff.c **** 		
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 
5026:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5027:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5030:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5032:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 115


5037:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5040:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5043:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5048:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5049:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5051:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5053:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5055:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5056:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5057:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5058:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5059:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5060:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5061:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5063:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5064:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 116


5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5117:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5120:Middlewares/Third_Party/FatFs/src/ff.c **** }
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5123:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5124:Middlewares/Third_Party/FatFs/src/ff.c **** 
5125:Middlewares/Third_Party/FatFs/src/ff.c **** 
5126:Middlewares/Third_Party/FatFs/src/ff.c **** 
5127:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5129:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5130:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 
5132:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5133:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5134:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5136:Middlewares/Third_Party/FatFs/src/ff.c **** )
5137:Middlewares/Third_Party/FatFs/src/ff.c **** {
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 
5143:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5145:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5148:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 117


5151:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 
5154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5165:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5168:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 118


5208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5211:Middlewares/Third_Party/FatFs/src/ff.c **** }
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5214:Middlewares/Third_Party/FatFs/src/ff.c **** 
5215:Middlewares/Third_Party/FatFs/src/ff.c **** 
5216:Middlewares/Third_Party/FatFs/src/ff.c **** 
5217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5218:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5220:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 
5222:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5225:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5227:Middlewares/Third_Party/FatFs/src/ff.c **** )
5228:Middlewares/Third_Party/FatFs/src/ff.c **** {
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5257:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5262:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5263:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 119


5265:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5267:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5274:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5281:Middlewares/Third_Party/FatFs/src/ff.c **** 
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5283:Middlewares/Third_Party/FatFs/src/ff.c **** }
5284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5285:Middlewares/Third_Party/FatFs/src/ff.c **** 
5286:Middlewares/Third_Party/FatFs/src/ff.c **** 
5287:Middlewares/Third_Party/FatFs/src/ff.c **** 
5288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5290:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5291:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 
5293:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** )
5300:Middlewares/Third_Party/FatFs/src/ff.c **** {
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5310:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5312:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5315:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 120


5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5333:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5335:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5377:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 121


5379:Middlewares/Third_Party/FatFs/src/ff.c **** 
5380:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5391:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 122


5436:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 123


5493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5539:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 124


5550:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 125


5607:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 126


5664:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 127


5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5741:Middlewares/Third_Party/FatFs/src/ff.c **** }
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 
5743:Middlewares/Third_Party/FatFs/src/ff.c **** 
5744:Middlewares/Third_Party/FatFs/src/ff.c **** 
5745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5746:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5747:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5748:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 
5750:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5751:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5754:Middlewares/Third_Party/FatFs/src/ff.c **** )
5755:Middlewares/Third_Party/FatFs/src/ff.c **** {
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 128


5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5806:Middlewares/Third_Party/FatFs/src/ff.c **** 
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5808:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5809:Middlewares/Third_Party/FatFs/src/ff.c **** }
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** 
5815:Middlewares/Third_Party/FatFs/src/ff.c **** 
5816:Middlewares/Third_Party/FatFs/src/ff.c **** 
5817:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5818:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5819:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5820:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 
5822:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5823:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5826:Middlewares/Third_Party/FatFs/src/ff.c **** )
5827:Middlewares/Third_Party/FatFs/src/ff.c **** {
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5832:Middlewares/Third_Party/FatFs/src/ff.c **** 
5833:Middlewares/Third_Party/FatFs/src/ff.c **** 
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 129


5835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5836:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5855:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5858:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5859:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5862:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5863:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5866:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5874:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5875:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5877:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5879:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5890:Middlewares/Third_Party/FatFs/src/ff.c **** }
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 130


5892:Middlewares/Third_Party/FatFs/src/ff.c **** 
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 
5895:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5896:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5897:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5898:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 
5901:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5902:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5905:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5906:Middlewares/Third_Party/FatFs/src/ff.c **** 
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 
5908:Middlewares/Third_Party/FatFs/src/ff.c **** static
5909:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5912:Middlewares/Third_Party/FatFs/src/ff.c **** )
5913:Middlewares/Third_Party/FatFs/src/ff.c **** {
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5923:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 
5925:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5926:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5935:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5944:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5947:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5948:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 131


5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5953:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5961:Middlewares/Third_Party/FatFs/src/ff.c **** }
5962:Middlewares/Third_Party/FatFs/src/ff.c **** 
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 
5964:Middlewares/Third_Party/FatFs/src/ff.c **** static
5965:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5967:Middlewares/Third_Party/FatFs/src/ff.c **** )
5968:Middlewares/Third_Party/FatFs/src/ff.c **** {
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5975:Middlewares/Third_Party/FatFs/src/ff.c **** }
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 
5978:Middlewares/Third_Party/FatFs/src/ff.c **** static
5979:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5982:Middlewares/Third_Party/FatFs/src/ff.c **** )
5983:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1425              		.loc 1 5983 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              		@ link register save eliminated.
 1430              	.LVL193:
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1431              		.loc 1 5984 0
 1432 0000 0160     		str	r1, [r0]
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1433              		.loc 1 5985 0
 1434 0002 0023     		movs	r3, #0
 1435 0004 4360     		str	r3, [r0, #4]
 1436 0006 8360     		str	r3, [r0, #8]
 1437 0008 7047     		bx	lr
 1438              		.cfi_endproc
 1439              	.LFE184:
 1441              		.section	.text.validate,"ax",%progbits
 1442              		.align	1
 1443              		.syntax unified
 1444              		.thumb
 1445              		.thumb_func
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 132


 1446              		.fpu fpv4-sp-d16
 1448              	validate:
 1449              	.LFB161:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1450              		.loc 1 3220 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              	.LVL194:
 1455 0000 38B5     		push	{r3, r4, r5, lr}
 1456              	.LCFI20:
 1457              		.cfi_def_cfa_offset 16
 1458              		.cfi_offset 3, -16
 1459              		.cfi_offset 4, -12
 1460              		.cfi_offset 5, -8
 1461              		.cfi_offset 14, -4
 1462 0002 0C46     		mov	r4, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1463              		.loc 1 3223 0
 1464 0004 20B1     		cbz	r0, .L162
 1465 0006 0546     		mov	r5, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1466              		.loc 1 3223 0 is_stmt 0 discriminator 1
 1467 0008 0368     		ldr	r3, [r0]
 1468 000a 0BB1     		cbz	r3, .L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1469              		.loc 1 3223 0 discriminator 2
 1470 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1471 000e 1AB9     		cbnz	r2, .L166
 1472              	.LVL195:
 1473              	.L162:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1474              		.loc 1 3224 0 is_stmt 1
 1475 0010 0023     		movs	r3, #0
 1476 0012 2360     		str	r3, [r4]
 1477              	.LVL196:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1478              		.loc 1 3225 0
 1479 0014 0920     		movs	r0, #9
 1480 0016 38BD     		pop	{r3, r4, r5, pc}
 1481              	.LVL197:
 1482              	.L166:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1483              		.loc 1 3223 0 discriminator 3
 1484 0018 D988     		ldrh	r1, [r3, #6]
 1485              	.LVL198:
 1486 001a 8288     		ldrh	r2, [r0, #4]
 1487 001c 9142     		cmp	r1, r2
 1488 001e F7D1     		bne	.L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1489              		.loc 1 3223 0 is_stmt 0 discriminator 4
 1490 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1491              	.LVL199:
 1492 0022 FFF7FEFF 		bl	disk_status
 1493              	.LVL200:
 1494 0026 10F0010F 		tst	r0, #1
 1495 002a F1D1     		bne	.L162
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 133


3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1496              		.loc 1 3227 0 is_stmt 1
 1497 002c 2B68     		ldr	r3, [r5]
 1498 002e 2360     		str	r3, [r4]
 1499              	.LVL201:
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1500              		.loc 1 3229 0
 1501 0030 0020     		movs	r0, #0
 1502              	.LVL202:
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1503              		.loc 1 3232 0
 1504 0032 38BD     		pop	{r3, r4, r5, pc}
 1505              		.cfi_endproc
 1506              	.LFE161:
 1508              		.section	.text.sync_window,"ax",%progbits
 1509              		.align	1
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv4-sp-d16
 1515              	sync_window:
 1516              	.LFB137:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1517              		.loc 1 886 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              	.LVL203:
 1522 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1523              	.LCFI21:
 1524              		.cfi_def_cfa_offset 24
 1525              		.cfi_offset 3, -24
 1526              		.cfi_offset 4, -20
 1527              		.cfi_offset 5, -16
 1528              		.cfi_offset 6, -12
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 1531              	.LVL204:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1532              		.loc 1 892 0
 1533 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1534 0004 0BB9     		cbnz	r3, .L175
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1535              		.loc 1 889 0
 1536 0006 0020     		movs	r0, #0
 1537              	.LVL205:
 1538 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1539              	.LVL206:
 1540              	.L175:
 1541 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1542              		.loc 1 893 0
 1543 000c C66A     		ldr	r6, [r0, #44]
 1544              	.LVL207:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1545              		.loc 1 894 0
 1546 000e 00F13007 		add	r7, r0, #48
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 134


 1547 0012 0123     		movs	r3, #1
 1548 0014 3246     		mov	r2, r6
 1549 0016 3946     		mov	r1, r7
 1550 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1551              	.LVL208:
 1552 001a FFF7FEFF 		bl	disk_write
 1553              	.LVL209:
 1554 001e A8B9     		cbnz	r0, .L172
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1555              		.loc 1 897 0
 1556 0020 0023     		movs	r3, #0
 1557 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1558              		.loc 1 898 0
 1559 0024 236A     		ldr	r3, [r4, #32]
 1560 0026 F31A     		subs	r3, r6, r3
 1561 0028 A269     		ldr	r2, [r4, #24]
 1562 002a 9342     		cmp	r3, r2
 1563 002c 10D2     		bcs	.L173
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1564              		.loc 1 899 0
 1565 002e A578     		ldrb	r5, [r4, #2]	@ zero_extendqisi2
 1566              	.LVL210:
 1567 0030 08E0     		b	.L169
 1568              	.L170:
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1569              		.loc 1 900 0 discriminator 3
 1570 0032 A369     		ldr	r3, [r4, #24]
 1571 0034 1E44     		add	r6, r6, r3
 1572              	.LVL211:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1573              		.loc 1 901 0 discriminator 3
 1574 0036 0123     		movs	r3, #1
 1575 0038 3246     		mov	r2, r6
 1576 003a 3946     		mov	r1, r7
 1577 003c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1578 003e FFF7FEFF 		bl	disk_write
 1579              	.LVL212:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1580              		.loc 1 899 0 discriminator 3
 1581 0042 013D     		subs	r5, r5, #1
 1582              	.LVL213:
 1583              	.L169:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1584              		.loc 1 899 0 is_stmt 0 discriminator 1
 1585 0044 012D     		cmp	r5, #1
 1586 0046 F4D8     		bhi	.L170
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1587              		.loc 1 889 0 is_stmt 1
 1588 0048 0020     		movs	r0, #0
 1589 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1590              	.LVL214:
 1591              	.L172:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1592              		.loc 1 895 0
 1593 004c 0120     		movs	r0, #1
 1594 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 135


 1595              	.LVL215:
 1596              	.L173:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1597              		.loc 1 889 0
 1598 0050 0020     		movs	r0, #0
 1599              	.LVL216:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1600              		.loc 1 907 0
 1601 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1602              		.cfi_endproc
 1603              	.LFE137:
 1605              		.section	.text.move_window,"ax",%progbits
 1606              		.align	1
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv4-sp-d16
 1612              	move_window:
 1613              	.LFB138:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1614              		.loc 1 916 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              	.LVL217:
 1619 0000 70B5     		push	{r4, r5, r6, lr}
 1620              	.LCFI22:
 1621              		.cfi_def_cfa_offset 16
 1622              		.cfi_offset 4, -16
 1623              		.cfi_offset 5, -12
 1624              		.cfi_offset 6, -8
 1625              		.cfi_offset 14, -4
 1626              	.LVL218:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1627              		.loc 1 920 0
 1628 0002 C36A     		ldr	r3, [r0, #44]
 1629 0004 8B42     		cmp	r3, r1
 1630 0006 14D0     		beq	.L179
 1631 0008 0446     		mov	r4, r0
 1632 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1633              		.loc 1 922 0
 1634 000c FFF7FEFF 		bl	sync_window
 1635              	.LVL219:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1636              		.loc 1 924 0
 1637 0010 0646     		mov	r6, r0
 1638 0012 08B1     		cbz	r0, .L182
 1639              	.LVL220:
 1640              	.L177:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1641              		.loc 1 933 0
 1642 0014 3046     		mov	r0, r6
 1643 0016 70BD     		pop	{r4, r5, r6, pc}
 1644              	.LVL221:
 1645              	.L182:
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 136


 1646              		.loc 1 925 0
 1647 0018 0123     		movs	r3, #1
 1648 001a 2A46     		mov	r2, r5
 1649 001c 04F13001 		add	r1, r4, #48
 1650 0020 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1651              	.LVL222:
 1652 0022 FFF7FEFF 		bl	disk_read
 1653              	.LVL223:
 1654 0026 10B1     		cbz	r0, .L178
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1655              		.loc 1 927 0
 1656 0028 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1657              		.loc 1 926 0
 1658 002a 4FF0FF35 		mov	r5, #-1
 1659              	.LVL224:
 1660              	.L178:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1661              		.loc 1 929 0
 1662 002e E562     		str	r5, [r4, #44]
 1663 0030 F0E7     		b	.L177
 1664              	.LVL225:
 1665              	.L179:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1666              		.loc 1 917 0
 1667 0032 0026     		movs	r6, #0
 1668 0034 EEE7     		b	.L177
 1669              		.cfi_endproc
 1670              	.LFE138:
 1672              		.section	.text.check_fs,"ax",%progbits
 1673              		.align	1
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1677              		.fpu fpv4-sp-d16
 1679              	check_fs:
 1680              	.LFB159:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1681              		.loc 1 2969 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              	.LVL226:
 1686 0000 10B5     		push	{r4, lr}
 1687              	.LCFI23:
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 4, -8
 1690              		.cfi_offset 14, -4
 1691 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1692              		.loc 1 2970 0
 1693 0004 0023     		movs	r3, #0
 1694 0006 C370     		strb	r3, [r0, #3]
 1695 0008 4FF0FF33 		mov	r3, #-1
 1696 000c C362     		str	r3, [r0, #44]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1697              		.loc 1 2971 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 137


 1698 000e FFF7FEFF 		bl	move_window
 1699              	.LVL227:
 1700 0012 08B1     		cbz	r0, .L192
 1701 0014 0420     		movs	r0, #4
 1702 0016 10BD     		pop	{r4, pc}
 1703              	.LVL228:
 1704              	.L192:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1705              		.loc 1 2973 0
 1706 0018 04F22E20 		addw	r0, r4, #558
 1707 001c FFF7FEFF 		bl	ld_word
 1708              	.LVL229:
 1709 0020 4AF65523 		movw	r3, #43605
 1710 0024 9842     		cmp	r0, r3
 1711 0026 01D0     		beq	.L193
 1712 0028 0320     		movs	r0, #3
 1713 002a 10BD     		pop	{r4, pc}
 1714              	.LVL230:
 1715              	.L193:
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1716              		.loc 1 2975 0
 1717 002c 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1718 0030 E92B     		cmp	r3, #233
 1719 0032 07D0     		beq	.L185
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1720              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1721 0034 236B     		ldr	r3, [r4, #48]
 1722 0036 03F0FF13 		and	r3, r3, #16711935
 1723 003a 0D4A     		ldr	r2, .L195
 1724 003c 9342     		cmp	r3, r2
 1725 003e 01D0     		beq	.L185
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1726              		.loc 1 2982 0 is_stmt 1
 1727 0040 0220     		movs	r0, #2
 1728 0042 10BD     		pop	{r4, pc}
 1729              	.LVL231:
 1730              	.L185:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1731              		.loc 1 2976 0
 1732 0044 04F16600 		add	r0, r4, #102
 1733 0048 FFF7FEFF 		bl	ld_dword
 1734              	.LVL232:
 1735 004c 20F07F40 		bic	r0, r0, #-16777216
 1736 0050 084B     		ldr	r3, .L195+4
 1737 0052 9842     		cmp	r0, r3
 1738 0054 0AD0     		beq	.L189
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1739              		.loc 1 2977 0
 1740 0056 04F18200 		add	r0, r4, #130
 1741 005a FFF7FEFF 		bl	ld_dword
 1742              	.LVL233:
 1743 005e 064B     		ldr	r3, .L195+8
 1744 0060 9842     		cmp	r0, r3
 1745 0062 01D0     		beq	.L194
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1746              		.loc 1 2982 0
 1747 0064 0220     		movs	r0, #2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 138


2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1748              		.loc 1 2983 0
 1749 0066 10BD     		pop	{r4, pc}
 1750              	.LVL234:
 1751              	.L194:
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1752              		.loc 1 2977 0
 1753 0068 0020     		movs	r0, #0
 1754 006a 10BD     		pop	{r4, pc}
 1755              	.LVL235:
 1756              	.L189:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1757              		.loc 1 2976 0
 1758 006c 0020     		movs	r0, #0
 1759 006e 10BD     		pop	{r4, pc}
 1760              	.LVL236:
 1761              	.L196:
 1762              		.align	2
 1763              	.L195:
 1764 0070 EB009000 		.word	9437419
 1765 0074 46415400 		.word	5521734
 1766 0078 46415433 		.word	861159750
 1767              		.cfi_endproc
 1768              	.LFE159:
 1770              		.section	.text.find_volume,"ax",%progbits
 1771              		.align	1
 1772              		.syntax unified
 1773              		.thumb
 1774              		.thumb_func
 1775              		.fpu fpv4-sp-d16
 1777              	find_volume:
 1778              	.LFB160:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1779              		.loc 1 2998 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 16
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783              	.LVL237:
 1784 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1785              	.LCFI24:
 1786              		.cfi_def_cfa_offset 32
 1787              		.cfi_offset 4, -32
 1788              		.cfi_offset 5, -28
 1789              		.cfi_offset 6, -24
 1790              		.cfi_offset 7, -20
 1791              		.cfi_offset 8, -16
 1792              		.cfi_offset 9, -12
 1793              		.cfi_offset 10, -8
 1794              		.cfi_offset 14, -4
 1795 0004 84B0     		sub	sp, sp, #16
 1796              	.LCFI25:
 1797              		.cfi_def_cfa_offset 48
 1798 0006 0E46     		mov	r6, r1
 1799 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1800              		.loc 1 3009 0
 1801 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 139


 1802 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1803              		.loc 1 3010 0
 1804 000e FFF7FEFF 		bl	get_ldnumber
 1805              	.LVL238:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1806              		.loc 1 3011 0
 1807 0012 051E     		subs	r5, r0, #0
 1808 0014 C0F23881 		blt	.L215
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1809              		.loc 1 3014 0
 1810 0018 A94B     		ldr	r3, .L249
 1811 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1812              	.LVL239:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1813              		.loc 1 3015 0
 1814 001e 002C     		cmp	r4, #0
 1815 0020 00F03681 		beq	.L216
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1816              		.loc 1 3018 0
 1817 0024 3460     		str	r4, [r6]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1818              		.loc 1 3020 0
 1819 0026 07F0FE07 		and	r7, r7, #254
 1820              	.LVL240:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1821              		.loc 1 3021 0
 1822 002a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1823 002c 7BB1     		cbz	r3, .L199
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1824              		.loc 1 3022 0
 1825 002e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1826              	.LVL241:
 1827 0030 FFF7FEFF 		bl	disk_status
 1828              	.LVL242:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1829              		.loc 1 3023 0
 1830 0034 10F0010F 		tst	r0, #1
 1831 0038 09D1     		bne	.L199
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1832              		.loc 1 3024 0
 1833 003a 002F     		cmp	r7, #0
 1834 003c 00F02A81 		beq	.L217
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1835              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1836 0040 10F0040F 		tst	r0, #4
 1837 0044 01D0     		beq	.L241
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1838              		.loc 1 3025 0 is_stmt 1
 1839 0046 0A20     		movs	r0, #10
 1840              	.LVL243:
 1841 0048 1FE1     		b	.L198
 1842              	.LVL244:
 1843              	.L241:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1844              		.loc 1 3027 0
 1845 004a 0020     		movs	r0, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 140


 1846              	.LVL245:
 1847 004c 1DE1     		b	.L198
 1848              	.L199:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1849              		.loc 1 3034 0
 1850 004e 0023     		movs	r3, #0
 1851 0050 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1852              		.loc 1 3035 0
 1853 0052 E8B2     		uxtb	r0, r5
 1854 0054 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1855              		.loc 1 3036 0
 1856 0056 FFF7FEFF 		bl	disk_initialize
 1857              	.LVL246:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1858              		.loc 1 3037 0
 1859 005a 10F0010F 		tst	r0, #1
 1860 005e 01D0     		beq	.L242
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1861              		.loc 1 3038 0
 1862 0060 0320     		movs	r0, #3
 1863              	.LVL247:
 1864 0062 12E1     		b	.L198
 1865              	.LVL248:
 1866              	.L242:
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1867              		.loc 1 3040 0
 1868 0064 27B1     		cbz	r7, .L200
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1869              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1870 0066 10F0040F 		tst	r0, #4
 1871 006a 01D0     		beq	.L200
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1872              		.loc 1 3041 0 is_stmt 1
 1873 006c 0A20     		movs	r0, #10
 1874              	.LVL249:
 1875 006e 0CE1     		b	.L198
 1876              	.LVL250:
 1877              	.L200:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1878              		.loc 1 3050 0
 1879 0070 0021     		movs	r1, #0
 1880 0072 2046     		mov	r0, r4
 1881              	.LVL251:
 1882 0074 FFF7FEFF 		bl	check_fs
 1883              	.LVL252:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1884              		.loc 1 3051 0
 1885 0078 0228     		cmp	r0, #2
 1886 007a 1DD0     		beq	.L221
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1887              		.loc 1 3049 0
 1888 007c 0026     		movs	r6, #0
 1889              	.LVL253:
 1890              	.L202:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 141


 1891              		.loc 1 3063 0
 1892 007e 0428     		cmp	r0, #4
 1893 0080 00F00A81 		beq	.L224
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1894              		.loc 1 3064 0
 1895 0084 0128     		cmp	r0, #1
 1896 0086 2DD9     		bls	.L243
 1897 0088 0D20     		movs	r0, #13
 1898              	.LVL254:
 1899 008a FEE0     		b	.L198
 1900              	.LVL255:
 1901              	.L222:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1902              		.loc 1 3054 0
 1903 008c 0020     		movs	r0, #0
 1904              	.LVL256:
 1905              	.L203:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1906              		.loc 1 3054 0 is_stmt 0 discriminator 4
 1907 008e 04AB     		add	r3, sp, #16
 1908 0090 03EB8503 		add	r3, r3, r5, lsl #2
 1909 0094 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1910              		.loc 1 3052 0 is_stmt 1 discriminator 4
 1911 0098 0135     		adds	r5, r5, #1
 1912              	.LVL257:
 1913              	.L201:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1914              		.loc 1 3052 0 is_stmt 0 discriminator 2
 1915 009a 032D     		cmp	r5, #3
 1916 009c 0ED8     		bhi	.L244
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 1917              		.loc 1 3053 0 is_stmt 1
 1918 009e 04F13000 		add	r0, r4, #48
 1919 00a2 2B01     		lsls	r3, r5, #4
 1920 00a4 03F5DF73 		add	r3, r3, #446
 1921 00a8 1844     		add	r0, r0, r3
 1922              	.LVL258:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1923              		.loc 1 3054 0
 1924 00aa 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1925 00ac 002B     		cmp	r3, #0
 1926 00ae EDD0     		beq	.L222
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1927              		.loc 1 3054 0 is_stmt 0 discriminator 1
 1928 00b0 0830     		adds	r0, r0, #8
 1929              	.LVL259:
 1930 00b2 FFF7FEFF 		bl	ld_dword
 1931              	.LVL260:
 1932 00b6 EAE7     		b	.L203
 1933              	.LVL261:
 1934              	.L221:
 1935 00b8 0025     		movs	r5, #0
 1936              	.LVL262:
 1937 00ba EEE7     		b	.L201
 1938              	.LVL263:
 1939              	.L244:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 142


 1940 00bc 0025     		movs	r5, #0
 1941              	.LVL264:
 1942 00be 08E0     		b	.L206
 1943              	.LVL265:
 1944              	.L245:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1945              		.loc 1 3060 0 is_stmt 1 discriminator 1
 1946 00c0 3146     		mov	r1, r6
 1947 00c2 2046     		mov	r0, r4
 1948 00c4 FFF7FEFF 		bl	check_fs
 1949              	.LVL266:
 1950              	.L205:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1951              		.loc 1 3061 0 discriminator 4
 1952 00c8 0128     		cmp	r0, #1
 1953 00ca D8D9     		bls	.L202
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1954              		.loc 1 3061 0 is_stmt 0 discriminator 1
 1955 00cc 0135     		adds	r5, r5, #1
 1956              	.LVL267:
 1957 00ce 032D     		cmp	r5, #3
 1958 00d0 D5D8     		bhi	.L202
 1959              	.LVL268:
 1960              	.L206:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 1961              		.loc 1 3059 0 is_stmt 1
 1962 00d2 04AB     		add	r3, sp, #16
 1963 00d4 03EB8503 		add	r3, r3, r5, lsl #2
 1964 00d8 53F8106C 		ldr	r6, [r3, #-16]
 1965              	.LVL269:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1966              		.loc 1 3060 0
 1967 00dc 002E     		cmp	r6, #0
 1968 00de EFD1     		bne	.L245
 1969 00e0 0320     		movs	r0, #3
 1970 00e2 F1E7     		b	.L205
 1971              	.LVL270:
 1972              	.L243:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1973              		.loc 1 3116 0
 1974 00e4 04F13B00 		add	r0, r4, #59
 1975              	.LVL271:
 1976 00e8 FFF7FEFF 		bl	ld_word
 1977              	.LVL272:
 1978 00ec B0F5007F 		cmp	r0, #512
 1979 00f0 01D0     		beq	.L246
 1980 00f2 0D20     		movs	r0, #13
 1981 00f4 C9E0     		b	.L198
 1982              	.L246:
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1983              		.loc 1 3118 0
 1984 00f6 04F14600 		add	r0, r4, #70
 1985 00fa FFF7FEFF 		bl	ld_word
 1986              	.LVL273:
 1987 00fe 8046     		mov	r8, r0
 1988              	.LVL274:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 143


 1989              		.loc 1 3119 0
 1990 0100 20B9     		cbnz	r0, .L207
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1991              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1992 0102 04F15400 		add	r0, r4, #84
 1993              	.LVL275:
 1994 0106 FFF7FEFF 		bl	ld_dword
 1995              	.LVL276:
 1996 010a 8046     		mov	r8, r0
 1997              	.LVL277:
 1998              	.L207:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1999              		.loc 1 3120 0 is_stmt 1
 2000 010c C4F81880 		str	r8, [r4, #24]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 2001              		.loc 1 3122 0
 2002 0110 94F84090 		ldrb	r9, [r4, #64]	@ zero_extendqisi2
 2003 0114 84F80290 		strb	r9, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2004              		.loc 1 3123 0
 2005 0118 09F1FF33 		add	r3, r9, #-1
 2006 011c DBB2     		uxtb	r3, r3
 2007 011e 012B     		cmp	r3, #1
 2008 0120 01D9     		bls	.L247
 2009 0122 0D20     		movs	r0, #13
 2010              	.LVL278:
 2011 0124 B1E0     		b	.L198
 2012              	.LVL279:
 2013              	.L247:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2014              		.loc 1 3124 0
 2015 0126 09FB08F9 		mul	r9, r9, r8
 2016              	.LVL280:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 2017              		.loc 1 3126 0
 2018 012a 94F83D70 		ldrb	r7, [r4, #61]	@ zero_extendqisi2
 2019              	.LVL281:
 2020 012e 6781     		strh	r7, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2021              		.loc 1 3127 0
 2022 0130 002F     		cmp	r7, #0
 2023 0132 00F0B380 		beq	.L228
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2024              		.loc 1 3127 0 is_stmt 0 discriminator 2
 2025 0136 7B1E     		subs	r3, r7, #1
 2026 0138 1F42     		tst	r7, r3
 2027 013a 01D0     		beq	.L248
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2028              		.loc 1 3127 0
 2029 013c 0D20     		movs	r0, #13
 2030 013e A4E0     		b	.L198
 2031              	.L248:
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 2032              		.loc 1 3129 0 is_stmt 1
 2033 0140 04F14100 		add	r0, r4, #65
 2034 0144 FFF7FEFF 		bl	ld_word
 2035              	.LVL282:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 144


 2036 0148 8246     		mov	r10, r0
 2037 014a 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2038              		.loc 1 3130 0
 2039 014c 10F00F0F 		tst	r0, #15
 2040 0150 40F0A680 		bne	.L230
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 2041              		.loc 1 3132 0
 2042 0154 04F14300 		add	r0, r4, #67
 2043 0158 FFF7FEFF 		bl	ld_word
 2044              	.LVL283:
 2045 015c 0546     		mov	r5, r0
 2046              	.LVL284:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2047              		.loc 1 3133 0
 2048 015e 20B9     		cbnz	r0, .L208
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2049              		.loc 1 3133 0 is_stmt 0 discriminator 1
 2050 0160 04F15000 		add	r0, r4, #80
 2051              	.LVL285:
 2052 0164 FFF7FEFF 		bl	ld_dword
 2053              	.LVL286:
 2054 0168 0546     		mov	r5, r0
 2055              	.LVL287:
 2056              	.L208:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 2057              		.loc 1 3135 0 is_stmt 1
 2058 016a 04F13E00 		add	r0, r4, #62
 2059              	.LVL288:
 2060 016e FFF7FEFF 		bl	ld_word
 2061              	.LVL289:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2062              		.loc 1 3136 0
 2063 0172 0246     		mov	r2, r0
 2064 0174 0028     		cmp	r0, #0
 2065 0176 00F09580 		beq	.L231
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2066              		.loc 1 3139 0
 2067 017a 09EB0003 		add	r3, r9, r0
 2068 017e 03EB1A13 		add	r3, r3, r10, lsr #4
 2069              	.LVL290:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2070              		.loc 1 3140 0
 2071 0182 9D42     		cmp	r5, r3
 2072 0184 C0F09080 		bcc	.L232
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2073              		.loc 1 3141 0
 2074 0188 ED1A     		subs	r5, r5, r3
 2075              	.LVL291:
 2076 018a B5FBF7F5 		udiv	r5, r5, r7
 2077              	.LVL292:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2078              		.loc 1 3142 0
 2079 018e 002D     		cmp	r5, #0
 2080 0190 00F08C80 		beq	.L233
 2081              	.LVL293:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 145


 2082              		.loc 1 3144 0
 2083 0194 4FF6F571 		movw	r1, #65525
 2084 0198 8D42     		cmp	r5, r1
 2085 019a 63D9     		bls	.L234
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2086              		.loc 1 3143 0
 2087 019c 0327     		movs	r7, #3
 2088              	.L209:
 2089              	.LVL294:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2090              		.loc 1 3145 0
 2091 019e 40F6F571 		movw	r1, #4085
 2092 01a2 8D42     		cmp	r5, r1
 2093 01a4 00D8     		bhi	.L210
 2094 01a6 0127     		movs	r7, #1
 2095              	.LVL295:
 2096              	.L210:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2097              		.loc 1 3148 0
 2098 01a8 0235     		adds	r5, r5, #2
 2099              	.LVL296:
 2100 01aa 6561     		str	r5, [r4, #20]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2101              		.loc 1 3149 0
 2102 01ac E661     		str	r6, [r4, #28]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2103              		.loc 1 3150 0
 2104 01ae 3244     		add	r2, r2, r6
 2105 01b0 2262     		str	r2, [r4, #32]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2106              		.loc 1 3151 0
 2107 01b2 3344     		add	r3, r3, r6
 2108              	.LVL297:
 2109 01b4 A362     		str	r3, [r4, #40]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2110              		.loc 1 3152 0
 2111 01b6 032F     		cmp	r7, #3
 2112 01b8 56D1     		bne	.L211
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2113              		.loc 1 3153 0
 2114 01ba 04F15A00 		add	r0, r4, #90
 2115              	.LVL298:
 2116 01be FFF7FEFF 		bl	ld_word
 2117              	.LVL299:
 2118 01c2 0028     		cmp	r0, #0
 2119 01c4 74D1     		bne	.L236
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2120              		.loc 1 3154 0
 2121 01c6 BAF1000F 		cmp	r10, #0
 2122 01ca 73D1     		bne	.L237
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2123              		.loc 1 3155 0
 2124 01cc 04F15C00 		add	r0, r4, #92
 2125 01d0 FFF7FEFF 		bl	ld_dword
 2126              	.LVL300:
 2127 01d4 6062     		str	r0, [r4, #36]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 146


 2128              		.loc 1 3156 0
 2129 01d6 AD00     		lsls	r5, r5, #2
 2130              	.LVL301:
 2131              	.L212:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2132              		.loc 1 3163 0
 2133 01d8 05F2FF15 		addw	r5, r5, #511
 2134              	.LVL302:
 2135 01dc B8EB552F 		cmp	r8, r5, lsr #9
 2136 01e0 6CD3     		bcc	.L239
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2137              		.loc 1 3167 0
 2138 01e2 4FF0FF33 		mov	r3, #-1
 2139 01e6 2361     		str	r3, [r4, #16]
 2140 01e8 E360     		str	r3, [r4, #12]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2141              		.loc 1 3168 0
 2142 01ea 8023     		movs	r3, #128
 2143 01ec 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2144              		.loc 1 3170 0
 2145 01ee 032F     		cmp	r7, #3
 2146 01f0 2CD1     		bne	.L214
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2147              		.loc 1 3171 0
 2148 01f2 04F16000 		add	r0, r4, #96
 2149 01f6 FFF7FEFF 		bl	ld_word
 2150              	.LVL303:
 2151 01fa 0128     		cmp	r0, #1
 2152 01fc 26D1     		bne	.L214
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2153              		.loc 1 3172 0
 2154 01fe 711C     		adds	r1, r6, #1
 2155 0200 2046     		mov	r0, r4
 2156 0202 FFF7FEFF 		bl	move_window
 2157              	.LVL304:
 2158 0206 08BB     		cbnz	r0, .L214
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2159              		.loc 1 3174 0
 2160 0208 0023     		movs	r3, #0
 2161 020a 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2162              		.loc 1 3175 0
 2163 020c 04F22E20 		addw	r0, r4, #558
 2164 0210 FFF7FEFF 		bl	ld_word
 2165              	.LVL305:
 2166 0214 4AF65523 		movw	r3, #43605
 2167 0218 9842     		cmp	r0, r3
 2168 021a 17D1     		bne	.L214
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2169              		.loc 1 3176 0
 2170 021c 04F13000 		add	r0, r4, #48
 2171 0220 FFF7FEFF 		bl	ld_dword
 2172              	.LVL306:
 2173 0224 274B     		ldr	r3, .L249+4
 2174 0226 9842     		cmp	r0, r3
 2175 0228 10D1     		bne	.L214
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 147


3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2176              		.loc 1 3177 0
 2177 022a 04F50570 		add	r0, r4, #532
 2178 022e FFF7FEFF 		bl	ld_dword
 2179              	.LVL307:
 2180 0232 254B     		ldr	r3, .L249+8
 2181 0234 9842     		cmp	r0, r3
 2182 0236 09D1     		bne	.L214
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2183              		.loc 1 3180 0
 2184 0238 04F50670 		add	r0, r4, #536
 2185 023c FFF7FEFF 		bl	ld_dword
 2186              	.LVL308:
 2187 0240 2061     		str	r0, [r4, #16]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2188              		.loc 1 3183 0
 2189 0242 04F50770 		add	r0, r4, #540
 2190 0246 FFF7FEFF 		bl	ld_dword
 2191              	.LVL309:
 2192 024a E060     		str	r0, [r4, #12]
 2193              	.L214:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2194              		.loc 1 3191 0
 2195 024c 2770     		strb	r7, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2196              		.loc 1 3192 0
 2197 024e 1F4A     		ldr	r2, .L249+12
 2198 0250 1388     		ldrh	r3, [r2]
 2199 0252 0133     		adds	r3, r3, #1
 2200 0254 9BB2     		uxth	r3, r3
 2201 0256 1380     		strh	r3, [r2]	@ movhi
 2202 0258 E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2203              		.loc 1 3203 0
 2204 025a 2046     		mov	r0, r4
 2205 025c FFF7FEFF 		bl	clear_lock
 2206              	.LVL310:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2207              		.loc 1 3205 0
 2208 0260 0020     		movs	r0, #0
 2209 0262 12E0     		b	.L198
 2210              	.LVL311:
 2211              	.L234:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2212              		.loc 1 3144 0
 2213 0264 0227     		movs	r7, #2
 2214 0266 9AE7     		b	.L209
 2215              	.LVL312:
 2216              	.L211:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2217              		.loc 1 3158 0
 2218 0268 BAF1000F 		cmp	r10, #0
 2219 026c 24D0     		beq	.L238
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2220              		.loc 1 3159 0
 2221 026e 4A44     		add	r2, r2, r9
 2222 0270 6262     		str	r2, [r4, #36]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 148


3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2223              		.loc 1 3161 0
 2224 0272 022F     		cmp	r7, #2
 2225 0274 01D1     		bne	.L213
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2226              		.loc 1 3161 0 is_stmt 0 discriminator 1
 2227 0276 6D00     		lsls	r5, r5, #1
 2228              	.LVL313:
 2229 0278 AEE7     		b	.L212
 2230              	.LVL314:
 2231              	.L213:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2232              		.loc 1 3161 0 discriminator 2
 2233 027a 05EB4503 		add	r3, r5, r5, lsl #1
 2234 027e 05F00105 		and	r5, r5, #1
 2235              	.LVL315:
 2236 0282 05EB5305 		add	r5, r5, r3, lsr #1
 2237 0286 A7E7     		b	.L212
 2238              	.LVL316:
 2239              	.L215:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2240              		.loc 1 3011 0 is_stmt 1
 2241 0288 0B20     		movs	r0, #11
 2242              	.LVL317:
 2243              	.L198:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2244              		.loc 1 3206 0
 2245 028a 04B0     		add	sp, sp, #16
 2246              	.LCFI26:
 2247              		.cfi_remember_state
 2248              		.cfi_def_cfa_offset 32
 2249              		@ sp needed
 2250 028c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2251              	.LVL318:
 2252              	.L216:
 2253              	.LCFI27:
 2254              		.cfi_restore_state
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2255              		.loc 1 3015 0
 2256 0290 0C20     		movs	r0, #12
 2257              	.LVL319:
 2258 0292 FAE7     		b	.L198
 2259              	.LVL320:
 2260              	.L217:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2261              		.loc 1 3027 0
 2262 0294 0020     		movs	r0, #0
 2263              	.LVL321:
 2264 0296 F8E7     		b	.L198
 2265              	.LVL322:
 2266              	.L224:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2267              		.loc 1 3063 0
 2268 0298 0120     		movs	r0, #1
 2269              	.LVL323:
 2270 029a F6E7     		b	.L198
 2271              	.LVL324:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 149


 2272              	.L228:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2273              		.loc 1 3127 0
 2274 029c 0D20     		movs	r0, #13
 2275 029e F4E7     		b	.L198
 2276              	.L230:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2277              		.loc 1 3130 0
 2278 02a0 0D20     		movs	r0, #13
 2279 02a2 F2E7     		b	.L198
 2280              	.LVL325:
 2281              	.L231:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2282              		.loc 1 3136 0
 2283 02a4 0D20     		movs	r0, #13
 2284              	.LVL326:
 2285 02a6 F0E7     		b	.L198
 2286              	.LVL327:
 2287              	.L232:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2288              		.loc 1 3140 0
 2289 02a8 0D20     		movs	r0, #13
 2290              	.LVL328:
 2291 02aa EEE7     		b	.L198
 2292              	.LVL329:
 2293              	.L233:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2294              		.loc 1 3142 0
 2295 02ac 0D20     		movs	r0, #13
 2296              	.LVL330:
 2297 02ae ECE7     		b	.L198
 2298              	.LVL331:
 2299              	.L236:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2300              		.loc 1 3153 0
 2301 02b0 0D20     		movs	r0, #13
 2302 02b2 EAE7     		b	.L198
 2303              	.L237:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2304              		.loc 1 3154 0
 2305 02b4 0D20     		movs	r0, #13
 2306 02b6 E8E7     		b	.L198
 2307              	.LVL332:
 2308              	.L238:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2309              		.loc 1 3158 0
 2310 02b8 0D20     		movs	r0, #13
 2311              	.LVL333:
 2312 02ba E6E7     		b	.L198
 2313              	.LVL334:
 2314              	.L239:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2315              		.loc 1 3163 0
 2316 02bc 0D20     		movs	r0, #13
 2317 02be E4E7     		b	.L198
 2318              	.L250:
 2319              		.align	2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 150


 2320              	.L249:
 2321 02c0 00000000 		.word	.LANCHOR2
 2322 02c4 52526141 		.word	1096897106
 2323 02c8 72724161 		.word	1631679090
 2324 02cc 00000000 		.word	.LANCHOR3
 2325              		.cfi_endproc
 2326              	.LFE160:
 2328              		.section	.text.put_fat,"ax",%progbits
 2329              		.align	1
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2333              		.fpu fpv4-sp-d16
 2335              	put_fat:
 2336              	.LFB142:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2337              		.loc 1 1086 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341              	.LVL335:
 2342 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2343              	.LCFI28:
 2344              		.cfi_def_cfa_offset 32
 2345              		.cfi_offset 4, -32
 2346              		.cfi_offset 5, -28
 2347              		.cfi_offset 6, -24
 2348              		.cfi_offset 7, -20
 2349              		.cfi_offset 8, -16
 2350              		.cfi_offset 9, -12
 2351              		.cfi_offset 10, -8
 2352              		.cfi_offset 14, -4
 2353              	.LVL336:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2354              		.loc 1 1091 0
 2355 0004 0129     		cmp	r1, #1
 2356 0006 7CD9     		bls	.L260
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2357              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2358 0008 4369     		ldr	r3, [r0, #20]
 2359 000a 9942     		cmp	r1, r3
 2360 000c 01D3     		bcc	.L265
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2361              		.loc 1 1089 0 is_stmt 1
 2362 000e 0225     		movs	r5, #2
 2363 0010 78E0     		b	.L252
 2364              	.L265:
 2365 0012 1746     		mov	r7, r2
 2366 0014 0C46     		mov	r4, r1
 2367 0016 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2368              		.loc 1 1092 0
 2369 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2370 001a 022B     		cmp	r3, #2
 2371 001c 43D0     		beq	.L253
 2372 001e 032B     		cmp	r3, #3
 2373 0020 54D0     		beq	.L254
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 151


 2374 0022 012B     		cmp	r3, #1
 2375 0024 01D0     		beq	.L266
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2376              		.loc 1 1089 0
 2377 0026 0225     		movs	r5, #2
 2378 0028 6CE0     		b	.L252
 2379              	.L266:
 2380              	.LVL337:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2381              		.loc 1 1094 0
 2382 002a 01EB5108 		add	r8, r1, r1, lsr #1
 2383              	.LVL338:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2384              		.loc 1 1095 0
 2385 002e 016A     		ldr	r1, [r0, #32]
 2386              	.LVL339:
 2387 0030 01EB5821 		add	r1, r1, r8, lsr #9
 2388 0034 FFF7FEFF 		bl	move_window
 2389              	.LVL340:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2390              		.loc 1 1096 0
 2391 0038 0546     		mov	r5, r0
 2392 003a 0028     		cmp	r0, #0
 2393 003c 62D1     		bne	.L252
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2394              		.loc 1 1097 0
 2395 003e 06F1300A 		add	r10, r6, #48
 2396 0042 08F10109 		add	r9, r8, #1
 2397              	.LVL341:
 2398 0046 C8F30808 		ubfx	r8, r8, #0, #9
 2399              	.LVL342:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2400              		.loc 1 1098 0
 2401 004a 14F00104 		ands	r4, r4, #1
 2402              	.LVL343:
 2403 004e 1FD0     		beq	.L256
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2404              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2405 0050 1AF90830 		ldrsb	r3, [r10, r8]
 2406 0054 03F00F03 		and	r3, r3, #15
 2407 0058 3A01     		lsls	r2, r7, #4
 2408 005a 02F47F62 		and	r2, r2, #4080
 2409 005e 1343     		orrs	r3, r3, r2
 2410 0060 DBB2     		uxtb	r3, r3
 2411              	.L257:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2412              		.loc 1 1098 0 discriminator 4
 2413 0062 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2414              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2415 0066 0123     		movs	r3, #1
 2416 0068 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2417              		.loc 1 1100 0 discriminator 4
 2418 006a 316A     		ldr	r1, [r6, #32]
 2419 006c 01EB5921 		add	r1, r1, r9, lsr #9
 2420 0070 3046     		mov	r0, r6
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 152


 2421              	.LVL344:
 2422 0072 FFF7FEFF 		bl	move_window
 2423              	.LVL345:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2424              		.loc 1 1101 0 discriminator 4
 2425 0076 0546     		mov	r5, r0
 2426 0078 0028     		cmp	r0, #0
 2427 007a 43D1     		bne	.L252
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2428              		.loc 1 1102 0
 2429 007c C9F30809 		ubfx	r9, r9, #0, #9
 2430              	.LVL346:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2431              		.loc 1 1103 0
 2432 0080 44B1     		cbz	r4, .L258
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2433              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2434 0082 C7F30712 		ubfx	r2, r7, #4, #8
 2435              	.LVL347:
 2436              	.L259:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2437              		.loc 1 1103 0 discriminator 4
 2438 0086 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2439              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2440 008a 0123     		movs	r3, #1
 2441 008c F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2442              		.loc 1 1105 0 discriminator 4
 2443 008e 39E0     		b	.L252
 2444              	.LVL348:
 2445              	.L256:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2446              		.loc 1 1098 0 discriminator 2
 2447 0090 FBB2     		uxtb	r3, r7
 2448 0092 E6E7     		b	.L257
 2449              	.LVL349:
 2450              	.L258:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2451              		.loc 1 1103 0 discriminator 2
 2452 0094 1AF90920 		ldrsb	r2, [r10, r9]
 2453 0098 22F00F02 		bic	r2, r2, #15
 2454 009c C7F30327 		ubfx	r7, r7, #8, #4
 2455              	.LVL350:
 2456 00a0 3A43     		orrs	r2, r2, r7
 2457 00a2 D2B2     		uxtb	r2, r2
 2458 00a4 EFE7     		b	.L259
 2459              	.LVL351:
 2460              	.L253:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2461              		.loc 1 1108 0
 2462 00a6 016A     		ldr	r1, [r0, #32]
 2463              	.LVL352:
 2464 00a8 01EB1421 		add	r1, r1, r4, lsr #8
 2465 00ac FFF7FEFF 		bl	move_window
 2466              	.LVL353:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 153


 2467              		.loc 1 1109 0
 2468 00b0 0546     		mov	r5, r0
 2469 00b2 38BB     		cbnz	r0, .L252
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2470              		.loc 1 1110 0
 2471 00b4 06F13000 		add	r0, r6, #48
 2472              	.LVL354:
 2473 00b8 6300     		lsls	r3, r4, #1
 2474 00ba 03F4FF73 		and	r3, r3, #510
 2475 00be B9B2     		uxth	r1, r7
 2476 00c0 1844     		add	r0, r0, r3
 2477 00c2 FFF7FEFF 		bl	st_word
 2478              	.LVL355:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2479              		.loc 1 1111 0
 2480 00c6 0123     		movs	r3, #1
 2481 00c8 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2482              		.loc 1 1112 0
 2483 00ca 1BE0     		b	.L252
 2484              	.LVL356:
 2485              	.L254:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2486              		.loc 1 1118 0
 2487 00cc 016A     		ldr	r1, [r0, #32]
 2488              	.LVL357:
 2489 00ce 01EBD411 		add	r1, r1, r4, lsr #7
 2490 00d2 FFF7FEFF 		bl	move_window
 2491              	.LVL358:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2492              		.loc 1 1119 0
 2493 00d6 0546     		mov	r5, r0
 2494 00d8 A0B9     		cbnz	r0, .L252
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2495              		.loc 1 1121 0
 2496 00da 27F07047 		bic	r7, r7, #-268435456
 2497              	.LVL359:
 2498 00de 06F13003 		add	r3, r6, #48
 2499 00e2 A100     		lsls	r1, r4, #2
 2500 00e4 01F4FE71 		and	r1, r1, #508
 2501 00e8 5C18     		adds	r4, r3, r1
 2502              	.LVL360:
 2503 00ea 2046     		mov	r0, r4
 2504              	.LVL361:
 2505 00ec FFF7FEFF 		bl	ld_dword
 2506              	.LVL362:
 2507 00f0 00F07041 		and	r1, r0, #-268435456
 2508              	.LVL363:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2509              		.loc 1 1123 0
 2510 00f4 3943     		orrs	r1, r1, r7
 2511              	.LVL364:
 2512 00f6 2046     		mov	r0, r4
 2513 00f8 FFF7FEFF 		bl	st_dword
 2514              	.LVL365:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2515              		.loc 1 1124 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 154


 2516 00fc 0123     		movs	r3, #1
 2517 00fe F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2518              		.loc 1 1125 0
 2519 0100 00E0     		b	.L252
 2520              	.LVL366:
 2521              	.L260:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2522              		.loc 1 1089 0
 2523 0102 0225     		movs	r5, #2
 2524              	.LVL367:
 2525              	.L252:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2526              		.loc 1 1129 0
 2527 0104 2846     		mov	r0, r5
 2528 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2529              		.cfi_endproc
 2530              	.LFE142:
 2532              		.section	.text.get_fat,"ax",%progbits
 2533              		.align	1
 2534              		.syntax unified
 2535              		.thumb
 2536              		.thumb_func
 2537              		.fpu fpv4-sp-d16
 2539              	get_fat:
 2540              	.LFB141:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2541              		.loc 1 1005 0
 2542              		.cfi_startproc
 2543              		@ args = 0, pretend = 0, frame = 0
 2544              		@ frame_needed = 0, uses_anonymous_args = 0
 2545              	.LVL368:
 2546 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2547              	.LCFI29:
 2548              		.cfi_def_cfa_offset 24
 2549              		.cfi_offset 3, -24
 2550              		.cfi_offset 4, -20
 2551              		.cfi_offset 5, -16
 2552              		.cfi_offset 6, -12
 2553              		.cfi_offset 7, -8
 2554              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2555              		.loc 1 1008 0
 2556 0002 0668     		ldr	r6, [r0]
 2557              	.LVL369:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2558              		.loc 1 1011 0
 2559 0004 0129     		cmp	r1, #1
 2560 0006 5ED9     		bls	.L273
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2561              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2562 0008 7369     		ldr	r3, [r6, #20]
 2563 000a 9942     		cmp	r1, r3
 2564 000c 5DD2     		bcs	.L274
 2565 000e 0C46     		mov	r4, r1
 2566              	.LVL370:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 155


 2567              		.loc 1 1017 0 is_stmt 1
 2568 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2569 0012 022B     		cmp	r3, #2
 2570 0014 30D0     		beq	.L269
 2571 0016 032B     		cmp	r3, #3
 2572 0018 41D0     		beq	.L270
 2573 001a 012B     		cmp	r3, #1
 2574 001c 01D0     		beq	.L282
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2575              		.loc 1 1065 0
 2576 001e 0120     		movs	r0, #1
 2577              	.LVL371:
 2578 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2579              	.LVL372:
 2580              	.L282:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2581              		.loc 1 1019 0
 2582 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2583              	.LVL373:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2584              		.loc 1 1020 0
 2585 0026 316A     		ldr	r1, [r6, #32]
 2586              	.LVL374:
 2587 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2588 002c 3046     		mov	r0, r6
 2589              	.LVL375:
 2590 002e FFF7FEFF 		bl	move_window
 2591              	.LVL376:
 2592 0032 10B1     		cbz	r0, .L283
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2593              		.loc 1 1015 0
 2594 0034 4FF0FF30 		mov	r0, #-1
 2595 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2596              	.LVL377:
 2597              	.L283:
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2598              		.loc 1 1021 0
 2599 003a 6F1C     		adds	r7, r5, #1
 2600              	.LVL378:
 2601 003c C5F30805 		ubfx	r5, r5, #0, #9
 2602 0040 3544     		add	r5, r5, r6
 2603 0042 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2604              	.LVL379:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2605              		.loc 1 1022 0
 2606 0046 316A     		ldr	r1, [r6, #32]
 2607 0048 01EB5721 		add	r1, r1, r7, lsr #9
 2608 004c 3046     		mov	r0, r6
 2609 004e FFF7FEFF 		bl	move_window
 2610              	.LVL380:
 2611 0052 10B1     		cbz	r0, .L284
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2612              		.loc 1 1015 0
 2613 0054 4FF0FF30 		mov	r0, #-1
 2614 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2615              	.LVL381:
 2616              	.L284:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 156


1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2617              		.loc 1 1023 0
 2618 005a C7F30803 		ubfx	r3, r7, #0, #9
 2619 005e 3344     		add	r3, r3, r6
 2620 0060 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2621 0064 45EA0020 		orr	r0, r5, r0, lsl #8
 2622              	.LVL382:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2623              		.loc 1 1024 0
 2624 0068 14F0010F 		tst	r4, #1
 2625 006c 01D0     		beq	.L272
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2626              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2627 006e 0009     		lsrs	r0, r0, #4
 2628              	.LVL383:
 2629 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2630              	.LVL384:
 2631              	.L272:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2632              		.loc 1 1024 0 discriminator 2
 2633 0072 C0F30B00 		ubfx	r0, r0, #0, #12
 2634              	.LVL385:
 2635 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2636              	.LVL386:
 2637              	.L269:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2638              		.loc 1 1028 0 is_stmt 1
 2639 0078 316A     		ldr	r1, [r6, #32]
 2640              	.LVL387:
 2641 007a 01EB1421 		add	r1, r1, r4, lsr #8
 2642 007e 3046     		mov	r0, r6
 2643              	.LVL388:
 2644 0080 FFF7FEFF 		bl	move_window
 2645              	.LVL389:
 2646 0084 10B1     		cbz	r0, .L285
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2647              		.loc 1 1015 0
 2648 0086 4FF0FF30 		mov	r0, #-1
 2649 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2650              	.LVL390:
 2651              	.L285:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2652              		.loc 1 1029 0
 2653 008c 06F13000 		add	r0, r6, #48
 2654 0090 6100     		lsls	r1, r4, #1
 2655 0092 01F4FF71 		and	r1, r1, #510
 2656 0096 0844     		add	r0, r0, r1
 2657 0098 FFF7FEFF 		bl	ld_word
 2658              	.LVL391:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2659              		.loc 1 1030 0
 2660 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2661              	.LVL392:
 2662              	.L270:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2663              		.loc 1 1033 0
 2664 009e 316A     		ldr	r1, [r6, #32]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 157


 2665              	.LVL393:
 2666 00a0 01EBD411 		add	r1, r1, r4, lsr #7
 2667 00a4 3046     		mov	r0, r6
 2668              	.LVL394:
 2669 00a6 FFF7FEFF 		bl	move_window
 2670              	.LVL395:
 2671 00aa 10B1     		cbz	r0, .L286
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2672              		.loc 1 1015 0
 2673 00ac 4FF0FF30 		mov	r0, #-1
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2674              		.loc 1 1070 0
 2675 00b0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2676              	.LVL396:
 2677              	.L286:
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2678              		.loc 1 1034 0
 2679 00b2 3036     		adds	r6, r6, #48
 2680              	.LVL397:
 2681 00b4 A100     		lsls	r1, r4, #2
 2682 00b6 01F4FE70 		and	r0, r1, #508
 2683 00ba 3044     		add	r0, r0, r6
 2684 00bc FFF7FEFF 		bl	ld_dword
 2685              	.LVL398:
 2686 00c0 20F07040 		bic	r0, r0, #-268435456
 2687              	.LVL399:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2688              		.loc 1 1035 0
 2689 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2690              	.LVL400:
 2691              	.L273:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2692              		.loc 1 1012 0
 2693 00c6 0120     		movs	r0, #1
 2694              	.LVL401:
 2695 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2696              	.LVL402:
 2697              	.L274:
 2698 00ca 0120     		movs	r0, #1
 2699              	.LVL403:
 2700 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2701              		.cfi_endproc
 2702              	.LFE141:
 2704              		.section	.text.dir_sdi,"ax",%progbits
 2705              		.align	1
 2706              		.syntax unified
 2707              		.thumb
 2708              		.thumb_func
 2709              		.fpu fpv4-sp-d16
 2711              	dir_sdi:
 2712              	.LFB146:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2713              		.loc 1 1474 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717              	.LVL404:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 158


 2718 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2719              	.LCFI30:
 2720              		.cfi_def_cfa_offset 24
 2721              		.cfi_offset 4, -24
 2722              		.cfi_offset 5, -20
 2723              		.cfi_offset 6, -16
 2724              		.cfi_offset 7, -12
 2725              		.cfi_offset 8, -8
 2726              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2727              		.loc 1 1476 0
 2728 0004 0768     		ldr	r7, [r0]
 2729              	.LVL405:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2730              		.loc 1 1479 0
 2731 0006 B1F5001F 		cmp	r1, #2097152
 2732 000a 02D3     		bcc	.L302
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2733              		.loc 1 1480 0
 2734 000c 0220     		movs	r0, #2
 2735              	.LVL406:
 2736 000e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2737              	.LVL407:
 2738              	.L302:
 2739 0012 0646     		mov	r6, r0
 2740 0014 0C46     		mov	r4, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2741              		.loc 1 1479 0 discriminator 1
 2742 0016 11F01F0F 		tst	r1, #31
 2743 001a 02D0     		beq	.L303
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2744              		.loc 1 1480 0
 2745 001c 0220     		movs	r0, #2
 2746              	.LVL408:
 2747 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2748              	.LVL409:
 2749              	.L303:
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2750              		.loc 1 1482 0
 2751 0022 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2752              		.loc 1 1483 0
 2753 0024 8568     		ldr	r5, [r0, #8]
 2754              	.LVL410:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2755              		.loc 1 1484 0
 2756 0026 1DB9     		cbnz	r5, .L289
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2757              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2758 0028 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2759 002a 022B     		cmp	r3, #2
 2760 002c 00D9     		bls	.L289
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2761              		.loc 1 1485 0 is_stmt 1
 2762 002e 7D6A     		ldr	r5, [r7, #36]
 2763              	.LVL411:
 2764              	.L289:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 159


1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2765              		.loc 1 1489 0
 2766 0030 75B9     		cbnz	r5, .L290
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2767              		.loc 1 1490 0
 2768 0032 3B89     		ldrh	r3, [r7, #8]
 2769 0034 B3EB541F 		cmp	r3, r4, lsr #5
 2770 0038 02D8     		bhi	.L304
 2771 003a 0220     		movs	r0, #2
 2772              	.LVL412:
 2773 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2774              	.LVL413:
 2775              	.L304:
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2776              		.loc 1 1491 0
 2777 0040 7B6A     		ldr	r3, [r7, #36]
 2778 0042 F361     		str	r3, [r6, #28]
 2779              	.LVL414:
 2780              	.L291:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2781              		.loc 1 1503 0
 2782 0044 B561     		str	r5, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2783              		.loc 1 1504 0
 2784 0046 F369     		ldr	r3, [r6, #28]
 2785 0048 0BBB     		cbnz	r3, .L305
 2786 004a 0220     		movs	r0, #2
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2787              		.loc 1 1509 0
 2788 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2789              	.LVL415:
 2790              	.L290:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2791              		.loc 1 1494 0
 2792 0050 B7F80A80 		ldrh	r8, [r7, #10]
 2793 0054 4FEA4828 		lsl	r8, r8, #9
 2794              	.LVL416:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2795              		.loc 1 1495 0
 2796 0058 01E0     		b	.L292
 2797              	.LVL417:
 2798              	.L307:
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2799              		.loc 1 1499 0
 2800 005a A4EB0804 		sub	r4, r4, r8
 2801              	.LVL418:
 2802              	.L292:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2803              		.loc 1 1495 0
 2804 005e 4445     		cmp	r4, r8
 2805 0060 0FD3     		bcc	.L306
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2806              		.loc 1 1496 0
 2807 0062 2946     		mov	r1, r5
 2808 0064 3046     		mov	r0, r6
 2809 0066 FFF7FEFF 		bl	get_fat
 2810              	.LVL419:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 160


 2811 006a 0546     		mov	r5, r0
 2812              	.LVL420:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2813              		.loc 1 1497 0
 2814 006c B0F1FF3F 		cmp	r0, #-1
 2815 0070 18D0     		beq	.L297
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2816              		.loc 1 1498 0
 2817 0072 0128     		cmp	r0, #1
 2818 0074 19D9     		bls	.L298
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2819              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2820 0076 7B69     		ldr	r3, [r7, #20]
 2821 0078 9842     		cmp	r0, r3
 2822 007a EED3     		bcc	.L307
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2823              		.loc 1 1498 0
 2824 007c 0220     		movs	r0, #2
 2825              	.LVL421:
 2826 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2827              	.LVL422:
 2828              	.L306:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2829              		.loc 1 1501 0 is_stmt 1
 2830 0082 2946     		mov	r1, r5
 2831 0084 3846     		mov	r0, r7
 2832 0086 FFF7FEFF 		bl	clust2sect
 2833              	.LVL423:
 2834 008a F061     		str	r0, [r6, #28]
 2835 008c DAE7     		b	.L291
 2836              	.LVL424:
 2837              	.L305:
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2838              		.loc 1 1505 0
 2839 008e 03EB5423 		add	r3, r3, r4, lsr #9
 2840 0092 F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2841              		.loc 1 1506 0
 2842 0094 3037     		adds	r7, r7, #48
 2843              	.LVL425:
 2844 0096 C4F30804 		ubfx	r4, r4, #0, #9
 2845              	.LVL426:
 2846 009a 3C44     		add	r4, r4, r7
 2847 009c 3462     		str	r4, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2848              		.loc 1 1508 0
 2849 009e 0020     		movs	r0, #0
 2850 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2851              	.LVL427:
 2852              	.L297:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2853              		.loc 1 1497 0
 2854 00a4 0120     		movs	r0, #1
 2855              	.LVL428:
 2856 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2857              	.LVL429:
 2858              	.L298:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 161


1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2859              		.loc 1 1498 0
 2860 00aa 0220     		movs	r0, #2
 2861              	.LVL430:
 2862 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2863              		.cfi_endproc
 2864              	.LFE146:
 2866              		.section	.text.create_chain,"ax",%progbits
 2867              		.align	1
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu fpv4-sp-d16
 2873              	create_chain:
 2874              	.LFB144:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2875              		.loc 1 1355 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              	.LVL431:
 2880 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2881              	.LCFI31:
 2882              		.cfi_def_cfa_offset 24
 2883              		.cfi_offset 4, -24
 2884              		.cfi_offset 5, -20
 2885              		.cfi_offset 6, -16
 2886              		.cfi_offset 7, -12
 2887              		.cfi_offset 8, -8
 2888              		.cfi_offset 14, -4
 2889 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2890              		.loc 1 1358 0
 2891 0006 0668     		ldr	r6, [r0]
 2892              	.LVL432:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2893              		.loc 1 1361 0
 2894 0008 8846     		mov	r8, r1
 2895 000a 31B9     		cbnz	r1, .L309
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2896              		.loc 1 1362 0
 2897 000c F568     		ldr	r5, [r6, #12]
 2898              	.LVL433:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2899              		.loc 1 1363 0
 2900 000e 8DB1     		cbz	r5, .L318
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2901              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2902 0010 7369     		ldr	r3, [r6, #20]
 2903 0012 9D42     		cmp	r5, r3
 2904 0014 0FD3     		bcc	.L310
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2905              		.loc 1 1363 0
 2906 0016 0125     		movs	r5, #1
 2907              	.LVL434:
 2908 0018 0DE0     		b	.L310
 2909              	.LVL435:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 162


 2910              	.L309:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2911              		.loc 1 1366 0 is_stmt 1
 2912 001a FFF7FEFF 		bl	get_fat
 2913              	.LVL436:
 2914 001e 0346     		mov	r3, r0
 2915              	.LVL437:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2916              		.loc 1 1367 0
 2917 0020 0128     		cmp	r0, #1
 2918 0022 47D9     		bls	.L320
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2919              		.loc 1 1368 0
 2920 0024 B0F1FF3F 		cmp	r0, #-1
 2921 0028 49D0     		beq	.L308
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2922              		.loc 1 1369 0
 2923 002a 7269     		ldr	r2, [r6, #20]
 2924 002c 9042     		cmp	r0, r2
 2925 002e 46D3     		bcc	.L308
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2926              		.loc 1 1370 0
 2927 0030 4546     		mov	r5, r8
 2928 0032 00E0     		b	.L310
 2929              	.LVL438:
 2930              	.L318:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2931              		.loc 1 1363 0
 2932 0034 0125     		movs	r5, #1
 2933              	.LVL439:
 2934              	.L310:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2935              		.loc 1 1400 0
 2936 0036 2C46     		mov	r4, r5
 2937 0038 0CE0     		b	.L314
 2938              	.LVL440:
 2939              	.L312:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2940              		.loc 1 1407 0
 2941 003a 2146     		mov	r1, r4
 2942 003c 3846     		mov	r0, r7
 2943 003e FFF7FEFF 		bl	get_fat
 2944              	.LVL441:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2945              		.loc 1 1408 0
 2946 0042 0346     		mov	r3, r0
 2947 0044 70B1     		cbz	r0, .L313
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2948              		.loc 1 1409 0
 2949 0046 0128     		cmp	r0, #1
 2950 0048 39D0     		beq	.L308
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2951              		.loc 1 1409 0 is_stmt 0 discriminator 2
 2952 004a B0F1FF3F 		cmp	r0, #-1
 2953 004e 36D0     		beq	.L308
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2954              		.loc 1 1410 0 is_stmt 1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 163


 2955 0050 AC42     		cmp	r4, r5
 2956 0052 33D0     		beq	.L325
 2957              	.LVL442:
 2958              	.L314:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2959              		.loc 1 1402 0
 2960 0054 0134     		adds	r4, r4, #1
 2961              	.LVL443:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 2962              		.loc 1 1403 0
 2963 0056 7369     		ldr	r3, [r6, #20]
 2964 0058 9C42     		cmp	r4, r3
 2965 005a EED3     		bcc	.L312
 2966              	.LVL444:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2967              		.loc 1 1405 0
 2968 005c 012D     		cmp	r5, #1
 2969 005e 2BD9     		bls	.L321
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 2970              		.loc 1 1404 0
 2971 0060 0224     		movs	r4, #2
 2972 0062 EAE7     		b	.L312
 2973              	.LVL445:
 2974              	.L313:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 2975              		.loc 1 1412 0
 2976 0064 4FF0FF32 		mov	r2, #-1
 2977 0068 2146     		mov	r1, r4
 2978 006a 3046     		mov	r0, r6
 2979              	.LVL446:
 2980 006c FFF7FEFF 		bl	put_fat
 2981              	.LVL447:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 2982              		.loc 1 1413 0
 2983 0070 0346     		mov	r3, r0
 2984 0072 10B9     		cbnz	r0, .L315
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 2985              		.loc 1 1413 0 is_stmt 0 discriminator 1
 2986 0074 B8F1000F 		cmp	r8, #0
 2987 0078 0ED1     		bne	.L326
 2988              	.LVL448:
 2989              	.L315:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 2990              		.loc 1 1418 0 is_stmt 1
 2991 007a A3B9     		cbnz	r3, .L316
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2992              		.loc 1 1419 0
 2993 007c F460     		str	r4, [r6, #12]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 2994              		.loc 1 1420 0
 2995 007e 3369     		ldr	r3, [r6, #16]
 2996              	.LVL449:
 2997 0080 7269     		ldr	r2, [r6, #20]
 2998 0082 023A     		subs	r2, r2, #2
 2999 0084 9342     		cmp	r3, r2
 3000 0086 01D8     		bhi	.L317
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 164


 3001              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3002 0088 013B     		subs	r3, r3, #1
 3003 008a 3361     		str	r3, [r6, #16]
 3004              	.L317:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3005              		.loc 1 1421 0 is_stmt 1
 3006 008c 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3007 008e 43F00103 		orr	r3, r3, #1
 3008 0092 3371     		strb	r3, [r6, #4]
 3009 0094 2346     		mov	r3, r4
 3010 0096 12E0     		b	.L308
 3011              	.LVL450:
 3012              	.L326:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3013              		.loc 1 1414 0
 3014 0098 2246     		mov	r2, r4
 3015 009a 4146     		mov	r1, r8
 3016 009c 3046     		mov	r0, r6
 3017              	.LVL451:
 3018 009e FFF7FEFF 		bl	put_fat
 3019              	.LVL452:
 3020 00a2 0346     		mov	r3, r0
 3021              	.LVL453:
 3022 00a4 E9E7     		b	.L315
 3023              	.L316:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3024              		.loc 1 1423 0
 3025 00a6 012B     		cmp	r3, #1
 3026 00a8 01D0     		beq	.L327
 3027 00aa 0123     		movs	r3, #1
 3028              	.LVL454:
 3029 00ac 07E0     		b	.L308
 3030              	.LVL455:
 3031              	.L327:
 3032 00ae 4FF0FF33 		mov	r3, #-1
 3033              	.LVL456:
 3034 00b2 04E0     		b	.L308
 3035              	.LVL457:
 3036              	.L320:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3037              		.loc 1 1367 0
 3038 00b4 0123     		movs	r3, #1
 3039 00b6 02E0     		b	.L308
 3040              	.LVL458:
 3041              	.L321:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3042              		.loc 1 1405 0
 3043 00b8 0023     		movs	r3, #0
 3044 00ba 00E0     		b	.L308
 3045              	.LVL459:
 3046              	.L325:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3047              		.loc 1 1410 0
 3048 00bc 0023     		movs	r3, #0
 3049              	.LVL460:
 3050              	.L308:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 165


 3051              		.loc 1 1427 0
 3052 00be 1846     		mov	r0, r3
 3053 00c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3054              		.cfi_endproc
 3055              	.LFE144:
 3057              		.section	.text.remove_chain,"ax",%progbits
 3058              		.align	1
 3059              		.syntax unified
 3060              		.thumb
 3061              		.thumb_func
 3062              		.fpu fpv4-sp-d16
 3064              	remove_chain:
 3065              	.LFB143:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3066              		.loc 1 1276 0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
 3070              	.LVL461:
 3071 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3072              	.LCFI32:
 3073              		.cfi_def_cfa_offset 24
 3074              		.cfi_offset 3, -24
 3075              		.cfi_offset 4, -20
 3076              		.cfi_offset 5, -16
 3077              		.cfi_offset 6, -12
 3078              		.cfi_offset 7, -8
 3079              		.cfi_offset 14, -4
 3080 0002 0E46     		mov	r6, r1
 3081              	.LVL462:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3082              		.loc 1 1279 0
 3083 0004 0468     		ldr	r4, [r0]
 3084              	.LVL463:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3085              		.loc 1 1287 0
 3086 0006 0129     		cmp	r1, #1
 3087 0008 30D9     		bls	.L333
 3088 000a 0746     		mov	r7, r0
 3089 000c 1146     		mov	r1, r2
 3090              	.LVL464:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3091              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3092 000e 6369     		ldr	r3, [r4, #20]
 3093 0010 9E42     		cmp	r6, r3
 3094 0012 01D3     		bcc	.L339
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3095              		.loc 1 1287 0
 3096 0014 0221     		movs	r1, #2
 3097 0016 2AE0     		b	.L329
 3098              	.LVL465:
 3099              	.L339:
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3100              		.loc 1 1290 0 is_stmt 1
 3101 0018 52B1     		cbz	r2, .L332
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3102              		.loc 1 1291 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 166


 3103 001a 4FF0FF32 		mov	r2, #-1
 3104 001e 2046     		mov	r0, r4
 3105              	.LVL466:
 3106 0020 FFF7FEFF 		bl	put_fat
 3107              	.LVL467:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3108              		.loc 1 1292 0
 3109 0024 0146     		mov	r1, r0
 3110 0026 18B1     		cbz	r0, .L332
 3111 0028 21E0     		b	.L329
 3112              	.LVL468:
 3113              	.L331:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3114              		.loc 1 1327 0
 3115 002a 2E46     		mov	r6, r5
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3116              		.loc 1 1328 0
 3117 002c 9542     		cmp	r5, r2
 3118 002e 1ED2     		bcs	.L329
 3119              	.LVL469:
 3120              	.L332:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3121              		.loc 1 1297 0
 3122 0030 3146     		mov	r1, r6
 3123 0032 3846     		mov	r0, r7
 3124 0034 FFF7FEFF 		bl	get_fat
 3125              	.LVL470:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3126              		.loc 1 1298 0
 3127 0038 0546     		mov	r5, r0
 3128 003a D0B1     		cbz	r0, .L335
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3129              		.loc 1 1299 0
 3130 003c 0128     		cmp	r0, #1
 3131 003e 1AD0     		beq	.L336
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3132              		.loc 1 1300 0
 3133 0040 B0F1FF3F 		cmp	r0, #-1
 3134 0044 19D0     		beq	.L337
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3135              		.loc 1 1302 0
 3136 0046 0022     		movs	r2, #0
 3137 0048 3146     		mov	r1, r6
 3138 004a 2046     		mov	r0, r4
 3139              	.LVL471:
 3140 004c FFF7FEFF 		bl	put_fat
 3141              	.LVL472:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3142              		.loc 1 1303 0
 3143 0050 0146     		mov	r1, r0
 3144 0052 60B9     		cbnz	r0, .L329
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3145              		.loc 1 1305 0
 3146 0054 2369     		ldr	r3, [r4, #16]
 3147 0056 6269     		ldr	r2, [r4, #20]
 3148 0058 901E     		subs	r0, r2, #2
 3149              	.LVL473:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 167


 3150 005a 8342     		cmp	r3, r0
 3151 005c E5D2     		bcs	.L331
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3152              		.loc 1 1306 0
 3153 005e 0133     		adds	r3, r3, #1
 3154 0060 2361     		str	r3, [r4, #16]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3155              		.loc 1 1307 0
 3156 0062 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3157 0064 43F00103 		orr	r3, r3, #1
 3158 0068 2371     		strb	r3, [r4, #4]
 3159 006a DEE7     		b	.L331
 3160              	.LVL474:
 3161              	.L333:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3162              		.loc 1 1287 0
 3163 006c 0221     		movs	r1, #2
 3164              	.LVL475:
 3165              	.L329:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3166              		.loc 1 1342 0
 3167 006e 0846     		mov	r0, r1
 3168 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3169              	.LVL476:
 3170              	.L335:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3171              		.loc 1 1341 0
 3172 0072 0021     		movs	r1, #0
 3173 0074 FBE7     		b	.L329
 3174              	.L336:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3175              		.loc 1 1299 0
 3176 0076 0221     		movs	r1, #2
 3177 0078 F9E7     		b	.L329
 3178              	.L337:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3179              		.loc 1 1300 0
 3180 007a 0121     		movs	r1, #1
 3181 007c F7E7     		b	.L329
 3182              		.cfi_endproc
 3183              	.LFE143:
 3185              		.section	.text.dir_remove,"ax",%progbits
 3186              		.align	1
 3187              		.syntax unified
 3188              		.thumb
 3189              		.thumb_func
 3190              		.fpu fpv4-sp-d16
 3192              	dir_remove:
 3193              	.LFB154:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3194              		.loc 1 2399 0
 3195              		.cfi_startproc
 3196              		@ args = 0, pretend = 0, frame = 0
 3197              		@ frame_needed = 0, uses_anonymous_args = 0
 3198              	.LVL477:
 3199 0000 38B5     		push	{r3, r4, r5, lr}
 3200              	.LCFI33:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 168


 3201              		.cfi_def_cfa_offset 16
 3202              		.cfi_offset 3, -16
 3203              		.cfi_offset 4, -12
 3204              		.cfi_offset 5, -8
 3205              		.cfi_offset 14, -4
 3206 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3207              		.loc 1 2401 0
 3208 0004 0568     		ldr	r5, [r0]
 3209              	.LVL478:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3210              		.loc 1 2424 0
 3211 0006 C169     		ldr	r1, [r0, #28]
 3212 0008 2846     		mov	r0, r5
 3213              	.LVL479:
 3214 000a FFF7FEFF 		bl	move_window
 3215              	.LVL480:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3216              		.loc 1 2425 0
 3217 000e 0346     		mov	r3, r0
 3218 0010 20B9     		cbnz	r0, .L341
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3219              		.loc 1 2426 0
 3220 0012 226A     		ldr	r2, [r4, #32]
 3221 0014 E521     		movs	r1, #229
 3222 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3223              		.loc 1 2427 0
 3224 0018 0122     		movs	r2, #1
 3225 001a EA70     		strb	r2, [r5, #3]
 3226              	.L341:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3227              		.loc 1 2432 0
 3228 001c 1846     		mov	r0, r3
 3229              	.LVL481:
 3230 001e 38BD     		pop	{r3, r4, r5, pc}
 3231              		.cfi_endproc
 3232              	.LFE154:
 3234              		.section	.text.dir_next,"ax",%progbits
 3235              		.align	1
 3236              		.syntax unified
 3237              		.thumb
 3238              		.thumb_func
 3239              		.fpu fpv4-sp-d16
 3241              	dir_next:
 3242              	.LFB147:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3243              		.loc 1 1523 0
 3244              		.cfi_startproc
 3245              		@ args = 0, pretend = 0, frame = 0
 3246              		@ frame_needed = 0, uses_anonymous_args = 0
 3247              	.LVL482:
 3248 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3249              	.LCFI34:
 3250              		.cfi_def_cfa_offset 32
 3251              		.cfi_offset 3, -32
 3252              		.cfi_offset 4, -28
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 169


 3253              		.cfi_offset 5, -24
 3254              		.cfi_offset 6, -20
 3255              		.cfi_offset 7, -16
 3256              		.cfi_offset 8, -12
 3257              		.cfi_offset 9, -8
 3258              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3259              		.loc 1 1525 0
 3260 0004 0668     		ldr	r6, [r0]
 3261              	.LVL483:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3262              		.loc 1 1530 0
 3263 0006 4369     		ldr	r3, [r0, #20]
 3264 0008 03F12005 		add	r5, r3, #32
 3265              	.LVL484:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3266              		.loc 1 1531 0
 3267 000c C369     		ldr	r3, [r0, #28]
 3268 000e 13B9     		cbnz	r3, .L361
 3269 0010 0420     		movs	r0, #4
 3270              	.LVL485:
 3271 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3272              	.LVL486:
 3273              	.L361:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3274              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3275 0016 B5F5001F 		cmp	r5, #2097152
 3276 001a 02D3     		bcc	.L362
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3277              		.loc 1 1531 0
 3278 001c 0420     		movs	r0, #4
 3279              	.LVL487:
 3280 001e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3281              	.LVL488:
 3282              	.L362:
 3283 0022 8846     		mov	r8, r1
 3284 0024 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3285              		.loc 1 1533 0 is_stmt 1
 3286 0026 C5F30807 		ubfx	r7, r5, #0, #9
 3287 002a 8FB9     		cbnz	r7, .L345
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3288              		.loc 1 1534 0
 3289 002c 0133     		adds	r3, r3, #1
 3290 002e C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3291              		.loc 1 1536 0
 3292 0030 8169     		ldr	r1, [r0, #24]
 3293              	.LVL489:
 3294 0032 41B9     		cbnz	r1, .L346
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3295              		.loc 1 1537 0
 3296 0034 3389     		ldrh	r3, [r6, #8]
 3297 0036 B3EB551F 		cmp	r3, r5, lsr #5
 3298 003a 09D8     		bhi	.L345
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3299              		.loc 1 1538 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 170


 3300 003c 0023     		movs	r3, #0
 3301 003e C361     		str	r3, [r0, #28]
 3302 0040 0420     		movs	r0, #4
 3303              	.LVL490:
 3304 0042 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3305              	.LVL491:
 3306              	.L346:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3307              		.loc 1 1542 0
 3308 0046 7389     		ldrh	r3, [r6, #10]
 3309 0048 013B     		subs	r3, r3, #1
 3310 004a 13EA5523 		ands	r3, r3, r5, lsr #9
 3311 004e 06D0     		beq	.L363
 3312              	.LVL492:
 3313              	.L345:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3314              		.loc 1 1574 0
 3315 0050 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3316              		.loc 1 1575 0
 3317 0052 3036     		adds	r6, r6, #48
 3318              	.LVL493:
 3319 0054 3E44     		add	r6, r6, r7
 3320              	.LVL494:
 3321 0056 2662     		str	r6, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3322              		.loc 1 1577 0
 3323 0058 0020     		movs	r0, #0
 3324 005a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3325              	.LVL495:
 3326              	.L363:
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3327              		.loc 1 1543 0
 3328 005e FFF7FEFF 		bl	get_fat
 3329              	.LVL496:
 3330 0062 8146     		mov	r9, r0
 3331              	.LVL497:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3332              		.loc 1 1544 0
 3333 0064 0128     		cmp	r0, #1
 3334 0066 48D9     		bls	.L353
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3335              		.loc 1 1545 0
 3336 0068 B0F1FF3F 		cmp	r0, #-1
 3337 006c 48D0     		beq	.L354
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3338              		.loc 1 1546 0
 3339 006e 7369     		ldr	r3, [r6, #20]
 3340 0070 9842     		cmp	r0, r3
 3341 0072 3AD3     		bcc	.L347
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3342              		.loc 1 1548 0
 3343 0074 B8F1000F 		cmp	r8, #0
 3344 0078 04D1     		bne	.L348
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3345              		.loc 1 1549 0
 3346 007a 0023     		movs	r3, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 171


 3347 007c E361     		str	r3, [r4, #28]
 3348 007e 0420     		movs	r0, #4
 3349              	.LVL498:
 3350 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3351              	.LVL499:
 3352              	.L348:
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3353              		.loc 1 1551 0
 3354 0084 A169     		ldr	r1, [r4, #24]
 3355 0086 2046     		mov	r0, r4
 3356              	.LVL500:
 3357 0088 FFF7FEFF 		bl	create_chain
 3358              	.LVL501:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3359              		.loc 1 1552 0
 3360 008c 8146     		mov	r9, r0
 3361 008e 10B9     		cbnz	r0, .L364
 3362 0090 0720     		movs	r0, #7
 3363              	.LVL502:
 3364 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3365              	.LVL503:
 3366              	.L364:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3367              		.loc 1 1553 0
 3368 0096 0128     		cmp	r0, #1
 3369 0098 35D0     		beq	.L356
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3370              		.loc 1 1554 0
 3371 009a B0F1FF3F 		cmp	r0, #-1
 3372 009e 35D0     		beq	.L357
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3373              		.loc 1 1557 0
 3374 00a0 3046     		mov	r0, r6
 3375              	.LVL504:
 3376 00a2 FFF7FEFF 		bl	sync_window
 3377              	.LVL505:
 3378 00a6 A0BB     		cbnz	r0, .L358
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3379              		.loc 1 1558 0
 3380 00a8 4FF40072 		mov	r2, #512
 3381 00ac 0021     		movs	r1, #0
 3382 00ae 06F13000 		add	r0, r6, #48
 3383 00b2 FFF7FEFF 		bl	mem_set
 3384              	.LVL506:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3385              		.loc 1 1559 0
 3386 00b6 4946     		mov	r1, r9
 3387 00b8 3046     		mov	r0, r6
 3388 00ba FFF7FEFF 		bl	clust2sect
 3389              	.LVL507:
 3390 00be F062     		str	r0, [r6, #44]
 3391 00c0 4FF00008 		mov	r8, #0
 3392              	.LVL508:
 3393              	.L349:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3394              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3395 00c4 7389     		ldrh	r3, [r6, #10]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 172


 3396 00c6 9845     		cmp	r8, r3
 3397 00c8 0BD2     		bcs	.L365
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3398              		.loc 1 1560 0 is_stmt 1
 3399 00ca 0123     		movs	r3, #1
 3400 00cc F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3401              		.loc 1 1561 0
 3402 00ce 3046     		mov	r0, r6
 3403 00d0 FFF7FEFF 		bl	sync_window
 3404              	.LVL509:
 3405 00d4 00BB     		cbnz	r0, .L359
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3406              		.loc 1 1559 0 discriminator 2
 3407 00d6 08F10108 		add	r8, r8, #1
 3408              	.LVL510:
 3409 00da F36A     		ldr	r3, [r6, #44]
 3410 00dc 0133     		adds	r3, r3, #1
 3411 00de F362     		str	r3, [r6, #44]
 3412 00e0 F0E7     		b	.L349
 3413              	.L365:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3414              		.loc 1 1563 0
 3415 00e2 F36A     		ldr	r3, [r6, #44]
 3416 00e4 A3EB0803 		sub	r3, r3, r8
 3417 00e8 F362     		str	r3, [r6, #44]
 3418              	.LVL511:
 3419              	.L347:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3420              		.loc 1 1569 0
 3421 00ea C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3422              		.loc 1 1570 0
 3423 00ee 4946     		mov	r1, r9
 3424 00f0 3046     		mov	r0, r6
 3425 00f2 FFF7FEFF 		bl	clust2sect
 3426              	.LVL512:
 3427 00f6 E061     		str	r0, [r4, #28]
 3428 00f8 AAE7     		b	.L345
 3429              	.LVL513:
 3430              	.L353:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3431              		.loc 1 1544 0
 3432 00fa 0220     		movs	r0, #2
 3433              	.LVL514:
 3434 00fc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3435              	.LVL515:
 3436              	.L354:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3437              		.loc 1 1545 0
 3438 0100 0120     		movs	r0, #1
 3439              	.LVL516:
 3440 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3441              	.LVL517:
 3442              	.L356:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3443              		.loc 1 1553 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 173


 3444 0106 0220     		movs	r0, #2
 3445              	.LVL518:
 3446 0108 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3447              	.LVL519:
 3448              	.L357:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3449              		.loc 1 1554 0
 3450 010c 0120     		movs	r0, #1
 3451              	.LVL520:
 3452 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3453              	.LVL521:
 3454              	.L358:
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3455              		.loc 1 1557 0
 3456 0112 0120     		movs	r0, #1
 3457 0114 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3458              	.LVL522:
 3459              	.L359:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3460              		.loc 1 1561 0
 3461 0118 0120     		movs	r0, #1
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3462              		.loc 1 1578 0
 3463 011a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3464              		.cfi_endproc
 3465              	.LFE147:
 3467              		.section	.text.dir_find,"ax",%progbits
 3468              		.align	1
 3469              		.syntax unified
 3470              		.thumb
 3471              		.thumb_func
 3472              		.fpu fpv4-sp-d16
 3474              	dir_find:
 3475              	.LFB152:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3476              		.loc 1 2213 0
 3477              		.cfi_startproc
 3478              		@ args = 0, pretend = 0, frame = 0
 3479              		@ frame_needed = 0, uses_anonymous_args = 0
 3480              	.LVL523:
 3481 0000 70B5     		push	{r4, r5, r6, lr}
 3482              	.LCFI35:
 3483              		.cfi_def_cfa_offset 16
 3484              		.cfi_offset 4, -16
 3485              		.cfi_offset 5, -12
 3486              		.cfi_offset 6, -8
 3487              		.cfi_offset 14, -4
 3488 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3489              		.loc 1 2215 0
 3490 0004 0668     		ldr	r6, [r0]
 3491              	.LVL524:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3492              		.loc 1 2221 0
 3493 0006 0021     		movs	r1, #0
 3494 0008 FFF7FEFF 		bl	dir_sdi
 3495              	.LVL525:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 174


2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3496              		.loc 1 2222 0
 3497 000c 0546     		mov	r5, r0
 3498 000e 40B1     		cbz	r0, .L369
 3499              	.LVL526:
 3500              	.L367:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3501              		.loc 1 2281 0
 3502 0010 2846     		mov	r0, r5
 3503 0012 70BD     		pop	{r4, r5, r6, pc}
 3504              	.LVL527:
 3505              	.L368:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3506              		.loc 1 2277 0
 3507 0014 0021     		movs	r1, #0
 3508 0016 2046     		mov	r0, r4
 3509 0018 FFF7FEFF 		bl	dir_next
 3510              	.LVL528:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3511              		.loc 1 2278 0
 3512 001c 0546     		mov	r5, r0
 3513 001e 0028     		cmp	r0, #0
 3514 0020 F6D1     		bne	.L367
 3515              	.L369:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3516              		.loc 1 2248 0
 3517 0022 E169     		ldr	r1, [r4, #28]
 3518 0024 3046     		mov	r0, r6
 3519              	.LVL529:
 3520 0026 FFF7FEFF 		bl	move_window
 3521              	.LVL530:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3522              		.loc 1 2249 0
 3523 002a 0546     		mov	r5, r0
 3524 002c 0028     		cmp	r0, #0
 3525 002e EFD1     		bne	.L367
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3526              		.loc 1 2250 0
 3527 0030 206A     		ldr	r0, [r4, #32]
 3528              	.LVL531:
 3529 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3530              	.LVL532:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3531              		.loc 1 2251 0
 3532 0034 7BB1     		cbz	r3, .L370
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3533              		.loc 1 2274 0
 3534 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3535              	.LVL533:
 3536 0038 03F03F03 		and	r3, r3, #63
 3537 003c A371     		strb	r3, [r4, #6]
 3538              	.LVL534:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3539              		.loc 1 2275 0
 3540 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3541 0040 13F0080F 		tst	r3, #8
 3542 0044 E6D1     		bne	.L368
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 175


2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3543              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3544 0046 0B22     		movs	r2, #11
 3545 0048 04F12401 		add	r1, r4, #36
 3546 004c FFF7FEFF 		bl	mem_cmp
 3547              	.LVL535:
 3548 0050 0028     		cmp	r0, #0
 3549 0052 DFD1     		bne	.L368
 3550 0054 DCE7     		b	.L367
 3551              	.LVL536:
 3552              	.L370:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3553              		.loc 1 2251 0 is_stmt 1
 3554 0056 0425     		movs	r5, #4
 3555 0058 DAE7     		b	.L367
 3556              		.cfi_endproc
 3557              	.LFE152:
 3559              		.section	.text.follow_path,"ax",%progbits
 3560              		.align	1
 3561              		.syntax unified
 3562              		.thumb
 3563              		.thumb_func
 3564              		.fpu fpv4-sp-d16
 3566              	follow_path:
 3567              	.LFB157:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3568              		.loc 1 2817 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 8
 3571              		@ frame_needed = 0, uses_anonymous_args = 0
 3572              	.LVL537:
 3573 0000 30B5     		push	{r4, r5, lr}
 3574              	.LCFI36:
 3575              		.cfi_def_cfa_offset 12
 3576              		.cfi_offset 4, -12
 3577              		.cfi_offset 5, -8
 3578              		.cfi_offset 14, -4
 3579 0002 83B0     		sub	sp, sp, #12
 3580              	.LCFI37:
 3581              		.cfi_def_cfa_offset 24
 3582 0004 0446     		mov	r4, r0
 3583 0006 0191     		str	r1, [sp, #4]
 3584              	.LVL538:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3585              		.loc 1 2821 0
 3586 0008 0568     		ldr	r5, [r0]
 3587              	.LVL539:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3588              		.loc 1 2830 0
 3589 000a 01E0     		b	.L373
 3590              	.L374:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3591              		.loc 1 2830 0 is_stmt 0 discriminator 4
 3592 000c 0133     		adds	r3, r3, #1
 3593 000e 0193     		str	r3, [sp, #4]
 3594              	.L373:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 176


 3595              		.loc 1 2830 0 discriminator 1
 3596 0010 019B     		ldr	r3, [sp, #4]
 3597 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3598 0014 2F2A     		cmp	r2, #47
 3599 0016 F9D0     		beq	.L374
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3600              		.loc 1 2830 0 discriminator 3
 3601 0018 5C2A     		cmp	r2, #92
 3602 001a F7D0     		beq	.L374
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3603              		.loc 1 2831 0 is_stmt 1
 3604 001c 0022     		movs	r2, #0
 3605 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3606              		.loc 1 2850 0
 3607 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 0022 1F2B     		cmp	r3, #31
 3609 0024 1ED9     		bls	.L381
 3610              	.LVL540:
 3611              	.L375:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3612              		.loc 1 2856 0
 3613 0026 01A9     		add	r1, sp, #4
 3614 0028 2046     		mov	r0, r4
 3615 002a FFF7FEFF 		bl	create_name
 3616              	.LVL541:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3617              		.loc 1 2857 0
 3618 002e 0346     		mov	r3, r0
 3619 0030 00BB     		cbnz	r0, .L376
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3620              		.loc 1 2858 0
 3621 0032 2046     		mov	r0, r4
 3622              	.LVL542:
 3623 0034 FFF7FEFF 		bl	dir_find
 3624              	.LVL543:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3625              		.loc 1 2859 0
 3626 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3627              	.LVL544:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3628              		.loc 1 2860 0
 3629 003c 0346     		mov	r3, r0
 3630 003e E0B9     		cbnz	r0, .L382
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3631              		.loc 1 2872 0
 3632 0040 12F0040F 		tst	r2, #4
 3633 0044 16D1     		bne	.L376
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3634              		.loc 1 2874 0
 3635 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3636 0048 13F0100F 		tst	r3, #16
 3637 004c 1CD0     		beq	.L379
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3638              		.loc 1 2888 0
 3639 004e 05F13001 		add	r1, r5, #48
 3640 0052 6369     		ldr	r3, [r4, #20]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 177


 3641 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3642 0058 1944     		add	r1, r1, r3
 3643 005a 2846     		mov	r0, r5
 3644              	.LVL545:
 3645 005c FFF7FEFF 		bl	ld_clust
 3646              	.LVL546:
 3647 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3648              		.loc 1 2856 0
 3649 0062 E0E7     		b	.L375
 3650              	.LVL547:
 3651              	.L381:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3652              		.loc 1 2851 0
 3653 0064 8023     		movs	r3, #128
 3654 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3655              		.loc 1 2852 0
 3656 006a 1146     		mov	r1, r2
 3657              	.LVL548:
 3658 006c 2046     		mov	r0, r4
 3659              	.LVL549:
 3660 006e FFF7FEFF 		bl	dir_sdi
 3661              	.LVL550:
 3662 0072 0346     		mov	r3, r0
 3663              	.LVL551:
 3664              	.L376:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3665              		.loc 1 2894 0
 3666 0074 1846     		mov	r0, r3
 3667 0076 03B0     		add	sp, sp, #12
 3668              	.LCFI38:
 3669              		.cfi_remember_state
 3670              		.cfi_def_cfa_offset 12
 3671              		@ sp needed
 3672 0078 30BD     		pop	{r4, r5, pc}
 3673              	.LVL552:
 3674              	.L382:
 3675              	.LCFI39:
 3676              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3677              		.loc 1 2861 0
 3678 007a 0428     		cmp	r0, #4
 3679 007c FAD1     		bne	.L376
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3680              		.loc 1 2867 0
 3681 007e 12F0040F 		tst	r2, #4
 3682 0082 F7D1     		bne	.L376
 3683 0084 0523     		movs	r3, #5
 3684 0086 F5E7     		b	.L376
 3685              	.L379:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3686              		.loc 1 2875 0
 3687 0088 0523     		movs	r3, #5
 3688 008a F3E7     		b	.L376
 3689              		.cfi_endproc
 3690              	.LFE157:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 178


 3692              		.section	.text.dir_alloc,"ax",%progbits
 3693              		.align	1
 3694              		.syntax unified
 3695              		.thumb
 3696              		.thumb_func
 3697              		.fpu fpv4-sp-d16
 3699              	dir_alloc:
 3700              	.LFB148:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3701              		.loc 1 1593 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 3705              	.LVL553:
 3706 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3707              	.LCFI40:
 3708              		.cfi_def_cfa_offset 24
 3709              		.cfi_offset 3, -24
 3710              		.cfi_offset 4, -20
 3711              		.cfi_offset 5, -16
 3712              		.cfi_offset 6, -12
 3713              		.cfi_offset 7, -8
 3714              		.cfi_offset 14, -4
 3715 0002 0446     		mov	r4, r0
 3716 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3717              		.loc 1 1596 0
 3718 0006 0668     		ldr	r6, [r0]
 3719              	.LVL554:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3720              		.loc 1 1599 0
 3721 0008 0021     		movs	r1, #0
 3722              	.LVL555:
 3723 000a FFF7FEFF 		bl	dir_sdi
 3724              	.LVL556:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3725              		.loc 1 1600 0
 3726 000e 0246     		mov	r2, r0
 3727 0010 C0B9     		cbnz	r0, .L384
 3728 0012 0025     		movs	r5, #0
 3729 0014 08E0     		b	.L387
 3730              	.LVL557:
 3731              	.L385:
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3732              		.loc 1 1610 0
 3733 0016 0135     		adds	r5, r5, #1
 3734              	.LVL558:
 3735 0018 BD42     		cmp	r5, r7
 3736 001a 13D0     		beq	.L384
 3737              	.LVL559:
 3738              	.L386:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3739              		.loc 1 1614 0
 3740 001c 0121     		movs	r1, #1
 3741 001e 2046     		mov	r0, r4
 3742              	.LVL560:
 3743 0020 FFF7FEFF 		bl	dir_next
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 179


 3744              	.LVL561:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3745              		.loc 1 1615 0
 3746 0024 0246     		mov	r2, r0
 3747 0026 68B9     		cbnz	r0, .L384
 3748              	.LVL562:
 3749              	.L387:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3750              		.loc 1 1603 0
 3751 0028 E169     		ldr	r1, [r4, #28]
 3752 002a 3046     		mov	r0, r6
 3753              	.LVL563:
 3754 002c FFF7FEFF 		bl	move_window
 3755              	.LVL564:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3756              		.loc 1 1604 0
 3757 0030 0246     		mov	r2, r0
 3758 0032 38B9     		cbnz	r0, .L384
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3759              		.loc 1 1608 0
 3760 0034 236A     		ldr	r3, [r4, #32]
 3761 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3762 0038 E52B     		cmp	r3, #229
 3763 003a ECD0     		beq	.L385
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3764              		.loc 1 1608 0 is_stmt 0 discriminator 1
 3765 003c 002B     		cmp	r3, #0
 3766 003e EAD0     		beq	.L385
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3767              		.loc 1 1612 0 is_stmt 1
 3768 0040 0025     		movs	r5, #0
 3769              	.LVL565:
 3770 0042 EBE7     		b	.L386
 3771              	.L384:
 3772              	.LVL566:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3773              		.loc 1 1618 0
 3774 0044 042A     		cmp	r2, #4
 3775 0046 01D0     		beq	.L392
 3776              	.LVL567:
 3777              	.L388:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3778              		.loc 1 1620 0
 3779 0048 1046     		mov	r0, r2
 3780 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3781              	.LVL568:
 3782              	.L392:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3783              		.loc 1 1618 0
 3784 004c 0722     		movs	r2, #7
 3785              	.LVL569:
 3786 004e FBE7     		b	.L388
 3787              		.cfi_endproc
 3788              	.LFE148:
 3790              		.section	.text.dir_register,"ax",%progbits
 3791              		.align	1
 3792              		.syntax unified
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 180


 3793              		.thumb
 3794              		.thumb_func
 3795              		.fpu fpv4-sp-d16
 3797              	dir_register:
 3798              	.LFB153:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3799              		.loc 1 2295 0
 3800              		.cfi_startproc
 3801              		@ args = 0, pretend = 0, frame = 0
 3802              		@ frame_needed = 0, uses_anonymous_args = 0
 3803              	.LVL570:
 3804 0000 70B5     		push	{r4, r5, r6, lr}
 3805              	.LCFI41:
 3806              		.cfi_def_cfa_offset 16
 3807              		.cfi_offset 4, -16
 3808              		.cfi_offset 5, -12
 3809              		.cfi_offset 6, -8
 3810              		.cfi_offset 14, -4
 3811 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3812              		.loc 1 2297 0
 3813 0004 0668     		ldr	r6, [r0]
 3814              	.LVL571:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3815              		.loc 1 2366 0
 3816 0006 0121     		movs	r1, #1
 3817 0008 FFF7FEFF 		bl	dir_alloc
 3818              	.LVL572:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3819              		.loc 1 2371 0
 3820 000c 0546     		mov	r5, r0
 3821 000e 08B1     		cbz	r0, .L396
 3822              	.LVL573:
 3823              	.L394:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3824              		.loc 1 2384 0
 3825 0010 2846     		mov	r0, r5
 3826 0012 70BD     		pop	{r4, r5, r6, pc}
 3827              	.LVL574:
 3828              	.L396:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3829              		.loc 1 2372 0
 3830 0014 E169     		ldr	r1, [r4, #28]
 3831 0016 3046     		mov	r0, r6
 3832              	.LVL575:
 3833 0018 FFF7FEFF 		bl	move_window
 3834              	.LVL576:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3835              		.loc 1 2373 0
 3836 001c 0546     		mov	r5, r0
 3837 001e 0028     		cmp	r0, #0
 3838 0020 F6D1     		bne	.L394
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3839              		.loc 1 2374 0
 3840 0022 2022     		movs	r2, #32
 3841 0024 0021     		movs	r1, #0
 3842 0026 206A     		ldr	r0, [r4, #32]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 181


 3843              	.LVL577:
 3844 0028 FFF7FEFF 		bl	mem_set
 3845              	.LVL578:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3846              		.loc 1 2375 0
 3847 002c 0B22     		movs	r2, #11
 3848 002e 04F12401 		add	r1, r4, #36
 3849 0032 206A     		ldr	r0, [r4, #32]
 3850 0034 FFF7FEFF 		bl	mem_cpy
 3851              	.LVL579:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3852              		.loc 1 2379 0
 3853 0038 0123     		movs	r3, #1
 3854 003a F370     		strb	r3, [r6, #3]
 3855 003c E8E7     		b	.L394
 3856              		.cfi_endproc
 3857              	.LFE153:
 3859              		.section	.text.dir_read,"ax",%progbits
 3860              		.align	1
 3861              		.syntax unified
 3862              		.thumb
 3863              		.thumb_func
 3864              		.fpu fpv4-sp-d16
 3866              	dir_read:
 3867              	.LFB151:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3868              		.loc 1 2135 0
 3869              		.cfi_startproc
 3870              		@ args = 0, pretend = 0, frame = 0
 3871              		@ frame_needed = 0, uses_anonymous_args = 0
 3872              	.LVL580:
 3873 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3874              	.LCFI42:
 3875              		.cfi_def_cfa_offset 24
 3876              		.cfi_offset 3, -24
 3877              		.cfi_offset 4, -20
 3878              		.cfi_offset 5, -16
 3879              		.cfi_offset 6, -12
 3880              		.cfi_offset 7, -8
 3881              		.cfi_offset 14, -4
 3882 0002 0446     		mov	r4, r0
 3883 0004 0E46     		mov	r6, r1
 3884              	.LVL581:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3885              		.loc 1 2137 0
 3886 0006 0568     		ldr	r5, [r0]
 3887              	.LVL582:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3888              		.loc 1 2136 0
 3889 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3890              		.loc 1 2143 0
 3891 000a 05E0     		b	.L398
 3892              	.LVL583:
 3893              	.L400:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3894              		.loc 1 2193 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 182


 3895 000c 0021     		movs	r1, #0
 3896 000e 2046     		mov	r0, r4
 3897              	.LVL584:
 3898 0010 FFF7FEFF 		bl	dir_next
 3899              	.LVL585:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3900              		.loc 1 2194 0
 3901 0014 0746     		mov	r7, r0
 3902 0016 E8B9     		cbnz	r0, .L399
 3903              	.LVL586:
 3904              	.L398:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3905              		.loc 1 2143 0
 3906 0018 E169     		ldr	r1, [r4, #28]
 3907 001a D9B1     		cbz	r1, .L399
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3908              		.loc 1 2144 0
 3909 001c 2846     		mov	r0, r5
 3910 001e FFF7FEFF 		bl	move_window
 3911              	.LVL587:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3912              		.loc 1 2145 0
 3913 0022 0746     		mov	r7, r0
 3914 0024 B0B9     		cbnz	r0, .L399
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3915              		.loc 1 2146 0
 3916 0026 236A     		ldr	r3, [r4, #32]
 3917 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3918              	.LVL588:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3919              		.loc 1 2147 0
 3920 002a 92B1     		cbz	r2, .L403
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3921              		.loc 1 2167 0
 3922 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3923 002e 03F03F03 		and	r3, r3, #63
 3924              	.LVL589:
 3925 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3926              		.loc 1 2188 0
 3927 0034 E52A     		cmp	r2, #229
 3928 0036 E9D0     		beq	.L400
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3929              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3930 0038 2E2A     		cmp	r2, #46
 3931 003a E7D0     		beq	.L400
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3932              		.loc 1 2188 0 discriminator 2
 3933 003c 0F2B     		cmp	r3, #15
 3934 003e E5D0     		beq	.L400
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3935              		.loc 1 2188 0 discriminator 3
 3936 0040 23F02003 		bic	r3, r3, #32
 3937              	.LVL590:
 3938 0044 082B     		cmp	r3, #8
 3939 0046 14BF     		ite	ne
 3940 0048 0023     		movne	r3, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 183


 3941 004a 0123     		moveq	r3, #1
 3942 004c B342     		cmp	r3, r6
 3943 004e DDD1     		bne	.L400
 3944 0050 00E0     		b	.L399
 3945              	.LVL591:
 3946              	.L403:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3947              		.loc 1 2148 0 is_stmt 1
 3948 0052 0427     		movs	r7, #4
 3949              	.LVL592:
 3950              	.L399:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3951              		.loc 1 2197 0
 3952 0054 0FB1     		cbz	r7, .L402
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3953              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3954 0056 0023     		movs	r3, #0
 3955 0058 E361     		str	r3, [r4, #28]
 3956              	.L402:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3957              		.loc 1 2199 0 is_stmt 1
 3958 005a 3846     		mov	r0, r7
 3959 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3960              		.cfi_endproc
 3961              	.LFE151:
 3963              		.section	.text.sync_fs,"ax",%progbits
 3964              		.align	1
 3965              		.syntax unified
 3966              		.thumb
 3967              		.thumb_func
 3968              		.fpu fpv4-sp-d16
 3970              	sync_fs:
 3971              	.LFB139:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3972              		.loc 1 947 0
 3973              		.cfi_startproc
 3974              		@ args = 0, pretend = 0, frame = 0
 3975              		@ frame_needed = 0, uses_anonymous_args = 0
 3976              	.LVL593:
 3977 0000 70B5     		push	{r4, r5, r6, lr}
 3978              	.LCFI43:
 3979              		.cfi_def_cfa_offset 16
 3980              		.cfi_offset 4, -16
 3981              		.cfi_offset 5, -12
 3982              		.cfi_offset 6, -8
 3983              		.cfi_offset 14, -4
 3984 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3985              		.loc 1 951 0
 3986 0004 FFF7FEFF 		bl	sync_window
 3987              	.LVL594:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 3988              		.loc 1 952 0
 3989 0008 0546     		mov	r5, r0
 3990 000a 48B9     		cbnz	r0, .L406
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 3991              		.loc 1 954 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 184


 3992 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3993 000e 032B     		cmp	r3, #3
 3994 0010 08D0     		beq	.L410
 3995              	.LVL595:
 3996              	.L407:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3997              		.loc 1 968 0
 3998 0012 0022     		movs	r2, #0
 3999 0014 1146     		mov	r1, r2
 4000 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4001 0018 FFF7FEFF 		bl	disk_ioctl
 4002              	.LVL596:
 4003 001c 00B1     		cbz	r0, .L406
 4004 001e 0125     		movs	r5, #1
 4005              	.L406:
 4006              	.LVL597:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4007              		.loc 1 972 0
 4008 0020 2846     		mov	r0, r5
 4009 0022 70BD     		pop	{r4, r5, r6, pc}
 4010              	.LVL598:
 4011              	.L410:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4012              		.loc 1 954 0 discriminator 1
 4013 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4014 0026 012B     		cmp	r3, #1
 4015 0028 F3D1     		bne	.L407
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4016              		.loc 1 956 0
 4017 002a 04F13006 		add	r6, r4, #48
 4018 002e 4FF40072 		mov	r2, #512
 4019 0032 0021     		movs	r1, #0
 4020 0034 3046     		mov	r0, r6
 4021              	.LVL599:
 4022 0036 FFF7FEFF 		bl	mem_set
 4023              	.LVL600:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4024              		.loc 1 957 0
 4025 003a 4AF65521 		movw	r1, #43605
 4026 003e 04F22E20 		addw	r0, r4, #558
 4027 0042 FFF7FEFF 		bl	st_word
 4028              	.LVL601:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4029              		.loc 1 958 0
 4030 0046 0F49     		ldr	r1, .L411
 4031 0048 3046     		mov	r0, r6
 4032 004a FFF7FEFF 		bl	st_dword
 4033              	.LVL602:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4034              		.loc 1 959 0
 4035 004e 0E49     		ldr	r1, .L411+4
 4036 0050 04F50570 		add	r0, r4, #532
 4037 0054 FFF7FEFF 		bl	st_dword
 4038              	.LVL603:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4039              		.loc 1 960 0
 4040 0058 2169     		ldr	r1, [r4, #16]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 185


 4041 005a 04F50670 		add	r0, r4, #536
 4042 005e FFF7FEFF 		bl	st_dword
 4043              	.LVL604:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4044              		.loc 1 961 0
 4045 0062 E168     		ldr	r1, [r4, #12]
 4046 0064 04F50770 		add	r0, r4, #540
 4047 0068 FFF7FEFF 		bl	st_dword
 4048              	.LVL605:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4049              		.loc 1 963 0
 4050 006c E269     		ldr	r2, [r4, #28]
 4051 006e 0132     		adds	r2, r2, #1
 4052 0070 E262     		str	r2, [r4, #44]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4053              		.loc 1 964 0
 4054 0072 0123     		movs	r3, #1
 4055 0074 3146     		mov	r1, r6
 4056 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4057 0078 FFF7FEFF 		bl	disk_write
 4058              	.LVL606:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4059              		.loc 1 965 0
 4060 007c 0023     		movs	r3, #0
 4061 007e 2371     		strb	r3, [r4, #4]
 4062 0080 C7E7     		b	.L407
 4063              	.L412:
 4064 0082 00BF     		.align	2
 4065              	.L411:
 4066 0084 52526141 		.word	1096897106
 4067 0088 72724161 		.word	1631679090
 4068              		.cfi_endproc
 4069              	.LFE139:
 4071              		.section	.text.f_mount,"ax",%progbits
 4072              		.align	1
 4073              		.global	f_mount
 4074              		.syntax unified
 4075              		.thumb
 4076              		.thumb_func
 4077              		.fpu fpv4-sp-d16
 4079              	f_mount:
 4080              	.LFB162:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4081              		.loc 1 3254 0
 4082              		.cfi_startproc
 4083              		@ args = 0, pretend = 0, frame = 16
 4084              		@ frame_needed = 0, uses_anonymous_args = 0
 4085              	.LVL607:
 4086 0000 70B5     		push	{r4, r5, r6, lr}
 4087              	.LCFI44:
 4088              		.cfi_def_cfa_offset 16
 4089              		.cfi_offset 4, -16
 4090              		.cfi_offset 5, -12
 4091              		.cfi_offset 6, -8
 4092              		.cfi_offset 14, -4
 4093 0002 84B0     		sub	sp, sp, #16
 4094              	.LCFI45:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 186


 4095              		.cfi_def_cfa_offset 32
 4096 0004 0190     		str	r0, [sp, #4]
 4097 0006 0091     		str	r1, [sp]
 4098 0008 1646     		mov	r6, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4099              		.loc 1 3258 0
 4100 000a 04A8     		add	r0, sp, #16
 4101              	.LVL608:
 4102 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4103              		.loc 1 3262 0
 4104 0010 FFF7FEFF 		bl	get_ldnumber
 4105              	.LVL609:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4106              		.loc 1 3263 0
 4107 0014 041E     		subs	r4, r0, #0
 4108 0016 1BDB     		blt	.L417
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4109              		.loc 1 3264 0
 4110 0018 104B     		ldr	r3, .L422
 4111 001a 53F82450 		ldr	r5, [r3, r4, lsl #2]
 4112              	.LVL610:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4113              		.loc 1 3266 0
 4114 001e 25B1     		cbz	r5, .L415
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4115              		.loc 1 3268 0
 4116 0020 2846     		mov	r0, r5
 4117              	.LVL611:
 4118 0022 FFF7FEFF 		bl	clear_lock
 4119              	.LVL612:
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4120              		.loc 1 3273 0
 4121 0026 0023     		movs	r3, #0
 4122 0028 2B70     		strb	r3, [r5]
 4123              	.L415:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4124              		.loc 1 3276 0
 4125 002a 019B     		ldr	r3, [sp, #4]
 4126 002c 0BB1     		cbz	r3, .L416
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4127              		.loc 1 3277 0
 4128 002e 0022     		movs	r2, #0
 4129 0030 1A70     		strb	r2, [r3]
 4130              	.L416:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4131              		.loc 1 3282 0
 4132 0032 019B     		ldr	r3, [sp, #4]
 4133 0034 094A     		ldr	r2, .L422
 4134 0036 42F82430 		str	r3, [r2, r4, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4135              		.loc 1 3284 0
 4136 003a 63B1     		cbz	r3, .L418
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4137              		.loc 1 3284 0 is_stmt 0 discriminator 2
 4138 003c 012E     		cmp	r6, #1
 4139 003e 01D0     		beq	.L421
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 187


3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4140              		.loc 1 3284 0
 4141 0040 0020     		movs	r0, #0
 4142 0042 06E0     		b	.L414
 4143              	.L421:
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4144              		.loc 1 3286 0 is_stmt 1
 4145 0044 0022     		movs	r2, #0
 4146 0046 01A9     		add	r1, sp, #4
 4147 0048 6846     		mov	r0, sp
 4148 004a FFF7FEFF 		bl	find_volume
 4149              	.LVL613:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4150              		.loc 1 3287 0
 4151 004e 00E0     		b	.L414
 4152              	.LVL614:
 4153              	.L417:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4154              		.loc 1 3263 0
 4155 0050 0B20     		movs	r0, #11
 4156              	.LVL615:
 4157              	.L414:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4158              		.loc 1 3288 0
 4159 0052 04B0     		add	sp, sp, #16
 4160              	.LCFI46:
 4161              		.cfi_remember_state
 4162              		.cfi_def_cfa_offset 16
 4163              		@ sp needed
 4164 0054 70BD     		pop	{r4, r5, r6, pc}
 4165              	.LVL616:
 4166              	.L418:
 4167              	.LCFI47:
 4168              		.cfi_restore_state
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4169              		.loc 1 3284 0
 4170 0056 0020     		movs	r0, #0
 4171 0058 FBE7     		b	.L414
 4172              	.L423:
 4173 005a 00BF     		.align	2
 4174              	.L422:
 4175 005c 00000000 		.word	.LANCHOR2
 4176              		.cfi_endproc
 4177              	.LFE162:
 4179              		.section	.text.f_open,"ax",%progbits
 4180              		.align	1
 4181              		.global	f_open
 4182              		.syntax unified
 4183              		.thumb
 4184              		.thumb_func
 4185              		.fpu fpv4-sp-d16
 4187              	f_open:
 4188              	.LFB163:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4189              		.loc 1 3302 0
 4190              		.cfi_startproc
 4191              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 188


 4192              		@ frame_needed = 0, uses_anonymous_args = 0
 4193              	.LVL617:
 4194 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4195              	.LCFI48:
 4196              		.cfi_def_cfa_offset 28
 4197              		.cfi_offset 4, -28
 4198              		.cfi_offset 5, -24
 4199              		.cfi_offset 6, -20
 4200              		.cfi_offset 7, -16
 4201              		.cfi_offset 8, -12
 4202              		.cfi_offset 9, -8
 4203              		.cfi_offset 14, -4
 4204 0004 91B0     		sub	sp, sp, #68
 4205              	.LCFI49:
 4206              		.cfi_def_cfa_offset 96
 4207 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4208              		.loc 1 3313 0
 4209 0008 0028     		cmp	r0, #0
 4210 000a 00F00D81 		beq	.L440
 4211 000e 0546     		mov	r5, r0
 4212 0010 1646     		mov	r6, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4213              		.loc 1 3316 0
 4214 0012 02F03F07 		and	r7, r2, #63
 4215              	.LVL618:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4216              		.loc 1 3317 0
 4217 0016 3A46     		mov	r2, r7
 4218 0018 03A9     		add	r1, sp, #12
 4219              	.LVL619:
 4220 001a 01A8     		add	r0, sp, #4
 4221              	.LVL620:
 4222 001c FFF7FEFF 		bl	find_volume
 4223              	.LVL621:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4224              		.loc 1 3318 0
 4225 0020 0446     		mov	r4, r0
 4226 0022 28B1     		cbz	r0, .L453
 4227              	.LVL622:
 4228              	.L426:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4229              		.loc 1 3488 0
 4230 0024 002C     		cmp	r4, #0
 4231 0026 00F00081 		beq	.L425
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4232              		.loc 1 3488 0 is_stmt 0 discriminator 1
 4233 002a 0023     		movs	r3, #0
 4234 002c 2B60     		str	r3, [r5]
 4235 002e FCE0     		b	.L425
 4236              	.LVL623:
 4237              	.L453:
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4238              		.loc 1 3319 0 is_stmt 1
 4239 0030 039B     		ldr	r3, [sp, #12]
 4240 0032 0493     		str	r3, [sp, #16]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 189


 4241              		.loc 1 3321 0
 4242 0034 0199     		ldr	r1, [sp, #4]
 4243 0036 04A8     		add	r0, sp, #16
 4244              	.LVL624:
 4245 0038 FFF7FEFF 		bl	follow_path
 4246              	.LVL625:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4247              		.loc 1 3323 0
 4248 003c 0446     		mov	r4, r0
 4249 003e 60B9     		cbnz	r0, .L427
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4250              		.loc 1 3324 0
 4251 0040 9DF93F30 		ldrsb	r3, [sp, #63]
 4252 0044 002B     		cmp	r3, #0
 4253 0046 57DB     		blt	.L441
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4254              		.loc 1 3329 0
 4255 0048 37F00103 		bics	r3, r7, #1
 4256 004c 14BF     		ite	ne
 4257 004e 0121     		movne	r1, #1
 4258 0050 0021     		moveq	r1, #0
 4259 0052 04A8     		add	r0, sp, #16
 4260              	.LVL626:
 4261 0054 FFF7FEFF 		bl	chk_lock
 4262              	.LVL627:
 4263 0058 0446     		mov	r4, r0
 4264              	.LVL628:
 4265              	.L427:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4266              		.loc 1 3334 0
 4267 005a 16F01C0F 		tst	r6, #28
 4268 005e 00F0A180 		beq	.L428
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4269              		.loc 1 3335 0
 4270 0062 002C     		cmp	r4, #0
 4271 0064 54D0     		beq	.L429
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4272              		.loc 1 3336 0
 4273 0066 042C     		cmp	r4, #4
 4274 0068 48D0     		beq	.L454
 4275              	.LVL629:
 4276              	.L430:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4277              		.loc 1 3343 0
 4278 006a 47F00807 		orr	r7, r7, #8
 4279              	.LVL630:
 4280              	.L431:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4281              		.loc 1 3352 0
 4282 006e 14B9     		cbnz	r4, .L432
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4283              		.loc 1 3352 0 is_stmt 0 discriminator 1
 4284 0070 17F0080F 		tst	r7, #8
 4285 0074 58D1     		bne	.L455
 4286              	.LVL631:
 4287              	.L432:
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 190


 4288              		.loc 1 3411 0 is_stmt 1
 4289 0076 A4B9     		cbnz	r4, .L433
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4290              		.loc 1 3412 0
 4291 0078 17F0080F 		tst	r7, #8
 4292 007c 01D0     		beq	.L434
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4293              		.loc 1 3413 0
 4294 007e 47F04007 		orr	r7, r7, #64
 4295              	.LVL632:
 4296              	.L434:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4297              		.loc 1 3414 0
 4298 0082 039B     		ldr	r3, [sp, #12]
 4299 0084 DB6A     		ldr	r3, [r3, #44]
 4300 0086 6B62     		str	r3, [r5, #36]
3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4301              		.loc 1 3415 0
 4302 0088 0C9B     		ldr	r3, [sp, #48]
 4303 008a AB62     		str	r3, [r5, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4304              		.loc 1 3417 0
 4305 008c 37F00103 		bics	r3, r7, #1
 4306 0090 14BF     		ite	ne
 4307 0092 0121     		movne	r1, #1
 4308 0094 0021     		moveq	r1, #0
 4309 0096 04A8     		add	r0, sp, #16
 4310 0098 FFF7FEFF 		bl	inc_lock
 4311              	.LVL633:
 4312 009c 2861     		str	r0, [r5, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4313              		.loc 1 3418 0
 4314 009e 00B9     		cbnz	r0, .L433
 4315 00a0 0224     		movs	r4, #2
 4316              	.LVL634:
 4317              	.L433:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4318              		.loc 1 3433 0
 4319 00a2 002C     		cmp	r4, #0
 4320 00a4 BED1     		bne	.L426
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4321              		.loc 1 3445 0
 4322 00a6 039E     		ldr	r6, [sp, #12]
 4323 00a8 DDF83080 		ldr	r8, [sp, #48]
 4324 00ac 4146     		mov	r1, r8
 4325 00ae 3046     		mov	r0, r6
 4326 00b0 FFF7FEFF 		bl	ld_clust
 4327              	.LVL635:
 4328 00b4 A860     		str	r0, [r5, #8]
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4329              		.loc 1 3446 0
 4330 00b6 08F11C00 		add	r0, r8, #28
 4331 00ba FFF7FEFF 		bl	ld_dword
 4332              	.LVL636:
 4333 00be E860     		str	r0, [r5, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4334              		.loc 1 3449 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 191


 4335 00c0 0021     		movs	r1, #0
 4336 00c2 E962     		str	r1, [r5, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4337              		.loc 1 3451 0
 4338 00c4 2E60     		str	r6, [r5]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4339              		.loc 1 3452 0
 4340 00c6 F388     		ldrh	r3, [r6, #6]
 4341 00c8 AB80     		strh	r3, [r5, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4342              		.loc 1 3453 0
 4343 00ca 2F75     		strb	r7, [r5, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4344              		.loc 1 3454 0
 4345 00cc 6975     		strb	r1, [r5, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4346              		.loc 1 3455 0
 4347 00ce 2962     		str	r1, [r5, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4348              		.loc 1 3456 0
 4349 00d0 A961     		str	r1, [r5, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4350              		.loc 1 3459 0
 4351 00d2 05F13008 		add	r8, r5, #48
 4352 00d6 4FF40072 		mov	r2, #512
 4353 00da 4046     		mov	r0, r8
 4354 00dc FFF7FEFF 		bl	mem_set
 4355              	.LVL637:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4356              		.loc 1 3461 0
 4357 00e0 17F0200F 		tst	r7, #32
 4358 00e4 9ED0     		beq	.L426
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4359              		.loc 1 3461 0 is_stmt 0 discriminator 1
 4360 00e6 EE68     		ldr	r6, [r5, #12]
 4361 00e8 002E     		cmp	r6, #0
 4362 00ea 9BD0     		beq	.L426
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4363              		.loc 1 3462 0 is_stmt 1
 4364 00ec AE61     		str	r6, [r5, #24]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4365              		.loc 1 3463 0
 4366 00ee 039B     		ldr	r3, [sp, #12]
 4367 00f0 5F89     		ldrh	r7, [r3, #10]
 4368              	.LVL638:
 4369 00f2 7F02     		lsls	r7, r7, #9
 4370              	.LVL639:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4371              		.loc 1 3464 0
 4372 00f4 A968     		ldr	r1, [r5, #8]
 4373              	.LVL640:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4374              		.loc 1 3465 0
 4375 00f6 6CE0     		b	.L435
 4376              	.LVL641:
 4377              	.L441:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 192


 4378              		.loc 1 3325 0
 4379 00f8 0624     		movs	r4, #6
 4380 00fa AEE7     		b	.L427
 4381              	.LVL642:
 4382              	.L454:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4383              		.loc 1 3338 0
 4384 00fc FFF7FEFF 		bl	enq_lock
 4385              	.LVL643:
 4386 0100 08B9     		cbnz	r0, .L456
 4387 0102 1224     		movs	r4, #18
 4388              	.LVL644:
 4389 0104 B1E7     		b	.L430
 4390              	.LVL645:
 4391              	.L456:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4392              		.loc 1 3338 0 is_stmt 0 discriminator 1
 4393 0106 04A8     		add	r0, sp, #16
 4394 0108 FFF7FEFF 		bl	dir_register
 4395              	.LVL646:
 4396 010c 0446     		mov	r4, r0
 4397              	.LVL647:
 4398 010e ACE7     		b	.L430
 4399              	.LVL648:
 4400              	.L429:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4401              		.loc 1 3346 0 is_stmt 1
 4402 0110 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4403 0114 13F0110F 		tst	r3, #17
 4404 0118 04D1     		bne	.L443
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4405              		.loc 1 3349 0
 4406 011a 16F0040F 		tst	r6, #4
 4407 011e A6D0     		beq	.L431
 4408 0120 0824     		movs	r4, #8
 4409              	.LVL649:
 4410 0122 A4E7     		b	.L431
 4411              	.LVL650:
 4412              	.L443:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4413              		.loc 1 3347 0
 4414 0124 0724     		movs	r4, #7
 4415              	.LVL651:
 4416 0126 A2E7     		b	.L431
 4417              	.LVL652:
 4418              	.L455:
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4419              		.loc 1 3353 0
 4420 0128 FFF7FEFF 		bl	get_fattime
 4421              	.LVL653:
 4422 012c 0646     		mov	r6, r0
 4423              	.LVL654:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4424              		.loc 1 3381 0
 4425 012e 0146     		mov	r1, r0
 4426 0130 0C98     		ldr	r0, [sp, #48]
 4427              	.LVL655:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 193


 4428 0132 0E30     		adds	r0, r0, #14
 4429 0134 FFF7FEFF 		bl	st_dword
 4430              	.LVL656:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4431              		.loc 1 3382 0
 4432 0138 3146     		mov	r1, r6
 4433 013a 0C98     		ldr	r0, [sp, #48]
 4434 013c 1630     		adds	r0, r0, #22
 4435 013e FFF7FEFF 		bl	st_dword
 4436              	.LVL657:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4437              		.loc 1 3383 0
 4438 0142 2022     		movs	r2, #32
 4439 0144 0C9B     		ldr	r3, [sp, #48]
 4440 0146 DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4441              		.loc 1 3384 0
 4442 0148 039E     		ldr	r6, [sp, #12]
 4443              	.LVL658:
 4444 014a DDF83080 		ldr	r8, [sp, #48]
 4445 014e 4146     		mov	r1, r8
 4446 0150 3046     		mov	r0, r6
 4447 0152 FFF7FEFF 		bl	ld_clust
 4448              	.LVL659:
 4449 0156 8146     		mov	r9, r0
 4450              	.LVL660:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4451              		.loc 1 3385 0
 4452 0158 0022     		movs	r2, #0
 4453 015a 4146     		mov	r1, r8
 4454 015c 3046     		mov	r0, r6
 4455              	.LVL661:
 4456 015e FFF7FEFF 		bl	st_clust
 4457              	.LVL662:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4458              		.loc 1 3386 0
 4459 0162 0021     		movs	r1, #0
 4460 0164 0C98     		ldr	r0, [sp, #48]
 4461 0166 1C30     		adds	r0, r0, #28
 4462 0168 FFF7FEFF 		bl	st_dword
 4463              	.LVL663:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4464              		.loc 1 3387 0
 4465 016c 0122     		movs	r2, #1
 4466 016e 039B     		ldr	r3, [sp, #12]
 4467 0170 DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4468              		.loc 1 3389 0
 4469 0172 B9F1000F 		cmp	r9, #0
 4470 0176 3FF47EAF 		beq	.L432
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4471              		.loc 1 3390 0
 4472 017a 039B     		ldr	r3, [sp, #12]
 4473 017c DE6A     		ldr	r6, [r3, #44]
 4474              	.LVL664:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4475              		.loc 1 3391 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 194


 4476 017e 0022     		movs	r2, #0
 4477 0180 4946     		mov	r1, r9
 4478 0182 04A8     		add	r0, sp, #16
 4479 0184 FFF7FEFF 		bl	remove_chain
 4480              	.LVL665:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4481              		.loc 1 3392 0
 4482 0188 0446     		mov	r4, r0
 4483 018a 0028     		cmp	r0, #0
 4484 018c 7FF473AF 		bne	.L432
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4485              		.loc 1 3393 0
 4486 0190 3146     		mov	r1, r6
 4487 0192 0398     		ldr	r0, [sp, #12]
 4488              	.LVL666:
 4489 0194 FFF7FEFF 		bl	move_window
 4490              	.LVL667:
 4491 0198 0446     		mov	r4, r0
 4492              	.LVL668:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4493              		.loc 1 3394 0
 4494 019a 09F1FF33 		add	r3, r9, #-1
 4495 019e 039A     		ldr	r2, [sp, #12]
 4496 01a0 D360     		str	r3, [r2, #12]
 4497 01a2 68E7     		b	.L432
 4498              	.LVL669:
 4499              	.L428:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4500              		.loc 1 3401 0
 4501 01a4 002C     		cmp	r4, #0
 4502 01a6 7FF466AF 		bne	.L432
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4503              		.loc 1 3402 0
 4504 01aa 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4505 01ae 13F0100F 		tst	r3, #16
 4506 01b2 09D1     		bne	.L445
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4507              		.loc 1 3405 0
 4508 01b4 16F0020F 		tst	r6, #2
 4509 01b8 3FF45DAF 		beq	.L432
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4510              		.loc 1 3405 0 is_stmt 0 discriminator 1
 4511 01bc 13F0010F 		tst	r3, #1
 4512 01c0 3FF459AF 		beq	.L432
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4513              		.loc 1 3406 0 is_stmt 1
 4514 01c4 0724     		movs	r4, #7
 4515              	.LVL670:
 4516 01c6 56E7     		b	.L432
 4517              	.LVL671:
 4518              	.L445:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4519              		.loc 1 3403 0
 4520 01c8 0424     		movs	r4, #4
 4521              	.LVL672:
 4522 01ca 54E7     		b	.L432
 4523              	.LVL673:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 195


 4524              	.L457:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4525              		.loc 1 3467 0
 4526 01cc 0224     		movs	r4, #2
 4527              	.LVL674:
 4528 01ce 09E0     		b	.L436
 4529              	.L437:
 4530              	.LVL675:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4531              		.loc 1 3465 0 discriminator 2
 4532 01d0 F61B     		subs	r6, r6, r7
 4533              	.LVL676:
 4534              	.L435:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4535              		.loc 1 3465 0 is_stmt 0 discriminator 1
 4536 01d2 64B9     		cbnz	r4, .L438
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4537              		.loc 1 3465 0 discriminator 3
 4538 01d4 BE42     		cmp	r6, r7
 4539 01d6 0AD9     		bls	.L438
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4540              		.loc 1 3466 0 is_stmt 1
 4541 01d8 2846     		mov	r0, r5
 4542 01da FFF7FEFF 		bl	get_fat
 4543              	.LVL677:
 4544 01de 0146     		mov	r1, r0
 4545              	.LVL678:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4546              		.loc 1 3467 0
 4547 01e0 0128     		cmp	r0, #1
 4548 01e2 F3D9     		bls	.L457
 4549              	.LVL679:
 4550              	.L436:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4551              		.loc 1 3468 0
 4552 01e4 B1F1FF3F 		cmp	r1, #-1
 4553 01e8 F2D1     		bne	.L437
 4554 01ea 0124     		movs	r4, #1
 4555              	.LVL680:
 4556 01ec F0E7     		b	.L437
 4557              	.LVL681:
 4558              	.L438:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4559              		.loc 1 3470 0
 4560 01ee E961     		str	r1, [r5, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4561              		.loc 1 3471 0
 4562 01f0 002C     		cmp	r4, #0
 4563 01f2 7FF417AF 		bne	.L426
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4564              		.loc 1 3471 0 is_stmt 0 discriminator 1
 4565 01f6 C6F30803 		ubfx	r3, r6, #0, #9
 4566 01fa 002B     		cmp	r3, #0
 4567 01fc 3FF412AF 		beq	.L426
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4568              		.loc 1 3472 0 is_stmt 1
 4569 0200 039F     		ldr	r7, [sp, #12]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 196


 4570              	.LVL682:
 4571 0202 3846     		mov	r0, r7
 4572 0204 FFF7FEFF 		bl	clust2sect
 4573              	.LVL683:
 4574 0208 08B9     		cbnz	r0, .L458
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4575              		.loc 1 3473 0
 4576 020a 0224     		movs	r4, #2
 4577              	.LVL684:
 4578 020c 0AE7     		b	.L426
 4579              	.LVL685:
 4580              	.L458:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4581              		.loc 1 3475 0
 4582 020e 00EB5622 		add	r2, r0, r6, lsr #9
 4583 0212 2A62     		str	r2, [r5, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4584              		.loc 1 3477 0
 4585 0214 0123     		movs	r3, #1
 4586 0216 4146     		mov	r1, r8
 4587 0218 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4588              	.LVL686:
 4589 021a FFF7FEFF 		bl	disk_read
 4590              	.LVL687:
 4591 021e 0028     		cmp	r0, #0
 4592 0220 3FF400AF 		beq	.L426
 4593 0224 0124     		movs	r4, #1
 4594              	.LVL688:
 4595 0226 FDE6     		b	.L426
 4596              	.LVL689:
 4597              	.L440:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4598              		.loc 1 3313 0
 4599 0228 0924     		movs	r4, #9
 4600              	.LVL690:
 4601              	.L425:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4602              		.loc 1 3491 0
 4603 022a 2046     		mov	r0, r4
 4604 022c 11B0     		add	sp, sp, #68
 4605              	.LCFI50:
 4606              		.cfi_def_cfa_offset 28
 4607              		@ sp needed
 4608 022e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4609              		.cfi_endproc
 4610              	.LFE163:
 4612              		.section	.text.f_read,"ax",%progbits
 4613              		.align	1
 4614              		.global	f_read
 4615              		.syntax unified
 4616              		.thumb
 4617              		.thumb_func
 4618              		.fpu fpv4-sp-d16
 4620              	f_read:
 4621              	.LFB164:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4622              		.loc 1 3506 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 197


 4623              		.cfi_startproc
 4624              		@ args = 0, pretend = 0, frame = 16
 4625              		@ frame_needed = 0, uses_anonymous_args = 0
 4626              	.LVL691:
 4627 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4628              	.LCFI51:
 4629              		.cfi_def_cfa_offset 36
 4630              		.cfi_offset 4, -36
 4631              		.cfi_offset 5, -32
 4632              		.cfi_offset 6, -28
 4633              		.cfi_offset 7, -24
 4634              		.cfi_offset 8, -20
 4635              		.cfi_offset 9, -16
 4636              		.cfi_offset 10, -12
 4637              		.cfi_offset 11, -8
 4638              		.cfi_offset 14, -4
 4639 0004 85B0     		sub	sp, sp, #20
 4640              	.LCFI52:
 4641              		.cfi_def_cfa_offset 56
 4642 0006 0446     		mov	r4, r0
 4643 0008 8846     		mov	r8, r1
 4644 000a 1646     		mov	r6, r2
 4645 000c 9946     		mov	r9, r3
 4646              	.LVL692:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4647              		.loc 1 3515 0
 4648 000e 0023     		movs	r3, #0
 4649              	.LVL693:
 4650 0010 C9F80030 		str	r3, [r9]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4651              		.loc 1 3516 0
 4652 0014 0190     		str	r0, [sp, #4]
 4653 0016 03A9     		add	r1, sp, #12
 4654              	.LVL694:
 4655 0018 FFF7FEFF 		bl	validate
 4656              	.LVL695:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4657              		.loc 1 3517 0
 4658 001c 0746     		mov	r7, r0
 4659 001e 30B9     		cbnz	r0, .L460
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4660              		.loc 1 3517 0 is_stmt 0 discriminator 2
 4661 0020 677D     		ldrb	r7, [r4, #21]	@ zero_extendqisi2
 4662              	.LVL696:
 4663 0022 27B9     		cbnz	r7, .L460
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4664              		.loc 1 3518 0 is_stmt 1
 4665 0024 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4666 0026 13F0010F 		tst	r3, #1
 4667 002a 04D1     		bne	.L485
 4668 002c 0727     		movs	r7, #7
 4669              	.LVL697:
 4670              	.L460:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4671              		.loc 1 3590 0
 4672 002e 3846     		mov	r0, r7
 4673 0030 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 198


 4674              	.LCFI53:
 4675              		.cfi_remember_state
 4676              		.cfi_def_cfa_offset 36
 4677              		@ sp needed
 4678 0032 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4679              	.LVL698:
 4680              	.L485:
 4681              	.LCFI54:
 4682              		.cfi_restore_state
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4683              		.loc 1 3519 0
 4684 0036 E368     		ldr	r3, [r4, #12]
 4685 0038 A269     		ldr	r2, [r4, #24]
 4686 003a 9B1A     		subs	r3, r3, r2
 4687              	.LVL699:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4688              		.loc 1 3520 0
 4689 003c B342     		cmp	r3, r6
 4690 003e 53D2     		bcs	.L462
 4691 0040 1E46     		mov	r6, r3
 4692              	.LVL700:
 4693 0042 51E0     		b	.L462
 4694              	.LVL701:
 4695              	.L465:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4696              		.loc 1 3531 0
 4697 0044 E36A     		ldr	r3, [r4, #44]
 4698 0046 1BB1     		cbz	r3, .L467
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4699              		.loc 1 3532 0
 4700 0048 2046     		mov	r0, r4
 4701 004a FFF7FEFF 		bl	clmt_clust
 4702              	.LVL702:
 4703 004e 5DE0     		b	.L466
 4704              	.LVL703:
 4705              	.L467:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4706              		.loc 1 3536 0
 4707 0050 E169     		ldr	r1, [r4, #28]
 4708 0052 0198     		ldr	r0, [sp, #4]
 4709 0054 FFF7FEFF 		bl	get_fat
 4710              	.LVL704:
 4711 0058 58E0     		b	.L466
 4712              	.L488:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4713              		.loc 1 3539 0 discriminator 1
 4714 005a 0227     		movs	r7, #2
 4715              	.LVL705:
 4716 005c 6775     		strb	r7, [r4, #21]
 4717 005e E6E7     		b	.L460
 4718              	.LVL706:
 4719              	.L489:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4720              		.loc 1 3540 0 discriminator 1
 4721 0060 0127     		movs	r7, #1
 4722              	.LVL707:
 4723 0062 6775     		strb	r7, [r4, #21]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 199


 4724 0064 E3E7     		b	.L460
 4725              	.LVL708:
 4726              	.L490:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4727              		.loc 1 3544 0 discriminator 1
 4728 0066 0227     		movs	r7, #2
 4729              	.LVL709:
 4730 0068 6775     		strb	r7, [r4, #21]
 4731 006a E0E7     		b	.L460
 4732              	.LVL710:
 4733              	.L491:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4734              		.loc 1 3551 0 discriminator 1
 4735 006c 0127     		movs	r7, #1
 4736              	.LVL711:
 4737 006e 6775     		strb	r7, [r4, #21]
 4738 0070 DDE7     		b	.L460
 4739              	.LVL712:
 4740              	.L492:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4741              		.loc 1 3558 0 discriminator 1
 4742 0072 206A     		ldr	r0, [r4, #32]
 4743 0074 009B     		ldr	r3, [sp]
 4744 0076 C01A     		subs	r0, r0, r3
 4745 0078 8345     		cmp	fp, r0
 4746 007a 6DD9     		bls	.L474
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4747              		.loc 1 3559 0
 4748 007c 4FF40072 		mov	r2, #512
 4749 0080 04F13001 		add	r1, r4, #48
 4750 0084 08EB4020 		add	r0, r8, r0, lsl #9
 4751 0088 FFF7FEFF 		bl	mem_cpy
 4752              	.LVL713:
 4753 008c 64E0     		b	.L474
 4754              	.LVL714:
 4755              	.L471:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4756              		.loc 1 3567 0
 4757 008e 226A     		ldr	r2, [r4, #32]
 4758 0090 009B     		ldr	r3, [sp]
 4759              	.LVL715:
 4760 0092 9342     		cmp	r3, r2
 4761 0094 0DD0     		beq	.L476
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4762              		.loc 1 3569 0
 4763 0096 94F91430 		ldrsb	r3, [r4, #20]
 4764 009a 002B     		cmp	r3, #0
 4765 009c 5FDB     		blt	.L486
 4766              	.L477:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4767              		.loc 1 3574 0
 4768 009e 0123     		movs	r3, #1
 4769 00a0 009A     		ldr	r2, [sp]
 4770 00a2 04F13001 		add	r1, r4, #48
 4771 00a6 0398     		ldr	r0, [sp, #12]
 4772 00a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4773 00aa FFF7FEFF 		bl	disk_read
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 200


 4774              	.LVL716:
 4775 00ae 0028     		cmp	r0, #0
 4776 00b0 64D1     		bne	.L487
 4777              	.L476:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4778              		.loc 1 3577 0
 4779 00b2 009B     		ldr	r3, [sp]
 4780 00b4 2362     		str	r3, [r4, #32]
 4781              	.LVL717:
 4782              	.L463:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4783              		.loc 1 3579 0
 4784 00b6 A369     		ldr	r3, [r4, #24]
 4785 00b8 C3F30803 		ubfx	r3, r3, #0, #9
 4786 00bc C3F50075 		rsb	r5, r3, #512
 4787              	.LVL718:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4788              		.loc 1 3580 0
 4789 00c0 AE42     		cmp	r6, r5
 4790 00c2 00D2     		bcs	.L479
 4791 00c4 3546     		mov	r5, r6
 4792              	.LVL719:
 4793              	.L479:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4794              		.loc 1 3585 0
 4795 00c6 04F13001 		add	r1, r4, #48
 4796 00ca 2A46     		mov	r2, r5
 4797 00cc 1944     		add	r1, r1, r3
 4798 00ce 4046     		mov	r0, r8
 4799 00d0 FFF7FEFF 		bl	mem_cpy
 4800              	.LVL720:
 4801              	.L475:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4802              		.loc 1 3523 0
 4803 00d4 A844     		add	r8, r8, r5
 4804              	.LVL721:
 4805 00d6 A369     		ldr	r3, [r4, #24]
 4806 00d8 2B44     		add	r3, r3, r5
 4807 00da A361     		str	r3, [r4, #24]
 4808 00dc D9F80030 		ldr	r3, [r9]
 4809 00e0 2B44     		add	r3, r3, r5
 4810 00e2 C9F80030 		str	r3, [r9]
 4811 00e6 761B     		subs	r6, r6, r5
 4812              	.LVL722:
 4813              	.L462:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4814              		.loc 1 3522 0
 4815 00e8 002E     		cmp	r6, #0
 4816 00ea A0D0     		beq	.L460
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4817              		.loc 1 3524 0
 4818 00ec A169     		ldr	r1, [r4, #24]
 4819 00ee C1F30803 		ubfx	r3, r1, #0, #9
 4820 00f2 002B     		cmp	r3, #0
 4821 00f4 DFD1     		bne	.L463
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4822              		.loc 1 3525 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 201


 4823 00f6 039B     		ldr	r3, [sp, #12]
 4824 00f8 B3F80AA0 		ldrh	r10, [r3, #10]
 4825 00fc 0AF1FF3A 		add	r10, r10, #-1
 4826              	.LVL723:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4827              		.loc 1 3526 0
 4828 0100 1AEA512A 		ands	r10, r10, r1, lsr #9
 4829              	.LVL724:
 4830 0104 08D1     		bne	.L464
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4831              		.loc 1 3527 0
 4832 0106 0029     		cmp	r1, #0
 4833 0108 9CD1     		bne	.L465
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4834              		.loc 1 3528 0
 4835 010a A068     		ldr	r0, [r4, #8]
 4836              	.LVL725:
 4837              	.L466:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4838              		.loc 1 3539 0
 4839 010c 0128     		cmp	r0, #1
 4840 010e A4D9     		bls	.L488
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4841              		.loc 1 3540 0
 4842 0110 B0F1FF3F 		cmp	r0, #-1
 4843 0114 A4D0     		beq	.L489
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4844              		.loc 1 3541 0
 4845 0116 E061     		str	r0, [r4, #28]
 4846              	.LVL726:
 4847              	.L464:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 4848              		.loc 1 3543 0
 4849 0118 039D     		ldr	r5, [sp, #12]
 4850 011a E169     		ldr	r1, [r4, #28]
 4851 011c 2846     		mov	r0, r5
 4852 011e FFF7FEFF 		bl	clust2sect
 4853              	.LVL727:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4854              		.loc 1 3544 0
 4855 0122 0028     		cmp	r0, #0
 4856 0124 9FD0     		beq	.L490
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 4857              		.loc 1 3545 0
 4858 0126 0AEB0003 		add	r3, r10, r0
 4859 012a 0093     		str	r3, [sp]
 4860              	.LVL728:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4861              		.loc 1 3547 0
 4862 012c 5FEA562B 		lsrs	fp, r6, #9
 4863              	.LVL729:
 4864 0130 ADD0     		beq	.L471
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 4865              		.loc 1 3548 0
 4866 0132 0AEB0B03 		add	r3, r10, fp
 4867              	.LVL730:
 4868 0136 6A89     		ldrh	r2, [r5, #10]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 202


 4869 0138 9342     		cmp	r3, r2
 4870 013a 01D9     		bls	.L472
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4871              		.loc 1 3549 0
 4872 013c A2EB0A0B 		sub	fp, r2, r10
 4873              	.LVL731:
 4874              	.L472:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4875              		.loc 1 3551 0
 4876 0140 5B46     		mov	r3, fp
 4877 0142 009A     		ldr	r2, [sp]
 4878 0144 4146     		mov	r1, r8
 4879 0146 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 4880 0148 FFF7FEFF 		bl	disk_read
 4881              	.LVL732:
 4882 014c 0028     		cmp	r0, #0
 4883 014e 8DD1     		bne	.L491
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4884              		.loc 1 3558 0
 4885 0150 94F91430 		ldrsb	r3, [r4, #20]
 4886 0154 002B     		cmp	r3, #0
 4887 0156 8CDB     		blt	.L492
 4888              	.L474:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4889              		.loc 1 3563 0
 4890 0158 4FEA4B25 		lsl	r5, fp, #9
 4891              	.LVL733:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4892              		.loc 1 3564 0
 4893 015c BAE7     		b	.L475
 4894              	.LVL734:
 4895              	.L486:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4896              		.loc 1 3570 0
 4897 015e 0123     		movs	r3, #1
 4898 0160 04F13001 		add	r1, r4, #48
 4899 0164 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 4900 0166 FFF7FEFF 		bl	disk_write
 4901              	.LVL735:
 4902 016a 20B9     		cbnz	r0, .L493
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4903              		.loc 1 3571 0
 4904 016c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4905 016e 03F07F03 		and	r3, r3, #127
 4906 0172 2375     		strb	r3, [r4, #20]
 4907 0174 93E7     		b	.L477
 4908              	.L493:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4909              		.loc 1 3570 0 discriminator 1
 4910 0176 0127     		movs	r7, #1
 4911              	.LVL736:
 4912 0178 6775     		strb	r7, [r4, #21]
 4913 017a 58E7     		b	.L460
 4914              	.LVL737:
 4915              	.L487:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4916              		.loc 1 3574 0 discriminator 1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 203


 4917 017c 0127     		movs	r7, #1
 4918              	.LVL738:
 4919 017e 6775     		strb	r7, [r4, #21]
 4920 0180 55E7     		b	.L460
 4921              		.cfi_endproc
 4922              	.LFE164:
 4924              		.section	.text.f_write,"ax",%progbits
 4925              		.align	1
 4926              		.global	f_write
 4927              		.syntax unified
 4928              		.thumb
 4929              		.thumb_func
 4930              		.fpu fpv4-sp-d16
 4932              	f_write:
 4933              	.LFB165:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4934              		.loc 1 3606 0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 16
 4937              		@ frame_needed = 0, uses_anonymous_args = 0
 4938              	.LVL739:
 4939 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4940              	.LCFI55:
 4941              		.cfi_def_cfa_offset 36
 4942              		.cfi_offset 4, -36
 4943              		.cfi_offset 5, -32
 4944              		.cfi_offset 6, -28
 4945              		.cfi_offset 7, -24
 4946              		.cfi_offset 8, -20
 4947              		.cfi_offset 9, -16
 4948              		.cfi_offset 10, -12
 4949              		.cfi_offset 11, -8
 4950              		.cfi_offset 14, -4
 4951 0004 85B0     		sub	sp, sp, #20
 4952              	.LCFI56:
 4953              		.cfi_def_cfa_offset 56
 4954 0006 0446     		mov	r4, r0
 4955 0008 8846     		mov	r8, r1
 4956 000a 1646     		mov	r6, r2
 4957 000c 9946     		mov	r9, r3
 4958              	.LVL740:
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4959              		.loc 1 3614 0
 4960 000e 0023     		movs	r3, #0
 4961              	.LVL741:
 4962 0010 C9F80030 		str	r3, [r9]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4963              		.loc 1 3615 0
 4964 0014 0090     		str	r0, [sp]
 4965 0016 03A9     		add	r1, sp, #12
 4966              	.LVL742:
 4967 0018 FFF7FEFF 		bl	validate
 4968              	.LVL743:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4969              		.loc 1 3616 0
 4970 001c 0746     		mov	r7, r0
 4971 001e 30B9     		cbnz	r0, .L495
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 204


3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4972              		.loc 1 3616 0 is_stmt 0 discriminator 2
 4973 0020 677D     		ldrb	r7, [r4, #21]	@ zero_extendqisi2
 4974              	.LVL744:
 4975 0022 27B9     		cbnz	r7, .L495
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4976              		.loc 1 3617 0 is_stmt 1
 4977 0024 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4978 0026 13F0020F 		tst	r3, #2
 4979 002a 04D1     		bne	.L520
 4980 002c 0727     		movs	r7, #7
 4981              	.LVL745:
 4982              	.L495:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4983              		.loc 1 3712 0
 4984 002e 3846     		mov	r0, r7
 4985 0030 05B0     		add	sp, sp, #20
 4986              	.LCFI57:
 4987              		.cfi_remember_state
 4988              		.cfi_def_cfa_offset 36
 4989              		@ sp needed
 4990 0032 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4991              	.LVL746:
 4992              	.L520:
 4993              	.LCFI58:
 4994              		.cfi_restore_state
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 4995              		.loc 1 3620 0
 4996 0036 A369     		ldr	r3, [r4, #24]
 4997 0038 F342     		cmn	r3, r6
 4998 003a C0F09580 		bcc	.L497
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4999              		.loc 1 3621 0
 5000 003e DE43     		mvns	r6, r3
 5001              	.LVL747:
 5002 0040 92E0     		b	.L497
 5003              	.LVL748:
 5004              	.L500:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5005              		.loc 1 3636 0
 5006 0042 E36A     		ldr	r3, [r4, #44]
 5007 0044 002B     		cmp	r3, #0
 5008 0046 35D0     		beq	.L502
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5009              		.loc 1 3637 0
 5010 0048 2046     		mov	r0, r4
 5011 004a FFF7FEFF 		bl	clmt_clust
 5012              	.LVL749:
 5013              	.L501:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5014              		.loc 1 3644 0
 5015 004e 0028     		cmp	r0, #0
 5016 0050 00F0B180 		beq	.L503
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5017              		.loc 1 3645 0
 5018 0054 0128     		cmp	r0, #1
 5019 0056 32D0     		beq	.L521
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 205


3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5020              		.loc 1 3646 0
 5021 0058 B0F1FF3F 		cmp	r0, #-1
 5022 005c 32D0     		beq	.L522
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5023              		.loc 1 3647 0
 5024 005e E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5025              		.loc 1 3648 0
 5026 0060 A368     		ldr	r3, [r4, #8]
 5027 0062 03B9     		cbnz	r3, .L499
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5028              		.loc 1 3648 0 is_stmt 0 discriminator 1
 5029 0064 A060     		str	r0, [r4, #8]
 5030              	.LVL750:
 5031              	.L499:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5032              		.loc 1 3653 0 is_stmt 1
 5033 0066 94F91430 		ldrsb	r3, [r4, #20]
 5034 006a 002B     		cmp	r3, #0
 5035 006c 2DDB     		blt	.L523
 5036              	.L506:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5037              		.loc 1 3658 0
 5038 006e 039B     		ldr	r3, [sp, #12]
 5039 0070 0193     		str	r3, [sp, #4]
 5040 0072 E169     		ldr	r1, [r4, #28]
 5041 0074 1846     		mov	r0, r3
 5042 0076 FFF7FEFF 		bl	clust2sect
 5043              	.LVL751:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5044              		.loc 1 3659 0
 5045 007a 8346     		mov	fp, r0
 5046 007c 0028     		cmp	r0, #0
 5047 007e 35D0     		beq	.L524
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5048              		.loc 1 3660 0
 5049 0080 D344     		add	fp, fp, r10
 5050              	.LVL752:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5051              		.loc 1 3662 0
 5052 0082 750A     		lsrs	r5, r6, #9
 5053              	.LVL753:
 5054 0084 45D0     		beq	.L509
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5055              		.loc 1 3663 0
 5056 0086 0AEB0503 		add	r3, r10, r5
 5057 008a 019A     		ldr	r2, [sp, #4]
 5058 008c 5289     		ldrh	r2, [r2, #10]
 5059 008e 9342     		cmp	r3, r2
 5060 0090 01D9     		bls	.L510
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5061              		.loc 1 3664 0
 5062 0092 A2EB0A05 		sub	r5, r2, r10
 5063              	.LVL754:
 5064              	.L510:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 206


 5065              		.loc 1 3666 0
 5066 0096 2B46     		mov	r3, r5
 5067 0098 5A46     		mov	r2, fp
 5068 009a 4146     		mov	r1, r8
 5069 009c 0198     		ldr	r0, [sp, #4]
 5070 009e 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5071 00a0 FFF7FEFF 		bl	disk_write
 5072              	.LVL755:
 5073 00a4 28BB     		cbnz	r0, .L525
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5074              		.loc 1 3674 0
 5075 00a6 216A     		ldr	r1, [r4, #32]
 5076 00a8 A1EB0B01 		sub	r1, r1, fp
 5077 00ac 8D42     		cmp	r5, r1
 5078 00ae 23D8     		bhi	.L526
 5079              	.L512:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5080              		.loc 1 3680 0
 5081 00b0 6D02     		lsls	r5, r5, #9
 5082              	.LVL756:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5083              		.loc 1 3681 0
 5084 00b2 4AE0     		b	.L513
 5085              	.LVL757:
 5086              	.L502:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5087              		.loc 1 3641 0
 5088 00b4 E169     		ldr	r1, [r4, #28]
 5089 00b6 0098     		ldr	r0, [sp]
 5090 00b8 FFF7FEFF 		bl	create_chain
 5091              	.LVL758:
 5092 00bc C7E7     		b	.L501
 5093              	.L521:
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5094              		.loc 1 3645 0 discriminator 1
 5095 00be 0227     		movs	r7, #2
 5096              	.LVL759:
 5097 00c0 6775     		strb	r7, [r4, #21]
 5098 00c2 B4E7     		b	.L495
 5099              	.LVL760:
 5100              	.L522:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5101              		.loc 1 3646 0 discriminator 1
 5102 00c4 0127     		movs	r7, #1
 5103              	.LVL761:
 5104 00c6 6775     		strb	r7, [r4, #21]
 5105 00c8 B1E7     		b	.L495
 5106              	.LVL762:
 5107              	.L523:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5108              		.loc 1 3654 0
 5109 00ca 0123     		movs	r3, #1
 5110 00cc 226A     		ldr	r2, [r4, #32]
 5111 00ce 04F13001 		add	r1, r4, #48
 5112 00d2 0398     		ldr	r0, [sp, #12]
 5113 00d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5114 00d6 FFF7FEFF 		bl	disk_write
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 207


 5115              	.LVL763:
 5116 00da 20B9     		cbnz	r0, .L527
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5117              		.loc 1 3655 0
 5118 00dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5119 00de 03F07F03 		and	r3, r3, #127
 5120 00e2 2375     		strb	r3, [r4, #20]
 5121 00e4 C3E7     		b	.L506
 5122              	.L527:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5123              		.loc 1 3654 0 discriminator 1
 5124 00e6 0127     		movs	r7, #1
 5125              	.LVL764:
 5126 00e8 6775     		strb	r7, [r4, #21]
 5127 00ea A0E7     		b	.L495
 5128              	.LVL765:
 5129              	.L524:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5130              		.loc 1 3659 0 discriminator 1
 5131 00ec 0227     		movs	r7, #2
 5132              	.LVL766:
 5133 00ee 6775     		strb	r7, [r4, #21]
 5134 00f0 9DE7     		b	.L495
 5135              	.LVL767:
 5136              	.L525:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5137              		.loc 1 3666 0 discriminator 1
 5138 00f2 0127     		movs	r7, #1
 5139              	.LVL768:
 5140 00f4 6775     		strb	r7, [r4, #21]
 5141 00f6 9AE7     		b	.L495
 5142              	.LVL769:
 5143              	.L526:
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5144              		.loc 1 3675 0
 5145 00f8 4FF40072 		mov	r2, #512
 5146 00fc 08EB4121 		add	r1, r8, r1, lsl #9
 5147 0100 04F13000 		add	r0, r4, #48
 5148 0104 FFF7FEFF 		bl	mem_cpy
 5149              	.LVL770:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5150              		.loc 1 3676 0
 5151 0108 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5152 010a 03F07F03 		and	r3, r3, #127
 5153 010e 2375     		strb	r3, [r4, #20]
 5154 0110 CEE7     		b	.L512
 5155              	.L509:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5156              		.loc 1 3689 0
 5157 0112 236A     		ldr	r3, [r4, #32]
 5158 0114 9B45     		cmp	fp, r3
 5159 0116 03D0     		beq	.L514
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5160              		.loc 1 3690 0 discriminator 1
 5161 0118 A269     		ldr	r2, [r4, #24]
 5162 011a E368     		ldr	r3, [r4, #12]
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 208


 5163              		.loc 1 3689 0 discriminator 1
 5164 011c 9A42     		cmp	r2, r3
 5165 011e 3DD3     		bcc	.L528
 5166              	.L514:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5167              		.loc 1 3695 0
 5168 0120 C4F820B0 		str	fp, [r4, #32]
 5169              	.LVL771:
 5170              	.L498:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5171              		.loc 1 3697 0
 5172 0124 A369     		ldr	r3, [r4, #24]
 5173 0126 C3F30803 		ubfx	r3, r3, #0, #9
 5174 012a C3F50075 		rsb	r5, r3, #512
 5175              	.LVL772:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5176              		.loc 1 3698 0
 5177 012e AE42     		cmp	r6, r5
 5178 0130 00D2     		bcs	.L515
 5179 0132 3546     		mov	r5, r6
 5180              	.LVL773:
 5181              	.L515:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5182              		.loc 1 3704 0
 5183 0134 04F13000 		add	r0, r4, #48
 5184 0138 2A46     		mov	r2, r5
 5185 013a 4146     		mov	r1, r8
 5186 013c 1844     		add	r0, r0, r3
 5187 013e FFF7FEFF 		bl	mem_cpy
 5188              	.LVL774:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5189              		.loc 1 3705 0
 5190 0142 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5191 0144 63F07F03 		orn	r3, r3, #127
 5192 0148 2375     		strb	r3, [r4, #20]
 5193              	.L513:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5194              		.loc 1 3625 0
 5195 014a A844     		add	r8, r8, r5
 5196              	.LVL775:
 5197 014c A369     		ldr	r3, [r4, #24]
 5198 014e 2B44     		add	r3, r3, r5
 5199 0150 A361     		str	r3, [r4, #24]
 5200 0152 E268     		ldr	r2, [r4, #12]
 5201 0154 9342     		cmp	r3, r2
 5202 0156 38BF     		it	cc
 5203 0158 1346     		movcc	r3, r2
 5204 015a E360     		str	r3, [r4, #12]
 5205 015c D9F80030 		ldr	r3, [r9]
 5206 0160 2B44     		add	r3, r3, r5
 5207 0162 C9F80030 		str	r3, [r9]
 5208 0166 761B     		subs	r6, r6, r5
 5209              	.LVL776:
 5210              	.L497:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5211              		.loc 1 3624 0
 5212 0168 2EB3     		cbz	r6, .L503
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 209


3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5213              		.loc 1 3626 0
 5214 016a A169     		ldr	r1, [r4, #24]
 5215 016c C1F30803 		ubfx	r3, r1, #0, #9
 5216 0170 002B     		cmp	r3, #0
 5217 0172 D7D1     		bne	.L498
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5218              		.loc 1 3627 0
 5219 0174 039B     		ldr	r3, [sp, #12]
 5220 0176 B3F80AA0 		ldrh	r10, [r3, #10]
 5221 017a 0AF1FF3A 		add	r10, r10, #-1
 5222              	.LVL777:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5223              		.loc 1 3628 0
 5224 017e 1AEA512A 		ands	r10, r10, r1, lsr #9
 5225              	.LVL778:
 5226 0182 7FF470AF 		bne	.L499
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5227              		.loc 1 3629 0
 5228 0186 0029     		cmp	r1, #0
 5229 0188 7FF45BAF 		bne	.L500
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5230              		.loc 1 3630 0
 5231 018c A068     		ldr	r0, [r4, #8]
 5232              	.LVL779:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5233              		.loc 1 3631 0
 5234 018e 0028     		cmp	r0, #0
 5235 0190 7FF45DAF 		bne	.L501
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5236              		.loc 1 3632 0
 5237 0194 0098     		ldr	r0, [sp]
 5238              	.LVL780:
 5239 0196 FFF7FEFF 		bl	create_chain
 5240              	.LVL781:
 5241 019a 58E7     		b	.L501
 5242              	.LVL782:
 5243              	.L528:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5244              		.loc 1 3691 0
 5245 019c 0123     		movs	r3, #1
 5246 019e 5A46     		mov	r2, fp
 5247 01a0 04F13001 		add	r1, r4, #48
 5248 01a4 0198     		ldr	r0, [sp, #4]
 5249 01a6 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5250 01a8 FFF7FEFF 		bl	disk_read
 5251              	.LVL783:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5252              		.loc 1 3690 0
 5253 01ac 0028     		cmp	r0, #0
 5254 01ae B7D0     		beq	.L514
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5255              		.loc 1 3692 0
 5256 01b0 0127     		movs	r7, #1
 5257              	.LVL784:
 5258 01b2 6775     		strb	r7, [r4, #21]
 5259 01b4 3BE7     		b	.L495
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 210


 5260              	.LVL785:
 5261              	.L503:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5262              		.loc 1 3709 0
 5263 01b6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5264 01b8 43F04003 		orr	r3, r3, #64
 5265 01bc 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5266              		.loc 1 3711 0
 5267 01be 36E7     		b	.L495
 5268              		.cfi_endproc
 5269              	.LFE165:
 5271              		.section	.text.putc_bfd,"ax",%progbits
 5272              		.align	1
 5273              		.syntax unified
 5274              		.thumb
 5275              		.thumb_func
 5276              		.fpu fpv4-sp-d16
 5278              	putc_bfd:
 5279              	.LFB182:
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5280              		.loc 1 5913 0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 8
 5283              		@ frame_needed = 0, uses_anonymous_args = 0
 5284              	.LVL786:
 5285 0000 70B5     		push	{r4, r5, r6, lr}
 5286              	.LCFI59:
 5287              		.cfi_def_cfa_offset 16
 5288              		.cfi_offset 4, -16
 5289              		.cfi_offset 5, -12
 5290              		.cfi_offset 6, -8
 5291              		.cfi_offset 14, -4
 5292 0002 82B0     		sub	sp, sp, #8
 5293              	.LCFI60:
 5294              		.cfi_def_cfa_offset 24
 5295 0004 0446     		mov	r4, r0
 5296 0006 0E46     		mov	r6, r1
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5297              		.loc 1 5918 0
 5298 0008 0A29     		cmp	r1, #10
 5299 000a 0DD0     		beq	.L536
 5300              	.LVL787:
 5301              	.L530:
5922:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5302              		.loc 1 5922 0
 5303 000c 6368     		ldr	r3, [r4, #4]
 5304              	.LVL788:
5923:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5305              		.loc 1 5923 0
 5306 000e 002B     		cmp	r3, #0
 5307 0010 08DB     		blt	.L529
5952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5308              		.loc 1 5952 0
 5309 0012 5D1C     		adds	r5, r3, #1
 5310              	.LVL789:
 5311 0014 2344     		add	r3, r3, r4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 211


 5312 0016 1E73     		strb	r6, [r3, #12]
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5313              		.loc 1 5955 0
 5314 0018 3C2D     		cmp	r5, #60
 5315 001a 09DC     		bgt	.L537
 5316              	.LVL790:
 5317              	.L532:
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5318              		.loc 1 5959 0
 5319 001c 6560     		str	r5, [r4, #4]
5960:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5320              		.loc 1 5960 0
 5321 001e A368     		ldr	r3, [r4, #8]
 5322 0020 0133     		adds	r3, r3, #1
 5323 0022 A360     		str	r3, [r4, #8]
 5324              	.LVL791:
 5325              	.L529:
5961:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5326              		.loc 1 5961 0
 5327 0024 02B0     		add	sp, sp, #8
 5328              	.LCFI61:
 5329              		.cfi_remember_state
 5330              		.cfi_def_cfa_offset 16
 5331              		@ sp needed
 5332 0026 70BD     		pop	{r4, r5, r6, pc}
 5333              	.LVL792:
 5334              	.L536:
 5335              	.LCFI62:
 5336              		.cfi_restore_state
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5337              		.loc 1 5919 0
 5338 0028 0D21     		movs	r1, #13
 5339              	.LVL793:
 5340 002a FFF7E9FF 		bl	putc_bfd
 5341              	.LVL794:
 5342 002e EDE7     		b	.L530
 5343              	.LVL795:
 5344              	.L537:
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5345              		.loc 1 5956 0
 5346 0030 01AB     		add	r3, sp, #4
 5347 0032 2A46     		mov	r2, r5
 5348 0034 04F10C01 		add	r1, r4, #12
 5349 0038 2068     		ldr	r0, [r4]
 5350 003a FFF7FEFF 		bl	f_write
 5351              	.LVL796:
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5352              		.loc 1 5957 0
 5353 003e 019B     		ldr	r3, [sp, #4]
 5354 0040 9D42     		cmp	r5, r3
 5355 0042 02D0     		beq	.L538
 5356 0044 4FF0FF35 		mov	r5, #-1
 5357              	.LVL797:
 5358 0048 E8E7     		b	.L532
 5359              	.LVL798:
 5360              	.L538:
 5361 004a 0025     		movs	r5, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 212


 5362              	.LVL799:
 5363 004c E6E7     		b	.L532
 5364              		.cfi_endproc
 5365              	.LFE182:
 5367              		.section	.text.putc_flush,"ax",%progbits
 5368              		.align	1
 5369              		.syntax unified
 5370              		.thumb
 5371              		.thumb_func
 5372              		.fpu fpv4-sp-d16
 5374              	putc_flush:
 5375              	.LFB183:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5376              		.loc 1 5968 0
 5377              		.cfi_startproc
 5378              		@ args = 0, pretend = 0, frame = 8
 5379              		@ frame_needed = 0, uses_anonymous_args = 0
 5380              	.LVL800:
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5381              		.loc 1 5971 0
 5382 0000 4268     		ldr	r2, [r0, #4]
 5383 0002 002A     		cmp	r2, #0
 5384 0004 10DB     		blt	.L541
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5385              		.loc 1 5968 0
 5386 0006 10B5     		push	{r4, lr}
 5387              	.LCFI63:
 5388              		.cfi_def_cfa_offset 8
 5389              		.cfi_offset 4, -8
 5390              		.cfi_offset 14, -4
 5391 0008 82B0     		sub	sp, sp, #8
 5392              	.LCFI64:
 5393              		.cfi_def_cfa_offset 16
 5394 000a 0446     		mov	r4, r0
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5395              		.loc 1 5972 0
 5396 000c 01AB     		add	r3, sp, #4
 5397 000e 00F10C01 		add	r1, r0, #12
 5398 0012 0068     		ldr	r0, [r0]
 5399              	.LVL801:
 5400 0014 FFF7FEFF 		bl	f_write
 5401              	.LVL802:
 5402 0018 48B9     		cbnz	r0, .L542
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5403              		.loc 1 5973 0
 5404 001a 6268     		ldr	r2, [r4, #4]
 5405 001c 019B     		ldr	r3, [sp, #4]
 5406 001e 9A42     		cmp	r2, r3
 5407 0020 08D1     		bne	.L543
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5408              		.loc 1 5973 0 is_stmt 0 discriminator 1
 5409 0022 A068     		ldr	r0, [r4, #8]
 5410              	.L539:
5975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5411              		.loc 1 5975 0 is_stmt 1
 5412 0024 02B0     		add	sp, sp, #8
 5413              	.LCFI65:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 213


 5414              		.cfi_def_cfa_offset 8
 5415              		@ sp needed
 5416 0026 10BD     		pop	{r4, pc}
 5417              	.LVL803:
 5418              	.L541:
 5419              	.LCFI66:
 5420              		.cfi_def_cfa_offset 0
 5421              		.cfi_restore 4
 5422              		.cfi_restore 14
5974:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5423              		.loc 1 5974 0
 5424 0028 4FF0FF30 		mov	r0, #-1
 5425              	.LVL804:
 5426 002c 7047     		bx	lr
 5427              	.LVL805:
 5428              	.L542:
 5429              	.LCFI67:
 5430              		.cfi_def_cfa_offset 16
 5431              		.cfi_offset 4, -8
 5432              		.cfi_offset 14, -4
 5433 002e 4FF0FF30 		mov	r0, #-1
 5434 0032 F7E7     		b	.L539
 5435              	.L543:
 5436 0034 4FF0FF30 		mov	r0, #-1
 5437 0038 F4E7     		b	.L539
 5438              		.cfi_endproc
 5439              	.LFE183:
 5441              		.section	.text.f_sync,"ax",%progbits
 5442              		.align	1
 5443              		.global	f_sync
 5444              		.syntax unified
 5445              		.thumb
 5446              		.thumb_func
 5447              		.fpu fpv4-sp-d16
 5449              	f_sync:
 5450              	.LFB166:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5451              		.loc 1 3724 0
 5452              		.cfi_startproc
 5453              		@ args = 0, pretend = 0, frame = 8
 5454              		@ frame_needed = 0, uses_anonymous_args = 0
 5455              	.LVL806:
 5456 0000 70B5     		push	{r4, r5, r6, lr}
 5457              	.LCFI68:
 5458              		.cfi_def_cfa_offset 16
 5459              		.cfi_offset 4, -16
 5460              		.cfi_offset 5, -12
 5461              		.cfi_offset 6, -8
 5462              		.cfi_offset 14, -4
 5463 0002 82B0     		sub	sp, sp, #8
 5464              	.LCFI69:
 5465              		.cfi_def_cfa_offset 24
 5466 0004 0446     		mov	r4, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5467              		.loc 1 3734 0
 5468 0006 01A9     		add	r1, sp, #4
 5469 0008 FFF7FEFF 		bl	validate
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 214


 5470              	.LVL807:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5471              		.loc 1 3735 0
 5472 000c 0346     		mov	r3, r0
 5473 000e 78B9     		cbnz	r0, .L549
3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5474              		.loc 1 3736 0
 5475 0010 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5476 0012 12F0400F 		tst	r2, #64
 5477 0016 0BD0     		beq	.L549
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5478              		.loc 1 3738 0
 5479 0018 12F0800F 		tst	r2, #128
 5480 001c 0BD1     		bne	.L553
 5481              	.LVL808:
 5482              	.L550:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5483              		.loc 1 3744 0
 5484 001e FFF7FEFF 		bl	get_fattime
 5485              	.LVL809:
 5486 0022 0646     		mov	r6, r0
 5487              	.LVL810:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5488              		.loc 1 3774 0
 5489 0024 616A     		ldr	r1, [r4, #36]
 5490 0026 0198     		ldr	r0, [sp, #4]
 5491              	.LVL811:
 5492 0028 FFF7FEFF 		bl	move_window
 5493              	.LVL812:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5494              		.loc 1 3775 0
 5495 002c 0346     		mov	r3, r0
 5496 002e 80B1     		cbz	r0, .L554
 5497              	.LVL813:
 5498              	.L549:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5499              		.loc 1 3791 0
 5500 0030 1846     		mov	r0, r3
 5501 0032 02B0     		add	sp, sp, #8
 5502              	.LCFI70:
 5503              		.cfi_remember_state
 5504              		.cfi_def_cfa_offset 16
 5505              		@ sp needed
 5506 0034 70BD     		pop	{r4, r5, r6, pc}
 5507              	.LVL814:
 5508              	.L553:
 5509              	.LCFI71:
 5510              		.cfi_restore_state
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5511              		.loc 1 3739 0
 5512 0036 0123     		movs	r3, #1
 5513 0038 226A     		ldr	r2, [r4, #32]
 5514 003a 04F13001 		add	r1, r4, #48
 5515 003e 0198     		ldr	r0, [sp, #4]
 5516              	.LVL815:
 5517 0040 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5518 0042 FFF7FEFF 		bl	disk_write
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 215


 5519              	.LVL816:
 5520 0046 48BB     		cbnz	r0, .L551
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5521              		.loc 1 3740 0
 5522 0048 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5523 004a 03F07F03 		and	r3, r3, #127
 5524 004e 2375     		strb	r3, [r4, #20]
 5525 0050 E5E7     		b	.L550
 5526              	.LVL817:
 5527              	.L554:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5528              		.loc 1 3776 0
 5529 0052 A56A     		ldr	r5, [r4, #40]
 5530              	.LVL818:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5531              		.loc 1 3777 0
 5532 0054 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5533 0056 43F02003 		orr	r3, r3, #32
 5534 005a EB72     		strb	r3, [r5, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5535              		.loc 1 3778 0
 5536 005c A268     		ldr	r2, [r4, #8]
 5537 005e 2946     		mov	r1, r5
 5538 0060 2068     		ldr	r0, [r4]
 5539              	.LVL819:
 5540 0062 FFF7FEFF 		bl	st_clust
 5541              	.LVL820:
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5542              		.loc 1 3779 0
 5543 0066 E168     		ldr	r1, [r4, #12]
 5544 0068 05F11C00 		add	r0, r5, #28
 5545 006c FFF7FEFF 		bl	st_dword
 5546              	.LVL821:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5547              		.loc 1 3780 0
 5548 0070 3146     		mov	r1, r6
 5549 0072 05F11600 		add	r0, r5, #22
 5550 0076 FFF7FEFF 		bl	st_dword
 5551              	.LVL822:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5552              		.loc 1 3781 0
 5553 007a 0021     		movs	r1, #0
 5554 007c 05F11200 		add	r0, r5, #18
 5555 0080 FFF7FEFF 		bl	st_word
 5556              	.LVL823:
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5557              		.loc 1 3782 0
 5558 0084 0122     		movs	r2, #1
 5559 0086 019B     		ldr	r3, [sp, #4]
 5560 0088 DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5561              		.loc 1 3783 0
 5562 008a 0198     		ldr	r0, [sp, #4]
 5563 008c FFF7FEFF 		bl	sync_fs
 5564              	.LVL824:
 5565 0090 0346     		mov	r3, r0
 5566              	.LVL825:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 216


3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5567              		.loc 1 3784 0
 5568 0092 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5569 0094 22F04002 		bic	r2, r2, #64
 5570 0098 2275     		strb	r2, [r4, #20]
 5571 009a C9E7     		b	.L549
 5572              	.LVL826:
 5573              	.L551:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5574              		.loc 1 3739 0
 5575 009c 0123     		movs	r3, #1
 5576 009e C7E7     		b	.L549
 5577              		.cfi_endproc
 5578              	.LFE166:
 5580              		.section	.text.f_close,"ax",%progbits
 5581              		.align	1
 5582              		.global	f_close
 5583              		.syntax unified
 5584              		.thumb
 5585              		.thumb_func
 5586              		.fpu fpv4-sp-d16
 5588              	f_close:
 5589              	.LFB167:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5590              		.loc 1 3805 0
 5591              		.cfi_startproc
 5592              		@ args = 0, pretend = 0, frame = 8
 5593              		@ frame_needed = 0, uses_anonymous_args = 0
 5594              	.LVL827:
 5595 0000 10B5     		push	{r4, lr}
 5596              	.LCFI72:
 5597              		.cfi_def_cfa_offset 8
 5598              		.cfi_offset 4, -8
 5599              		.cfi_offset 14, -4
 5600 0002 82B0     		sub	sp, sp, #8
 5601              	.LCFI73:
 5602              		.cfi_def_cfa_offset 16
 5603 0004 0446     		mov	r4, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5604              		.loc 1 3810 0
 5605 0006 FFF7FEFF 		bl	f_sync
 5606              	.LVL828:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5607              		.loc 1 3811 0
 5608 000a 0346     		mov	r3, r0
 5609 000c 10B1     		cbz	r0, .L558
 5610              	.L556:
 5611              	.LVL829:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5612              		.loc 1 3829 0
 5613 000e 1846     		mov	r0, r3
 5614 0010 02B0     		add	sp, sp, #8
 5615              	.LCFI74:
 5616              		.cfi_remember_state
 5617              		.cfi_def_cfa_offset 8
 5618              		@ sp needed
 5619 0012 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 217


 5620              	.LVL830:
 5621              	.L558:
 5622              	.LCFI75:
 5623              		.cfi_restore_state
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5624              		.loc 1 3814 0
 5625 0014 01A9     		add	r1, sp, #4
 5626 0016 2046     		mov	r0, r4
 5627              	.LVL831:
 5628 0018 FFF7FEFF 		bl	validate
 5629              	.LVL832:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5630              		.loc 1 3815 0
 5631 001c 0346     		mov	r3, r0
 5632 001e 0028     		cmp	r0, #0
 5633 0020 F5D1     		bne	.L556
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5634              		.loc 1 3817 0
 5635 0022 2069     		ldr	r0, [r4, #16]
 5636              	.LVL833:
 5637 0024 FFF7FEFF 		bl	dec_lock
 5638              	.LVL834:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5639              		.loc 1 3818 0
 5640 0028 0346     		mov	r3, r0
 5641 002a 0028     		cmp	r0, #0
 5642 002c EFD1     		bne	.L556
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5643              		.loc 1 3821 0
 5644 002e 0022     		movs	r2, #0
 5645 0030 2260     		str	r2, [r4]
 5646 0032 ECE7     		b	.L556
 5647              		.cfi_endproc
 5648              	.LFE167:
 5650              		.section	.text.f_lseek,"ax",%progbits
 5651              		.align	1
 5652              		.global	f_lseek
 5653              		.syntax unified
 5654              		.thumb
 5655              		.thumb_func
 5656              		.fpu fpv4-sp-d16
 5658              	f_lseek:
 5659              	.LFB168:
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5660              		.loc 1 3994 0
 5661              		.cfi_startproc
 5662              		@ args = 0, pretend = 0, frame = 16
 5663              		@ frame_needed = 0, uses_anonymous_args = 0
 5664              	.LVL835:
 5665 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5666              	.LCFI76:
 5667              		.cfi_def_cfa_offset 36
 5668              		.cfi_offset 4, -36
 5669              		.cfi_offset 5, -32
 5670              		.cfi_offset 6, -28
 5671              		.cfi_offset 7, -24
 5672              		.cfi_offset 8, -20
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 218


 5673              		.cfi_offset 9, -16
 5674              		.cfi_offset 10, -12
 5675              		.cfi_offset 11, -8
 5676              		.cfi_offset 14, -4
 5677 0004 85B0     		sub	sp, sp, #20
 5678              	.LCFI77:
 5679              		.cfi_def_cfa_offset 56
 5680 0006 0446     		mov	r4, r0
 5681 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5682              		.loc 1 4003 0
 5683 000a 8046     		mov	r8, r0
 5684 000c 03A9     		add	r1, sp, #12
 5685              	.LVL836:
 5686 000e FFF7FEFF 		bl	validate
 5687              	.LVL837:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5688              		.loc 1 4004 0
 5689 0012 0546     		mov	r5, r0
 5690 0014 00B9     		cbnz	r0, .L560
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5691              		.loc 1 4004 0 is_stmt 0 discriminator 1
 5692 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5693              	.LVL838:
 5694              	.L560:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5695              		.loc 1 4010 0 is_stmt 1
 5696 0018 6DB9     		cbnz	r5, .L561
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5697              		.loc 1 4013 0
 5698 001a E36A     		ldr	r3, [r4, #44]
 5699 001c 002B     		cmp	r3, #0
 5700 001e 00F08B80 		beq	.L562
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5701              		.loc 1 4014 0
 5702 0022 B6F1FF3F 		cmp	r6, #-1
 5703 0026 0AD0     		beq	.L603
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5704              		.loc 1 4040 0
 5705 0028 E768     		ldr	r7, [r4, #12]
 5706 002a BE42     		cmp	r6, r7
 5707 002c 00D8     		bhi	.L570
 5708 002e 3746     		mov	r7, r6
 5709              	.L570:
 5710              	.LVL839:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5711              		.loc 1 4041 0
 5712 0030 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5713              		.loc 1 4042 0
 5714 0032 002F     		cmp	r7, #0
 5715 0034 42D1     		bne	.L604
 5716              	.LVL840:
 5717              	.L561:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5718              		.loc 1 4142 0
 5719 0036 2846     		mov	r0, r5
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 219


 5720 0038 05B0     		add	sp, sp, #20
 5721              	.LCFI78:
 5722              		.cfi_remember_state
 5723              		.cfi_def_cfa_offset 36
 5724              		@ sp needed
 5725 003a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5726              	.LVL841:
 5727              	.L603:
 5728              	.LCFI79:
 5729              		.cfi_restore_state
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5730              		.loc 1 4016 0
 5731 003e 1A1D     		adds	r2, r3, #4
 5732 0040 0192     		str	r2, [sp, #4]
 5733              	.LVL842:
 5734 0042 D3F800B0 		ldr	fp, [r3]
 5735              	.LVL843:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5736              		.loc 1 4017 0
 5737 0046 D4F808A0 		ldr	r10, [r4, #8]
 5738              	.LVL844:
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5739              		.loc 1 4018 0
 5740 004a BAF1000F 		cmp	r10, #0
 5741 004e 28D0     		beq	.L595
 5742 0050 4FF00209 		mov	r9, #2
 5743              	.LVL845:
 5744              	.L569:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5745              		.loc 1 4021 0
 5746 0054 09F10209 		add	r9, r9, #2
 5747              	.LVL846:
 5748 0058 5646     		mov	r6, r10
 5749 005a 0027     		movs	r7, #0
 5750              	.LVL847:
 5751              	.L567:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 5752              		.loc 1 4023 0
 5753 005c 0137     		adds	r7, r7, #1
 5754              	.LVL848:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5755              		.loc 1 4024 0
 5756 005e 3146     		mov	r1, r6
 5757 0060 4046     		mov	r0, r8
 5758 0062 FFF7FEFF 		bl	get_fat
 5759              	.LVL849:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5760              		.loc 1 4025 0
 5761 0066 0128     		cmp	r0, #1
 5762 0068 15D9     		bls	.L605
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5763              		.loc 1 4026 0
 5764 006a B0F1FF3F 		cmp	r0, #-1
 5765 006e 15D0     		beq	.L606
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5766              		.loc 1 4027 0
 5767 0070 731C     		adds	r3, r6, #1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 220


4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5768              		.loc 1 4024 0
 5769 0072 0646     		mov	r6, r0
 5770              	.LVL850:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5771              		.loc 1 4027 0
 5772 0074 9842     		cmp	r0, r3
 5773 0076 F1D0     		beq	.L567
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5774              		.loc 1 4028 0
 5775 0078 CB45     		cmp	fp, r9
 5776 007a 06D3     		bcc	.L568
 5777              	.LVL851:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5778              		.loc 1 4029 0
 5779 007c 019A     		ldr	r2, [sp, #4]
 5780 007e 1346     		mov	r3, r2
 5781              	.LVL852:
 5782 0080 43F8087B 		str	r7, [r3], #8
 5783              	.LVL853:
 5784 0084 C2F804A0 		str	r10, [r2, #4]
 5785 0088 0193     		str	r3, [sp, #4]
 5786              	.LVL854:
 5787              	.L568:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5788              		.loc 1 4031 0
 5789 008a 039B     		ldr	r3, [sp, #12]
 5790 008c 5B69     		ldr	r3, [r3, #20]
 5791 008e 9842     		cmp	r0, r3
 5792 0090 09D2     		bcs	.L564
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5793              		.loc 1 4024 0
 5794 0092 8246     		mov	r10, r0
 5795              	.LVL855:
 5796 0094 DEE7     		b	.L569
 5797              	.LVL856:
 5798              	.L605:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5799              		.loc 1 4025 0 discriminator 1
 5800 0096 0225     		movs	r5, #2
 5801              	.LVL857:
 5802 0098 6575     		strb	r5, [r4, #21]
 5803 009a CCE7     		b	.L561
 5804              	.LVL858:
 5805              	.L606:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5806              		.loc 1 4026 0 discriminator 1
 5807 009c 0125     		movs	r5, #1
 5808              	.LVL859:
 5809 009e 6575     		strb	r5, [r4, #21]
 5810 00a0 C9E7     		b	.L561
 5811              	.LVL860:
 5812              	.L595:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5813              		.loc 1 4016 0
 5814 00a2 4FF00209 		mov	r9, #2
 5815              	.LVL861:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 221


 5816              	.L564:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 5817              		.loc 1 4033 0
 5818 00a6 E36A     		ldr	r3, [r4, #44]
 5819 00a8 C3F80090 		str	r9, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5820              		.loc 1 4034 0
 5821 00ac D945     		cmp	r9, fp
 5822 00ae 01D9     		bls	.L607
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5823              		.loc 1 4037 0
 5824 00b0 1125     		movs	r5, #17
 5825              	.LVL862:
 5826 00b2 C0E7     		b	.L561
 5827              	.LVL863:
 5828              	.L607:
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 5829              		.loc 1 4035 0
 5830 00b4 0023     		movs	r3, #0
 5831 00b6 019A     		ldr	r2, [sp, #4]
 5832 00b8 1360     		str	r3, [r2]
 5833 00ba BCE7     		b	.L561
 5834              	.LVL864:
 5835              	.L604:
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 5836              		.loc 1 4043 0
 5837 00bc 07F1FF38 		add	r8, r7, #-1
 5838 00c0 4146     		mov	r1, r8
 5839 00c2 2046     		mov	r0, r4
 5840 00c4 FFF7FEFF 		bl	clmt_clust
 5841              	.LVL865:
 5842 00c8 0146     		mov	r1, r0
 5843 00ca E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 5844              		.loc 1 4044 0
 5845 00cc 039E     		ldr	r6, [sp, #12]
 5846 00ce 3046     		mov	r0, r6
 5847 00d0 FFF7FEFF 		bl	clust2sect
 5848              	.LVL866:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5849              		.loc 1 4045 0
 5850 00d4 10B9     		cbnz	r0, .L571
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5851              		.loc 1 4045 0 is_stmt 0 discriminator 1
 5852 00d6 0225     		movs	r5, #2
 5853              	.LVL867:
 5854 00d8 6575     		strb	r5, [r4, #21]
 5855 00da ACE7     		b	.L561
 5856              	.LVL868:
 5857              	.L571:
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 5858              		.loc 1 4046 0 is_stmt 1
 5859 00dc 7389     		ldrh	r3, [r6, #10]
 5860 00de 013B     		subs	r3, r3, #1
 5861 00e0 03EA5828 		and	r8, r3, r8, lsr #9
 5862 00e4 8044     		add	r8, r8, r0
 5863              	.LVL869:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 222


4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5864              		.loc 1 4047 0
 5865 00e6 C7F30807 		ubfx	r7, r7, #0, #9
 5866              	.LVL870:
 5867 00ea 002F     		cmp	r7, #0
 5868 00ec A3D0     		beq	.L561
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5869              		.loc 1 4047 0 is_stmt 0 discriminator 1
 5870 00ee 226A     		ldr	r2, [r4, #32]
 5871 00f0 9045     		cmp	r8, r2
 5872 00f2 A0D0     		beq	.L561
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5873              		.loc 1 4050 0 is_stmt 1
 5874 00f4 94F91430 		ldrsb	r3, [r4, #20]
 5875 00f8 002B     		cmp	r3, #0
 5876 00fa 0BDB     		blt	.L608
 5877              	.L572:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5878              		.loc 1 4055 0
 5879 00fc 0123     		movs	r3, #1
 5880 00fe 4246     		mov	r2, r8
 5881 0100 04F13001 		add	r1, r4, #48
 5882 0104 0398     		ldr	r0, [sp, #12]
 5883 0106 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5884 0108 FFF7FEFF 		bl	disk_read
 5885              	.LVL871:
 5886 010c 88B1     		cbz	r0, .L574
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5887              		.loc 1 4055 0 is_stmt 0 discriminator 1
 5888 010e 0125     		movs	r5, #1
 5889              	.LVL872:
 5890 0110 6575     		strb	r5, [r4, #21]
 5891 0112 90E7     		b	.L561
 5892              	.LVL873:
 5893              	.L608:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5894              		.loc 1 4051 0 is_stmt 1
 5895 0114 0123     		movs	r3, #1
 5896 0116 04F13001 		add	r1, r4, #48
 5897 011a 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 5898 011c FFF7FEFF 		bl	disk_write
 5899              	.LVL874:
 5900 0120 20B9     		cbnz	r0, .L609
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5901              		.loc 1 4052 0
 5902 0122 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5903 0124 03F07F03 		and	r3, r3, #127
 5904 0128 2375     		strb	r3, [r4, #20]
 5905 012a E7E7     		b	.L572
 5906              	.L609:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5907              		.loc 1 4051 0 discriminator 1
 5908 012c 0125     		movs	r5, #1
 5909              	.LVL875:
 5910 012e 6575     		strb	r5, [r4, #21]
 5911 0130 81E7     		b	.L561
 5912              	.LVL876:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 223


 5913              	.L574:
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5914              		.loc 1 4057 0
 5915 0132 C4F82080 		str	r8, [r4, #32]
 5916 0136 7EE7     		b	.L561
 5917              	.LVL877:
 5918              	.L562:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5919              		.loc 1 4069 0
 5920 0138 E368     		ldr	r3, [r4, #12]
 5921 013a 9E42     		cmp	r6, r3
 5922 013c 04D9     		bls	.L575
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5923              		.loc 1 4069 0 is_stmt 0 discriminator 1
 5924 013e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5925 0140 12F0020F 		tst	r2, #2
 5926 0144 00D1     		bne	.L575
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5927              		.loc 1 4070 0 is_stmt 1
 5928 0146 1E46     		mov	r6, r3
 5929              	.LVL878:
 5930              	.L575:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5931              		.loc 1 4072 0
 5932 0148 A369     		ldr	r3, [r4, #24]
 5933              	.LVL879:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5934              		.loc 1 4073 0
 5935 014a 0022     		movs	r2, #0
 5936 014c A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 5937              		.loc 1 4074 0
 5938 014e 002E     		cmp	r6, #0
 5939 0150 64D0     		beq	.L599
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5940              		.loc 1 4075 0
 5941 0152 039A     		ldr	r2, [sp, #12]
 5942 0154 B2F80A90 		ldrh	r9, [r2, #10]
 5943 0158 4FEA4929 		lsl	r9, r9, #9
 5944              	.LVL880:
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5945              		.loc 1 4076 0
 5946 015c 73B1     		cbz	r3, .L577
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 5947              		.loc 1 4077 0 discriminator 1
 5948 015e 721E     		subs	r2, r6, #1
 5949 0160 B2FBF9F2 		udiv	r2, r2, r9
 5950 0164 013B     		subs	r3, r3, #1
 5951              	.LVL881:
 5952 0166 B3FBF9F1 		udiv	r1, r3, r9
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5953              		.loc 1 4076 0 discriminator 1
 5954 016a 8A42     		cmp	r2, r1
 5955 016c 06D3     		bcc	.L577
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5956              		.loc 1 4078 0
 5957 016e C9F10002 		rsb	r2, r9, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 224


 5958 0172 1340     		ands	r3, r3, r2
 5959              	.LVL882:
 5960 0174 A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5961              		.loc 1 4079 0
 5962 0176 F61A     		subs	r6, r6, r3
 5963              	.LVL883:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5964              		.loc 1 4080 0
 5965 0178 E769     		ldr	r7, [r4, #28]
 5966              	.LVL884:
 5967 017a 02E0     		b	.L578
 5968              	.LVL885:
 5969              	.L577:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5970              		.loc 1 4082 0
 5971 017c A768     		ldr	r7, [r4, #8]
 5972              	.LVL886:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 5973              		.loc 1 4084 0
 5974 017e 17B1     		cbz	r7, .L610
 5975              	.L579:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5976              		.loc 1 4091 0
 5977 0180 E761     		str	r7, [r4, #28]
 5978              	.L578:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 5979              		.loc 1 4093 0
 5980 0182 0FBB     		cbnz	r7, .L582
 5981 0184 4BE0     		b	.L576
 5982              	.L610:
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 5983              		.loc 1 4085 0
 5984 0186 0021     		movs	r1, #0
 5985 0188 2046     		mov	r0, r4
 5986 018a FFF7FEFF 		bl	create_chain
 5987              	.LVL887:
 5988 018e 0746     		mov	r7, r0
 5989              	.LVL888:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5990              		.loc 1 4086 0
 5991 0190 0128     		cmp	r0, #1
 5992 0192 04D0     		beq	.L611
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 5993              		.loc 1 4087 0
 5994 0194 B0F1FF3F 		cmp	r0, #-1
 5995 0198 04D0     		beq	.L612
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5996              		.loc 1 4088 0
 5997 019a A060     		str	r0, [r4, #8]
 5998 019c F0E7     		b	.L579
 5999              	.L611:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6000              		.loc 1 4086 0 discriminator 1
 6001 019e 0225     		movs	r5, #2
 6002              	.LVL889:
 6003 01a0 6575     		strb	r5, [r4, #21]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 225


 6004 01a2 48E7     		b	.L561
 6005              	.LVL890:
 6006              	.L612:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6007              		.loc 1 4087 0 discriminator 1
 6008 01a4 0125     		movs	r5, #1
 6009              	.LVL891:
 6010 01a6 6575     		strb	r5, [r4, #21]
 6011 01a8 45E7     		b	.L561
 6012              	.LVL892:
 6013              	.L583:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6014              		.loc 1 4109 0
 6015 01aa 3946     		mov	r1, r7
 6016 01ac 4046     		mov	r0, r8
 6017 01ae FFF7FEFF 		bl	get_fat
 6018              	.LVL893:
 6019 01b2 0746     		mov	r7, r0
 6020              	.LVL894:
 6021              	.L585:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6022              		.loc 1 4111 0
 6023 01b4 B7F1FF3F 		cmp	r7, #-1
 6024 01b8 27D0     		beq	.L613
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6025              		.loc 1 4112 0
 6026 01ba 012F     		cmp	r7, #1
 6027 01bc 28D9     		bls	.L587
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6028              		.loc 1 4112 0 is_stmt 0 discriminator 2
 6029 01be 039B     		ldr	r3, [sp, #12]
 6030 01c0 5B69     		ldr	r3, [r3, #20]
 6031 01c2 9F42     		cmp	r7, r3
 6032 01c4 24D2     		bcs	.L587
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6033              		.loc 1 4113 0 is_stmt 1
 6034 01c6 E761     		str	r7, [r4, #28]
 6035              	.LVL895:
 6036              	.L582:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6037              		.loc 1 4094 0
 6038 01c8 4E45     		cmp	r6, r9
 6039 01ca 10D9     		bls	.L584
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6040              		.loc 1 4095 0
 6041 01cc A6EB0906 		sub	r6, r6, r9
 6042              	.LVL896:
 6043 01d0 A369     		ldr	r3, [r4, #24]
 6044 01d2 4B44     		add	r3, r3, r9
 6045 01d4 A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6046              		.loc 1 4097 0
 6047 01d6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6048 01d8 13F0020F 		tst	r3, #2
 6049 01dc E5D0     		beq	.L583
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6050              		.loc 1 4102 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 226


 6051 01de 3946     		mov	r1, r7
 6052 01e0 4046     		mov	r0, r8
 6053 01e2 FFF7FEFF 		bl	create_chain
 6054              	.LVL897:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6055              		.loc 1 4103 0
 6056 01e6 0746     		mov	r7, r0
 6057 01e8 0028     		cmp	r0, #0
 6058 01ea E3D1     		bne	.L585
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6059              		.loc 1 4104 0
 6060 01ec 0026     		movs	r6, #0
 6061              	.LVL898:
 6062              	.L584:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6063              		.loc 1 4115 0
 6064 01ee A369     		ldr	r3, [r4, #24]
 6065 01f0 3344     		add	r3, r3, r6
 6066 01f2 A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6067              		.loc 1 4116 0
 6068 01f4 C6F30803 		ubfx	r3, r6, #0, #9
 6069 01f8 93B3     		cbz	r3, .L601
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6070              		.loc 1 4117 0
 6071 01fa 3946     		mov	r1, r7
 6072 01fc 0398     		ldr	r0, [sp, #12]
 6073 01fe FFF7FEFF 		bl	clust2sect
 6074              	.LVL899:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6075              		.loc 1 4118 0
 6076 0202 40B9     		cbnz	r0, .L590
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6077              		.loc 1 4118 0 is_stmt 0 discriminator 1
 6078 0204 0225     		movs	r5, #2
 6079              	.LVL900:
 6080 0206 6575     		strb	r5, [r4, #21]
 6081 0208 15E7     		b	.L561
 6082              	.LVL901:
 6083              	.L613:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6084              		.loc 1 4111 0 is_stmt 1 discriminator 1
 6085 020a 0125     		movs	r5, #1
 6086              	.LVL902:
 6087 020c 6575     		strb	r5, [r4, #21]
 6088 020e 12E7     		b	.L561
 6089              	.LVL903:
 6090              	.L587:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6091              		.loc 1 4112 0 discriminator 3
 6092 0210 0225     		movs	r5, #2
 6093              	.LVL904:
 6094 0212 6575     		strb	r5, [r4, #21]
 6095 0214 0FE7     		b	.L561
 6096              	.LVL905:
 6097              	.L590:
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 227


 6098              		.loc 1 4119 0
 6099 0216 00EB5627 		add	r7, r0, r6, lsr #9
 6100              	.LVL906:
 6101 021a 00E0     		b	.L576
 6102              	.LVL907:
 6103              	.L599:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6104              		.loc 1 4073 0
 6105 021c 0027     		movs	r7, #0
 6106              	.LVL908:
 6107              	.L576:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6108              		.loc 1 4123 0
 6109 021e A369     		ldr	r3, [r4, #24]
 6110 0220 E268     		ldr	r2, [r4, #12]
 6111 0222 9342     		cmp	r3, r2
 6112 0224 04D9     		bls	.L591
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6113              		.loc 1 4124 0
 6114 0226 E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6115              		.loc 1 4125 0
 6116 0228 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6117 022a 42F04002 		orr	r2, r2, #64
 6118 022e 2275     		strb	r2, [r4, #20]
 6119              	.L591:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6120              		.loc 1 4127 0
 6121 0230 C3F30803 		ubfx	r3, r3, #0, #9
 6122 0234 002B     		cmp	r3, #0
 6123 0236 3FF4FEAE 		beq	.L561
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6124              		.loc 1 4127 0 is_stmt 0 discriminator 1
 6125 023a 226A     		ldr	r2, [r4, #32]
 6126 023c 9742     		cmp	r7, r2
 6127 023e 3FF4FAAE 		beq	.L561
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6128              		.loc 1 4130 0 is_stmt 1
 6129 0242 94F91430 		ldrsb	r3, [r4, #20]
 6130 0246 002B     		cmp	r3, #0
 6131 0248 0CDB     		blt	.L614
 6132              	.L592:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6133              		.loc 1 4135 0
 6134 024a 0123     		movs	r3, #1
 6135 024c 3A46     		mov	r2, r7
 6136 024e 04F13001 		add	r1, r4, #48
 6137 0252 0398     		ldr	r0, [sp, #12]
 6138 0254 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6139 0256 FFF7FEFF 		bl	disk_read
 6140              	.LVL909:
 6141 025a 98B9     		cbnz	r0, .L615
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6142              		.loc 1 4137 0
 6143 025c 2762     		str	r7, [r4, #32]
 6144 025e EAE6     		b	.L561
 6145              	.LVL910:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 228


 6146              	.L601:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6147              		.loc 1 4073 0
 6148 0260 0027     		movs	r7, #0
 6149              	.LVL911:
 6150 0262 DCE7     		b	.L576
 6151              	.LVL912:
 6152              	.L614:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6153              		.loc 1 4131 0
 6154 0264 0123     		movs	r3, #1
 6155 0266 04F13001 		add	r1, r4, #48
 6156 026a 0398     		ldr	r0, [sp, #12]
 6157 026c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6158 026e FFF7FEFF 		bl	disk_write
 6159              	.LVL913:
 6160 0272 20B9     		cbnz	r0, .L616
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6161              		.loc 1 4132 0
 6162 0274 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6163 0276 03F07F03 		and	r3, r3, #127
 6164 027a 2375     		strb	r3, [r4, #20]
 6165 027c E5E7     		b	.L592
 6166              	.L616:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6167              		.loc 1 4131 0 discriminator 1
 6168 027e 0125     		movs	r5, #1
 6169              	.LVL914:
 6170 0280 6575     		strb	r5, [r4, #21]
 6171 0282 D8E6     		b	.L561
 6172              	.LVL915:
 6173              	.L615:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6174              		.loc 1 4135 0 discriminator 1
 6175 0284 0125     		movs	r5, #1
 6176              	.LVL916:
 6177 0286 6575     		strb	r5, [r4, #21]
 6178 0288 D5E6     		b	.L561
 6179              		.cfi_endproc
 6180              	.LFE168:
 6182              		.section	.text.f_opendir,"ax",%progbits
 6183              		.align	1
 6184              		.global	f_opendir
 6185              		.syntax unified
 6186              		.thumb
 6187              		.thumb_func
 6188              		.fpu fpv4-sp-d16
 6190              	f_opendir:
 6191              	.LFB169:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6192              		.loc 1 4155 0
 6193              		.cfi_startproc
 6194              		@ args = 0, pretend = 0, frame = 16
 6195              		@ frame_needed = 0, uses_anonymous_args = 0
 6196              	.LVL917:
 6197 0000 30B5     		push	{r4, r5, lr}
 6198              	.LCFI80:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 229


 6199              		.cfi_def_cfa_offset 12
 6200              		.cfi_offset 4, -12
 6201              		.cfi_offset 5, -8
 6202              		.cfi_offset 14, -4
 6203 0002 85B0     		sub	sp, sp, #20
 6204              	.LCFI81:
 6205              		.cfi_def_cfa_offset 32
 6206 0004 0191     		str	r1, [sp, #4]
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6207              		.loc 1 4162 0
 6208 0006 0028     		cmp	r0, #0
 6209 0008 40D0     		beq	.L623
 6210 000a 0546     		mov	r5, r0
 6211              	.LVL918:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6212              		.loc 1 4166 0
 6213 000c 0022     		movs	r2, #0
 6214 000e 03A9     		add	r1, sp, #12
 6215              	.LVL919:
 6216 0010 01A8     		add	r0, sp, #4
 6217              	.LVL920:
 6218 0012 FFF7FEFF 		bl	find_volume
 6219              	.LVL921:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6220              		.loc 1 4167 0
 6221 0016 0446     		mov	r4, r0
 6222 0018 20B1     		cbz	r0, .L628
 6223              	.LVL922:
 6224              	.L619:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6225              		.loc 1 4209 0
 6226 001a 002C     		cmp	r4, #0
 6227 001c 37D0     		beq	.L618
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6228              		.loc 1 4209 0 is_stmt 0 discriminator 1
 6229 001e 0023     		movs	r3, #0
 6230 0020 2B60     		str	r3, [r5]
 6231 0022 34E0     		b	.L618
 6232              	.LVL923:
 6233              	.L628:
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6234              		.loc 1 4168 0 is_stmt 1
 6235 0024 039B     		ldr	r3, [sp, #12]
 6236 0026 2B60     		str	r3, [r5]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6237              		.loc 1 4170 0
 6238 0028 0199     		ldr	r1, [sp, #4]
 6239 002a 2846     		mov	r0, r5
 6240              	.LVL924:
 6241 002c FFF7FEFF 		bl	follow_path
 6242              	.LVL925:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6243              		.loc 1 4171 0
 6244 0030 0446     		mov	r4, r0
 6245 0032 68B9     		cbnz	r0, .L620
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6246              		.loc 1 4172 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 230


 6247 0034 95F92F30 		ldrsb	r3, [r5, #47]
 6248 0038 002B     		cmp	r3, #0
 6249 003a 08DB     		blt	.L621
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6250              		.loc 1 4173 0
 6251 003c AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 6252 003e 13F0100F 		tst	r3, #16
 6253 0042 09D0     		beq	.L624
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6254              		.loc 1 4185 0
 6255 0044 296A     		ldr	r1, [r5, #32]
 6256 0046 0398     		ldr	r0, [sp, #12]
 6257              	.LVL926:
 6258 0048 FFF7FEFF 		bl	ld_clust
 6259              	.LVL927:
 6260 004c A860     		str	r0, [r5, #8]
 6261              	.L621:
 6262              	.LVL928:
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
 6263              		.loc 1 4191 0
 6264 004e 2CB1     		cbz	r4, .L629
 6265              	.LVL929:
 6266              	.L620:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6267              		.loc 1 4207 0
 6268 0050 042C     		cmp	r4, #4
 6269 0052 E2D1     		bne	.L619
 6270 0054 0524     		movs	r4, #5
 6271              	.LVL930:
 6272 0056 E0E7     		b	.L619
 6273              	.LVL931:
 6274              	.L624:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6275              		.loc 1 4188 0
 6276 0058 0524     		movs	r4, #5
 6277 005a F8E7     		b	.L621
 6278              	.LVL932:
 6279              	.L629:
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6280              		.loc 1 4192 0
 6281 005c 039B     		ldr	r3, [sp, #12]
 6282 005e DB88     		ldrh	r3, [r3, #6]
 6283 0060 AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6284              		.loc 1 4193 0
 6285 0062 0021     		movs	r1, #0
 6286 0064 2846     		mov	r0, r5
 6287 0066 FFF7FEFF 		bl	dir_sdi
 6288              	.LVL933:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6289              		.loc 1 4195 0
 6290 006a 0446     		mov	r4, r0
 6291 006c 0028     		cmp	r0, #0
 6292 006e EFD1     		bne	.L620
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6293              		.loc 1 4196 0
 6294 0070 AB68     		ldr	r3, [r5, #8]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 231


 6295 0072 13B9     		cbnz	r3, .L630
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6296              		.loc 1 4200 0
 6297 0074 0023     		movs	r3, #0
 6298 0076 2B61     		str	r3, [r5, #16]
 6299 0078 EAE7     		b	.L620
 6300              	.L630:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6301              		.loc 1 4197 0
 6302 007a 0021     		movs	r1, #0
 6303 007c 2846     		mov	r0, r5
 6304              	.LVL934:
 6305 007e FFF7FEFF 		bl	inc_lock
 6306              	.LVL935:
 6307 0082 2861     		str	r0, [r5, #16]
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6308              		.loc 1 4198 0
 6309 0084 0028     		cmp	r0, #0
 6310 0086 E3D1     		bne	.L620
 6311 0088 1224     		movs	r4, #18
 6312 008a E1E7     		b	.L620
 6313              	.LVL936:
 6314              	.L623:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6315              		.loc 1 4162 0
 6316 008c 0924     		movs	r4, #9
 6317              	.LVL937:
 6318              	.L618:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6319              		.loc 1 4212 0
 6320 008e 2046     		mov	r0, r4
 6321 0090 05B0     		add	sp, sp, #20
 6322              	.LCFI82:
 6323              		.cfi_def_cfa_offset 12
 6324              		@ sp needed
 6325 0092 30BD     		pop	{r4, r5, pc}
 6326              		.cfi_endproc
 6327              	.LFE169:
 6329              		.section	.text.f_closedir,"ax",%progbits
 6330              		.align	1
 6331              		.global	f_closedir
 6332              		.syntax unified
 6333              		.thumb
 6334              		.thumb_func
 6335              		.fpu fpv4-sp-d16
 6337              	f_closedir:
 6338              	.LFB170:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6339              		.loc 1 4224 0
 6340              		.cfi_startproc
 6341              		@ args = 0, pretend = 0, frame = 8
 6342              		@ frame_needed = 0, uses_anonymous_args = 0
 6343              	.LVL938:
 6344 0000 10B5     		push	{r4, lr}
 6345              	.LCFI83:
 6346              		.cfi_def_cfa_offset 8
 6347              		.cfi_offset 4, -8
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 232


 6348              		.cfi_offset 14, -4
 6349 0002 82B0     		sub	sp, sp, #8
 6350              	.LCFI84:
 6351              		.cfi_def_cfa_offset 16
 6352 0004 0446     		mov	r4, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6353              		.loc 1 4229 0
 6354 0006 01A9     		add	r1, sp, #4
 6355 0008 FFF7FEFF 		bl	validate
 6356              	.LVL939:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6357              		.loc 1 4230 0
 6358 000c 0346     		mov	r3, r0
 6359 000e 20B9     		cbnz	r0, .L632
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6360              		.loc 1 4232 0
 6361 0010 2069     		ldr	r0, [r4, #16]
 6362              	.LVL940:
 6363 0012 28B9     		cbnz	r0, .L635
 6364              	.L633:
 6365              	.LVL941:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6366              		.loc 1 4235 0
 6367 0014 0BB9     		cbnz	r3, .L632
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6368              		.loc 1 4238 0
 6369 0016 0022     		movs	r2, #0
 6370 0018 2260     		str	r2, [r4]
 6371              	.LVL942:
 6372              	.L632:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6373              		.loc 1 4245 0
 6374 001a 1846     		mov	r0, r3
 6375 001c 02B0     		add	sp, sp, #8
 6376              	.LCFI85:
 6377              		.cfi_remember_state
 6378              		.cfi_def_cfa_offset 8
 6379              		@ sp needed
 6380 001e 10BD     		pop	{r4, pc}
 6381              	.LVL943:
 6382              	.L635:
 6383              	.LCFI86:
 6384              		.cfi_restore_state
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6385              		.loc 1 4233 0
 6386 0020 FFF7FEFF 		bl	dec_lock
 6387              	.LVL944:
 6388 0024 0346     		mov	r3, r0
 6389              	.LVL945:
 6390 0026 F5E7     		b	.L633
 6391              		.cfi_endproc
 6392              	.LFE170:
 6394              		.section	.text.f_readdir,"ax",%progbits
 6395              		.align	1
 6396              		.global	f_readdir
 6397              		.syntax unified
 6398              		.thumb
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 233


 6399              		.thumb_func
 6400              		.fpu fpv4-sp-d16
 6402              	f_readdir:
 6403              	.LFB171:
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6404              		.loc 1 4258 0
 6405              		.cfi_startproc
 6406              		@ args = 0, pretend = 0, frame = 8
 6407              		@ frame_needed = 0, uses_anonymous_args = 0
 6408              	.LVL946:
 6409 0000 70B5     		push	{r4, r5, r6, lr}
 6410              	.LCFI87:
 6411              		.cfi_def_cfa_offset 16
 6412              		.cfi_offset 4, -16
 6413              		.cfi_offset 5, -12
 6414              		.cfi_offset 6, -8
 6415              		.cfi_offset 14, -4
 6416 0002 82B0     		sub	sp, sp, #8
 6417              	.LCFI88:
 6418              		.cfi_def_cfa_offset 24
 6419 0004 0546     		mov	r5, r0
 6420 0006 0E46     		mov	r6, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6421              		.loc 1 4264 0
 6422 0008 01A9     		add	r1, sp, #4
 6423              	.LVL947:
 6424 000a FFF7FEFF 		bl	validate
 6425              	.LVL948:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6426              		.loc 1 4265 0
 6427 000e 0446     		mov	r4, r0
 6428 0010 40B9     		cbnz	r0, .L637
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6429              		.loc 1 4266 0
 6430 0012 56B1     		cbz	r6, .L641
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6431              		.loc 1 4270 0
 6432 0014 0021     		movs	r1, #0
 6433 0016 2846     		mov	r0, r5
 6434              	.LVL949:
 6435 0018 FFF7FEFF 		bl	dir_read
 6436              	.LVL950:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6437              		.loc 1 4271 0
 6438 001c 0428     		cmp	r0, #4
 6439 001e 00D0     		beq	.L639
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6440              		.loc 1 4270 0
 6441 0020 0446     		mov	r4, r0
 6442              	.L639:
 6443              	.LVL951:
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6444              		.loc 1 4272 0
 6445 0022 44B1     		cbz	r4, .L642
 6446              	.LVL952:
 6447              	.L637:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 234


 6448              		.loc 1 4281 0
 6449 0024 2046     		mov	r0, r4
 6450 0026 02B0     		add	sp, sp, #8
 6451              	.LCFI89:
 6452              		.cfi_remember_state
 6453              		.cfi_def_cfa_offset 16
 6454              		@ sp needed
 6455 0028 70BD     		pop	{r4, r5, r6, pc}
 6456              	.LVL953:
 6457              	.L641:
 6458              	.LCFI90:
 6459              		.cfi_restore_state
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6460              		.loc 1 4267 0
 6461 002a 0021     		movs	r1, #0
 6462 002c 2846     		mov	r0, r5
 6463              	.LVL954:
 6464 002e FFF7FEFF 		bl	dir_sdi
 6465              	.LVL955:
 6466 0032 0446     		mov	r4, r0
 6467              	.LVL956:
 6468 0034 F6E7     		b	.L637
 6469              	.L642:
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6470              		.loc 1 4273 0
 6471 0036 3146     		mov	r1, r6
 6472 0038 2846     		mov	r0, r5
 6473 003a FFF7FEFF 		bl	get_fileinfo
 6474              	.LVL957:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6475              		.loc 1 4274 0
 6476 003e 0021     		movs	r1, #0
 6477 0040 2846     		mov	r0, r5
 6478 0042 FFF7FEFF 		bl	dir_next
 6479              	.LVL958:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6480              		.loc 1 4275 0
 6481 0046 0428     		cmp	r0, #4
 6482 0048 ECD0     		beq	.L637
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6483              		.loc 1 4274 0
 6484 004a 0446     		mov	r4, r0
 6485 004c EAE7     		b	.L637
 6486              		.cfi_endproc
 6487              	.LFE171:
 6489              		.section	.text.f_stat,"ax",%progbits
 6490              		.align	1
 6491              		.global	f_stat
 6492              		.syntax unified
 6493              		.thumb
 6494              		.thumb_func
 6495              		.fpu fpv4-sp-d16
 6497              	f_stat:
 6498              	.LFB172:
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6499              		.loc 1 4346 0
 6500              		.cfi_startproc
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 235


 6501              		@ args = 0, pretend = 0, frame = 56
 6502              		@ frame_needed = 0, uses_anonymous_args = 0
 6503              	.LVL959:
 6504 0000 30B5     		push	{r4, r5, lr}
 6505              	.LCFI91:
 6506              		.cfi_def_cfa_offset 12
 6507              		.cfi_offset 4, -12
 6508              		.cfi_offset 5, -8
 6509              		.cfi_offset 14, -4
 6510 0002 8FB0     		sub	sp, sp, #60
 6511              	.LCFI92:
 6512              		.cfi_def_cfa_offset 72
 6513 0004 0190     		str	r0, [sp, #4]
 6514 0006 0D46     		mov	r5, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6515              		.loc 1 4353 0
 6516 0008 0022     		movs	r2, #0
 6517 000a 02A9     		add	r1, sp, #8
 6518              	.LVL960:
 6519 000c 01A8     		add	r0, sp, #4
 6520              	.LVL961:
 6521 000e FFF7FEFF 		bl	find_volume
 6522              	.LVL962:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6523              		.loc 1 4354 0
 6524 0012 0446     		mov	r4, r0
 6525 0014 10B1     		cbz	r0, .L647
 6526              	.LVL963:
 6527              	.L644:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6528              		.loc 1 4368 0
 6529 0016 2046     		mov	r0, r4
 6530 0018 0FB0     		add	sp, sp, #60
 6531              	.LCFI93:
 6532              		.cfi_remember_state
 6533              		.cfi_def_cfa_offset 12
 6534              		@ sp needed
 6535 001a 30BD     		pop	{r4, r5, pc}
 6536              	.LVL964:
 6537              	.L647:
 6538              	.LCFI94:
 6539              		.cfi_restore_state
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6540              		.loc 1 4356 0
 6541 001c 0199     		ldr	r1, [sp, #4]
 6542 001e 02A8     		add	r0, sp, #8
 6543              	.LVL965:
 6544 0020 FFF7FEFF 		bl	follow_path
 6545              	.LVL966:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6546              		.loc 1 4357 0
 6547 0024 0446     		mov	r4, r0
 6548 0026 0028     		cmp	r0, #0
 6549 0028 F5D1     		bne	.L644
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6550              		.loc 1 4358 0
 6551 002a 9DF93730 		ldrsb	r3, [sp, #55]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 236


 6552 002e 002B     		cmp	r3, #0
 6553 0030 06DB     		blt	.L645
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6554              		.loc 1 4361 0
 6555 0032 002D     		cmp	r5, #0
 6556 0034 EFD0     		beq	.L644
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6557              		.loc 1 4361 0 is_stmt 0 discriminator 1
 6558 0036 2946     		mov	r1, r5
 6559 0038 02A8     		add	r0, sp, #8
 6560              	.LVL967:
 6561 003a FFF7FEFF 		bl	get_fileinfo
 6562              	.LVL968:
 6563 003e EAE7     		b	.L644
 6564              	.LVL969:
 6565              	.L645:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6566              		.loc 1 4359 0 is_stmt 1
 6567 0040 0624     		movs	r4, #6
 6568 0042 E8E7     		b	.L644
 6569              		.cfi_endproc
 6570              	.LFE172:
 6572              		.section	.text.f_getfree,"ax",%progbits
 6573              		.align	1
 6574              		.global	f_getfree
 6575              		.syntax unified
 6576              		.thumb
 6577              		.thumb_func
 6578              		.fpu fpv4-sp-d16
 6580              	f_getfree:
 6581              	.LFB173:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6582              		.loc 1 4382 0
 6583              		.cfi_startproc
 6584              		@ args = 0, pretend = 0, frame = 32
 6585              		@ frame_needed = 0, uses_anonymous_args = 0
 6586              	.LVL970:
 6587 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6588              	.LCFI95:
 6589              		.cfi_def_cfa_offset 32
 6590              		.cfi_offset 4, -32
 6591              		.cfi_offset 5, -28
 6592              		.cfi_offset 6, -24
 6593              		.cfi_offset 7, -20
 6594              		.cfi_offset 8, -16
 6595              		.cfi_offset 9, -12
 6596              		.cfi_offset 10, -8
 6597              		.cfi_offset 14, -4
 6598 0004 88B0     		sub	sp, sp, #32
 6599              	.LCFI96:
 6600              		.cfi_def_cfa_offset 64
 6601 0006 0190     		str	r0, [sp, #4]
 6602 0008 8A46     		mov	r10, r1
 6603 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6604              		.loc 1 4392 0
 6605 000c 0022     		movs	r2, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 237


 6606              	.LVL971:
 6607 000e 07A9     		add	r1, sp, #28
 6608              	.LVL972:
 6609 0010 01A8     		add	r0, sp, #4
 6610              	.LVL973:
 6611 0012 FFF7FEFF 		bl	find_volume
 6612              	.LVL974:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6613              		.loc 1 4393 0
 6614 0016 8146     		mov	r9, r0
 6615 0018 0028     		cmp	r0, #0
 6616 001a 5AD1     		bne	.L649
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6617              		.loc 1 4394 0
 6618 001c 079B     		ldr	r3, [sp, #28]
 6619 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6620              		.loc 1 4396 0
 6621 0020 1A69     		ldr	r2, [r3, #16]
 6622 0022 5E69     		ldr	r6, [r3, #20]
 6623 0024 B11E     		subs	r1, r6, #2
 6624 0026 8A42     		cmp	r2, r1
 6625 0028 08D9     		bls	.L664
 6626              	.LVL975:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 6627              		.loc 1 4401 0
 6628 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6629 002c 012A     		cmp	r2, #1
 6630 002e 08D0     		beq	.L665
 6631              	.LVL976:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 6632              		.loc 1 4429 0
 6633 0030 D3F82080 		ldr	r8, [r3, #32]
 6634              	.LVL977:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6635              		.loc 1 4430 0
 6636 0034 0024     		movs	r4, #0
 6637              	.LVL978:
 6638 0036 2546     		mov	r5, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6639              		.loc 1 4400 0
 6640 0038 2746     		mov	r7, r4
 6641 003a 32E0     		b	.L660
 6642              	.LVL979:
 6643              	.L664:
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6644              		.loc 1 4397 0
 6645 003c CAF80020 		str	r2, [r10]
 6646 0040 47E0     		b	.L649
 6647              	.LVL980:
 6648              	.L665:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6649              		.loc 1 4402 0
 6650 0042 0293     		str	r3, [sp, #8]
 6651 0044 0224     		movs	r4, #2
 6652              	.LVL981:
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 238


 6653              		.loc 1 4400 0
 6654 0046 0027     		movs	r7, #0
 6655 0048 04E0     		b	.L654
 6656              	.LVL982:
 6657              	.L653:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6658              		.loc 1 4408 0
 6659 004a 0134     		adds	r4, r4, #1
 6660              	.LVL983:
 6661 004c 079B     		ldr	r3, [sp, #28]
 6662 004e 5B69     		ldr	r3, [r3, #20]
 6663 0050 9C42     		cmp	r4, r3
 6664 0052 36D2     		bcs	.L652
 6665              	.LVL984:
 6666              	.L654:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6667              		.loc 1 4404 0
 6668 0054 2146     		mov	r1, r4
 6669 0056 02A8     		add	r0, sp, #8
 6670 0058 FFF7FEFF 		bl	get_fat
 6671              	.LVL985:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6672              		.loc 1 4405 0
 6673 005c B0F1FF3F 		cmp	r0, #-1
 6674 0060 2DD0     		beq	.L661
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6675              		.loc 1 4406 0
 6676 0062 0128     		cmp	r0, #1
 6677 0064 39D0     		beq	.L662
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6678              		.loc 1 4407 0
 6679 0066 0028     		cmp	r0, #0
 6680 0068 EFD1     		bne	.L653
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6681              		.loc 1 4407 0 is_stmt 0 discriminator 1
 6682 006a 0137     		adds	r7, r7, #1
 6683              	.LVL986:
 6684 006c EDE7     		b	.L653
 6685              	.LVL987:
 6686              	.L666:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6687              		.loc 1 4433 0 is_stmt 1
 6688 006e 08F10105 		add	r5, r8, #1
 6689              	.LVL988:
 6690 0072 4146     		mov	r1, r8
 6691 0074 0798     		ldr	r0, [sp, #28]
 6692 0076 FFF7FEFF 		bl	move_window
 6693              	.LVL989:
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 6694              		.loc 1 4434 0
 6695 007a 8146     		mov	r9, r0
 6696 007c 08BB     		cbnz	r0, .L652
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 6697              		.loc 1 4435 0
 6698 007e 079C     		ldr	r4, [sp, #28]
 6699              	.LVL990:
 6700 0080 3034     		adds	r4, r4, #48
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 239


 6701              	.LVL991:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6702              		.loc 1 4433 0
 6703 0082 A846     		mov	r8, r5
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6704              		.loc 1 4436 0
 6705 0084 4FF40075 		mov	r5, #512
 6706              	.LVL992:
 6707 0088 0DE0     		b	.L655
 6708              	.LVL993:
 6709              	.L667:
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6710              		.loc 1 4439 0
 6711 008a 2046     		mov	r0, r4
 6712 008c FFF7FEFF 		bl	ld_word
 6713              	.LVL994:
 6714 0090 00B9     		cbnz	r0, .L657
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6715              		.loc 1 4439 0 is_stmt 0 discriminator 1
 6716 0092 0137     		adds	r7, r7, #1
 6717              	.LVL995:
 6718              	.L657:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 6719              		.loc 1 4440 0 is_stmt 1
 6720 0094 0234     		adds	r4, r4, #2
 6721              	.LVL996:
 6722 0096 023D     		subs	r5, r5, #2
 6723              	.LVL997:
 6724 0098 01E0     		b	.L658
 6725              	.L659:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6726              		.loc 1 4443 0
 6727 009a 0434     		adds	r4, r4, #4
 6728              	.LVL998:
 6729 009c 043D     		subs	r5, r5, #4
 6730              	.LVL999:
 6731              	.L658:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6732              		.loc 1 4445 0
 6733 009e 013E     		subs	r6, r6, #1
 6734              	.LVL1000:
 6735 00a0 0FD0     		beq	.L652
 6736              	.LVL1001:
 6737              	.L660:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 6738              		.loc 1 4432 0
 6739 00a2 002D     		cmp	r5, #0
 6740 00a4 E3D0     		beq	.L666
 6741              	.LVL1002:
 6742              	.L655:
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 6743              		.loc 1 4438 0
 6744 00a6 079B     		ldr	r3, [sp, #28]
 6745 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6746 00aa 022B     		cmp	r3, #2
 6747 00ac EDD0     		beq	.L667
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 240


 6748              		.loc 1 4442 0
 6749 00ae 2046     		mov	r0, r4
 6750 00b0 FFF7FEFF 		bl	ld_dword
 6751              	.LVL1003:
 6752 00b4 30F07043 		bics	r3, r0, #-268435456
 6753 00b8 EFD1     		bne	.L659
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6754              		.loc 1 4442 0 is_stmt 0 discriminator 1
 6755 00ba 0137     		adds	r7, r7, #1
 6756              	.LVL1004:
 6757 00bc EDE7     		b	.L659
 6758              	.LVL1005:
 6759              	.L661:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6760              		.loc 1 4405 0 is_stmt 1
 6761 00be 4FF00109 		mov	r9, #1
 6762              	.LVL1006:
 6763              	.L652:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 6764              		.loc 1 4448 0
 6765 00c2 CAF80070 		str	r7, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 6766              		.loc 1 4449 0
 6767 00c6 079B     		ldr	r3, [sp, #28]
 6768 00c8 1F61     		str	r7, [r3, #16]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6769              		.loc 1 4450 0
 6770 00ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 6771 00cc 42F00102 		orr	r2, r2, #1
 6772 00d0 1A71     		strb	r2, [r3, #4]
 6773              	.LVL1007:
 6774              	.L649:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6775              		.loc 1 4455 0
 6776 00d2 4846     		mov	r0, r9
 6777 00d4 08B0     		add	sp, sp, #32
 6778              	.LCFI97:
 6779              		.cfi_remember_state
 6780              		.cfi_def_cfa_offset 32
 6781              		@ sp needed
 6782 00d6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6783              	.LVL1008:
 6784              	.L662:
 6785              	.LCFI98:
 6786              		.cfi_restore_state
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6787              		.loc 1 4406 0
 6788 00da 4FF00209 		mov	r9, #2
 6789 00de F0E7     		b	.L652
 6790              		.cfi_endproc
 6791              	.LFE173:
 6793              		.section	.text.f_truncate,"ax",%progbits
 6794              		.align	1
 6795              		.global	f_truncate
 6796              		.syntax unified
 6797              		.thumb
 6798              		.thumb_func
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 241


 6799              		.fpu fpv4-sp-d16
 6801              	f_truncate:
 6802              	.LFB174:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6803              		.loc 1 4467 0
 6804              		.cfi_startproc
 6805              		@ args = 0, pretend = 0, frame = 8
 6806              		@ frame_needed = 0, uses_anonymous_args = 0
 6807              	.LVL1009:
 6808 0000 30B5     		push	{r4, r5, lr}
 6809              	.LCFI99:
 6810              		.cfi_def_cfa_offset 12
 6811              		.cfi_offset 4, -12
 6812              		.cfi_offset 5, -8
 6813              		.cfi_offset 14, -4
 6814 0002 83B0     		sub	sp, sp, #12
 6815              	.LCFI100:
 6816              		.cfi_def_cfa_offset 24
 6817 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 6818              		.loc 1 4473 0
 6819 0006 01A9     		add	r1, sp, #4
 6820 0008 FFF7FEFF 		bl	validate
 6821              	.LVL1010:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6822              		.loc 1 4474 0
 6823 000c 0446     		mov	r4, r0
 6824 000e 30B9     		cbnz	r0, .L669
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6825              		.loc 1 4474 0 is_stmt 0 discriminator 2
 6826 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 6827              	.LVL1011:
 6828 0012 24B9     		cbnz	r4, .L669
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6829              		.loc 1 4475 0 is_stmt 1
 6830 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6831 0016 13F0020F 		tst	r3, #2
 6832 001a 03D1     		bne	.L680
 6833 001c 0724     		movs	r4, #7
 6834              	.LVL1012:
 6835              	.L669:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6836              		.loc 1 4505 0
 6837 001e 2046     		mov	r0, r4
 6838 0020 03B0     		add	sp, sp, #12
 6839              	.LCFI101:
 6840              		.cfi_remember_state
 6841              		.cfi_def_cfa_offset 12
 6842              		@ sp needed
 6843 0022 30BD     		pop	{r4, r5, pc}
 6844              	.LVL1013:
 6845              	.L680:
 6846              	.LCFI102:
 6847              		.cfi_restore_state
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6848              		.loc 1 4477 0
 6849 0024 AB69     		ldr	r3, [r5, #24]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 242


 6850 0026 EA68     		ldr	r2, [r5, #12]
 6851 0028 9342     		cmp	r3, r2
 6852 002a F8D2     		bcs	.L669
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 6853              		.loc 1 4478 0
 6854 002c ABB9     		cbnz	r3, .L670
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 6855              		.loc 1 4479 0
 6856 002e 0022     		movs	r2, #0
 6857 0030 A968     		ldr	r1, [r5, #8]
 6858 0032 2846     		mov	r0, r5
 6859 0034 FFF7FEFF 		bl	remove_chain
 6860              	.LVL1014:
 6861 0038 0446     		mov	r4, r0
 6862              	.LVL1015:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 6863              		.loc 1 4480 0
 6864 003a 0023     		movs	r3, #0
 6865 003c AB60     		str	r3, [r5, #8]
 6866              	.L671:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 6867              		.loc 1 4490 0
 6868 003e AB69     		ldr	r3, [r5, #24]
 6869 0040 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6870              		.loc 1 4491 0
 6871 0042 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6872 0044 43F04003 		orr	r3, r3, #64
 6873 0048 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6874              		.loc 1 4493 0
 6875 004a 14B9     		cbnz	r4, .L674
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6876              		.loc 1 4493 0 is_stmt 0 discriminator 1
 6877 004c 13F0800F 		tst	r3, #128
 6878 0050 1DD1     		bne	.L681
 6879              	.LVL1016:
 6880              	.L674:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6881              		.loc 1 4501 0 is_stmt 1
 6882 0052 002C     		cmp	r4, #0
 6883 0054 E3D0     		beq	.L669
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6884              		.loc 1 4501 0 is_stmt 0 discriminator 1
 6885 0056 6C75     		strb	r4, [r5, #21]
 6886 0058 E1E7     		b	.L669
 6887              	.L670:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6888              		.loc 1 4482 0 is_stmt 1
 6889 005a E969     		ldr	r1, [r5, #28]
 6890 005c 2846     		mov	r0, r5
 6891 005e FFF7FEFF 		bl	get_fat
 6892              	.LVL1017:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6893              		.loc 1 4484 0
 6894 0062 B0F1FF3F 		cmp	r0, #-1
 6895 0066 0ED0     		beq	.L682
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 243


 6896              	.L672:
 6897              	.LVL1018:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6898              		.loc 1 4485 0
 6899 0068 0128     		cmp	r0, #1
 6900 006a 0ED0     		beq	.L683
 6901              	.LVL1019:
 6902              	.L673:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6903              		.loc 1 4486 0
 6904 006c 002C     		cmp	r4, #0
 6905 006e E6D1     		bne	.L671
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6906              		.loc 1 4486 0 is_stmt 0 discriminator 1
 6907 0070 019B     		ldr	r3, [sp, #4]
 6908 0072 5B69     		ldr	r3, [r3, #20]
 6909 0074 9842     		cmp	r0, r3
 6910 0076 E2D2     		bcs	.L671
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6911              		.loc 1 4487 0 is_stmt 1
 6912 0078 EA69     		ldr	r2, [r5, #28]
 6913 007a 0146     		mov	r1, r0
 6914 007c 2846     		mov	r0, r5
 6915              	.LVL1020:
 6916 007e FFF7FEFF 		bl	remove_chain
 6917              	.LVL1021:
 6918 0082 0446     		mov	r4, r0
 6919              	.LVL1022:
 6920 0084 DBE7     		b	.L671
 6921              	.LVL1023:
 6922              	.L682:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6923              		.loc 1 4484 0
 6924 0086 0124     		movs	r4, #1
 6925 0088 EEE7     		b	.L672
 6926              	.LVL1024:
 6927              	.L683:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6928              		.loc 1 4485 0
 6929 008a 0224     		movs	r4, #2
 6930              	.LVL1025:
 6931 008c EEE7     		b	.L673
 6932              	.LVL1026:
 6933              	.L681:
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 6934              		.loc 1 4494 0
 6935 008e 0123     		movs	r3, #1
 6936 0090 2A6A     		ldr	r2, [r5, #32]
 6937 0092 05F13001 		add	r1, r5, #48
 6938 0096 0198     		ldr	r0, [sp, #4]
 6939 0098 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6940 009a FFF7FEFF 		bl	disk_write
 6941              	.LVL1027:
 6942 009e 20B9     		cbnz	r0, .L678
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6943              		.loc 1 4497 0
 6944 00a0 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 244


 6945 00a2 03F07F03 		and	r3, r3, #127
 6946 00a6 2B75     		strb	r3, [r5, #20]
 6947 00a8 D3E7     		b	.L674
 6948              	.L678:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6949              		.loc 1 4495 0
 6950 00aa 0124     		movs	r4, #1
 6951              	.LVL1028:
 6952 00ac D1E7     		b	.L674
 6953              		.cfi_endproc
 6954              	.LFE174:
 6956              		.section	.text.f_unlink,"ax",%progbits
 6957              		.align	1
 6958              		.global	f_unlink
 6959              		.syntax unified
 6960              		.thumb
 6961              		.thumb_func
 6962              		.fpu fpv4-sp-d16
 6964              	f_unlink:
 6965              	.LFB175:
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6966              		.loc 1 4517 0
 6967              		.cfi_startproc
 6968              		@ args = 0, pretend = 0, frame = 112
 6969              		@ frame_needed = 0, uses_anonymous_args = 0
 6970              	.LVL1029:
 6971 0000 70B5     		push	{r4, r5, r6, lr}
 6972              	.LCFI103:
 6973              		.cfi_def_cfa_offset 16
 6974              		.cfi_offset 4, -16
 6975              		.cfi_offset 5, -12
 6976              		.cfi_offset 6, -8
 6977              		.cfi_offset 14, -4
 6978 0002 9CB0     		sub	sp, sp, #112
 6979              	.LCFI104:
 6980              		.cfi_def_cfa_offset 128
 6981 0004 0190     		str	r0, [sp, #4]
 6982              	.LVL1030:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 6983              		.loc 1 4529 0
 6984 0006 0222     		movs	r2, #2
 6985 0008 03A9     		add	r1, sp, #12
 6986 000a 01A8     		add	r0, sp, #4
 6987              	.LVL1031:
 6988 000c FFF7FEFF 		bl	find_volume
 6989              	.LVL1032:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6990              		.loc 1 4530 0
 6991 0010 039B     		ldr	r3, [sp, #12]
 6992 0012 1093     		str	r3, [sp, #64]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6993              		.loc 1 4531 0
 6994 0014 0446     		mov	r4, r0
 6995 0016 10B1     		cbz	r0, .L696
 6996              	.LVL1033:
 6997              	.L685:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 245


 6998              		.loc 1 4600 0
 6999 0018 2046     		mov	r0, r4
 7000 001a 1CB0     		add	sp, sp, #112
 7001              	.LCFI105:
 7002              		.cfi_remember_state
 7003              		.cfi_def_cfa_offset 16
 7004              		@ sp needed
 7005 001c 70BD     		pop	{r4, r5, r6, pc}
 7006              	.LVL1034:
 7007              	.L696:
 7008              	.LCFI106:
 7009              		.cfi_restore_state
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7010              		.loc 1 4533 0
 7011 001e 0199     		ldr	r1, [sp, #4]
 7012 0020 10A8     		add	r0, sp, #64
 7013              	.LVL1035:
 7014 0022 FFF7FEFF 		bl	follow_path
 7015              	.LVL1036:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7016              		.loc 1 4538 0
 7017 0026 0446     		mov	r4, r0
 7018 0028 20B9     		cbnz	r0, .L686
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7019              		.loc 1 4538 0 is_stmt 0 discriminator 1
 7020 002a 0221     		movs	r1, #2
 7021 002c 10A8     		add	r0, sp, #64
 7022              	.LVL1037:
 7023 002e FFF7FEFF 		bl	chk_lock
 7024              	.LVL1038:
 7025 0032 0446     		mov	r4, r0
 7026              	.LVL1039:
 7027              	.L686:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7028              		.loc 1 4540 0 is_stmt 1
 7029 0034 002C     		cmp	r4, #0
 7030 0036 EFD1     		bne	.L685
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 7031              		.loc 1 4541 0
 7032 0038 9DF96F30 		ldrsb	r3, [sp, #111]
 7033 003c 002B     		cmp	r3, #0
 7034 003e 23DB     		blt	.L691
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7035              		.loc 1 4544 0
 7036 0040 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 7037 0044 13F0010F 		tst	r3, #1
 7038 0048 20D1     		bne	.L692
 7039              	.LVL1040:
 7040              	.L687:
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7041              		.loc 1 4548 0
 7042 004a 0CBB     		cbnz	r4, .L693
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7043              		.loc 1 4558 0
 7044 004c 039E     		ldr	r6, [sp, #12]
 7045 004e 1899     		ldr	r1, [sp, #96]
 7046 0050 3046     		mov	r0, r6
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 246


 7047 0052 FFF7FEFF 		bl	ld_clust
 7048              	.LVL1041:
 7049 0056 0546     		mov	r5, r0
 7050              	.LVL1042:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7051              		.loc 1 4560 0
 7052 0058 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 7053 005c 13F0100F 		tst	r3, #16
 7054 0060 17D0     		beq	.L688
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7055              		.loc 1 4567 0
 7056 0062 0496     		str	r6, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7057              		.loc 1 4568 0
 7058 0064 0690     		str	r0, [sp, #24]
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7059              		.loc 1 4575 0
 7060 0066 0021     		movs	r1, #0
 7061 0068 04A8     		add	r0, sp, #16
 7062              	.LVL1043:
 7063 006a FFF7FEFF 		bl	dir_sdi
 7064              	.LVL1044:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7065              		.loc 1 4576 0
 7066 006e 0446     		mov	r4, r0
 7067 0070 78B9     		cbnz	r0, .L688
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7068              		.loc 1 4577 0
 7069 0072 0021     		movs	r1, #0
 7070 0074 04A8     		add	r0, sp, #16
 7071              	.LVL1045:
 7072 0076 FFF7FEFF 		bl	dir_read
 7073              	.LVL1046:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7074              		.loc 1 4578 0
 7075 007a 0346     		mov	r3, r0
 7076 007c 00B9     		cbnz	r0, .L689
 7077 007e 0723     		movs	r3, #7
 7078              	.L689:
 7079              	.LVL1047:
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7080              		.loc 1 4579 0
 7081 0080 042B     		cmp	r3, #4
 7082 0082 06D0     		beq	.L688
 7083 0084 1C46     		mov	r4, r3
 7084 0086 04E0     		b	.L688
 7085              	.LVL1048:
 7086              	.L691:
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7087              		.loc 1 4542 0
 7088 0088 0624     		movs	r4, #6
 7089              	.LVL1049:
 7090 008a DEE7     		b	.L687
 7091              	.LVL1050:
 7092              	.L692:
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7093              		.loc 1 4545 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 247


 7094 008c 0724     		movs	r4, #7
 7095              	.LVL1051:
 7096 008e DCE7     		b	.L687
 7097              	.LVL1052:
 7098              	.L693:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7099              		.loc 1 4520 0
 7100 0090 0025     		movs	r5, #0
 7101              	.LVL1053:
 7102              	.L688:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7103              		.loc 1 4584 0
 7104 0092 002C     		cmp	r4, #0
 7105 0094 C0D1     		bne	.L685
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7106              		.loc 1 4585 0
 7107 0096 10A8     		add	r0, sp, #64
 7108 0098 FFF7FEFF 		bl	dir_remove
 7109              	.LVL1054:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7110              		.loc 1 4586 0
 7111 009c 0446     		mov	r4, r0
 7112 009e 00B9     		cbnz	r0, .L690
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7113              		.loc 1 4586 0 is_stmt 0 discriminator 1
 7114 00a0 35B9     		cbnz	r5, .L697
 7115              	.LVL1055:
 7116              	.L690:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7117              		.loc 1 4593 0 is_stmt 1
 7118 00a2 002C     		cmp	r4, #0
 7119 00a4 B8D1     		bne	.L685
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7120              		.loc 1 4593 0 is_stmt 0 discriminator 1
 7121 00a6 0398     		ldr	r0, [sp, #12]
 7122 00a8 FFF7FEFF 		bl	sync_fs
 7123              	.LVL1056:
 7124 00ac 0446     		mov	r4, r0
 7125              	.LVL1057:
 7126 00ae B3E7     		b	.L685
 7127              	.LVL1058:
 7128              	.L697:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7129              		.loc 1 4590 0 is_stmt 1
 7130 00b0 0022     		movs	r2, #0
 7131 00b2 2946     		mov	r1, r5
 7132 00b4 10A8     		add	r0, sp, #64
 7133              	.LVL1059:
 7134 00b6 FFF7FEFF 		bl	remove_chain
 7135              	.LVL1060:
 7136 00ba 0446     		mov	r4, r0
 7137              	.LVL1061:
 7138 00bc F1E7     		b	.L690
 7139              		.cfi_endproc
 7140              	.LFE175:
 7142              		.section	.text.f_mkdir,"ax",%progbits
 7143              		.align	1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 248


 7144              		.global	f_mkdir
 7145              		.syntax unified
 7146              		.thumb
 7147              		.thumb_func
 7148              		.fpu fpv4-sp-d16
 7150              	f_mkdir:
 7151              	.LFB176:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7152              		.loc 1 4612 0
 7153              		.cfi_startproc
 7154              		@ args = 0, pretend = 0, frame = 64
 7155              		@ frame_needed = 0, uses_anonymous_args = 0
 7156              	.LVL1062:
 7157 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7158              	.LCFI107:
 7159              		.cfi_def_cfa_offset 36
 7160              		.cfi_offset 4, -36
 7161              		.cfi_offset 5, -32
 7162              		.cfi_offset 6, -28
 7163              		.cfi_offset 7, -24
 7164              		.cfi_offset 8, -20
 7165              		.cfi_offset 9, -16
 7166              		.cfi_offset 10, -12
 7167              		.cfi_offset 11, -8
 7168              		.cfi_offset 14, -4
 7169 0004 91B0     		sub	sp, sp, #68
 7170              	.LCFI108:
 7171              		.cfi_def_cfa_offset 104
 7172 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7173              		.loc 1 4623 0
 7174 0008 0222     		movs	r2, #2
 7175 000a 03A9     		add	r1, sp, #12
 7176 000c 01A8     		add	r0, sp, #4
 7177              	.LVL1063:
 7178 000e FFF7FEFF 		bl	find_volume
 7179              	.LVL1064:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7180              		.loc 1 4624 0
 7181 0012 039B     		ldr	r3, [sp, #12]
 7182 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7183              		.loc 1 4625 0
 7184 0016 0446     		mov	r4, r0
 7185 0018 18B1     		cbz	r0, .L718
 7186              	.LVL1065:
 7187              	.L699:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7188              		.loc 1 4697 0
 7189 001a 2046     		mov	r0, r4
 7190 001c 11B0     		add	sp, sp, #68
 7191              	.LCFI109:
 7192              		.cfi_remember_state
 7193              		.cfi_def_cfa_offset 36
 7194              		@ sp needed
 7195 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7196              	.LVL1066:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 249


 7197              	.L718:
 7198              	.LCFI110:
 7199              		.cfi_restore_state
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7200              		.loc 1 4627 0
 7201 0022 0199     		ldr	r1, [sp, #4]
 7202 0024 04A8     		add	r0, sp, #16
 7203              	.LVL1067:
 7204 0026 FFF7FEFF 		bl	follow_path
 7205              	.LVL1068:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7206              		.loc 1 4628 0
 7207 002a 0346     		mov	r3, r0
 7208 002c 00B9     		cbnz	r0, .L700
 7209 002e 0823     		movs	r3, #8
 7210              	.L700:
 7211              	.LVL1069:
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7212              		.loc 1 4632 0
 7213 0030 042B     		cmp	r3, #4
 7214 0032 01D0     		beq	.L719
 7215 0034 1C46     		mov	r4, r3
 7216 0036 F0E7     		b	.L699
 7217              	.L719:
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7218              		.loc 1 4633 0
 7219 0038 0021     		movs	r1, #0
 7220 003a 04A8     		add	r0, sp, #16
 7221 003c FFF7FEFF 		bl	create_chain
 7222              	.LVL1070:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7223              		.loc 1 4634 0
 7224 0040 039A     		ldr	r2, [sp, #12]
 7225 0042 5389     		ldrh	r3, [r2, #10]
 7226 0044 5B02     		lsls	r3, r3, #9
 7227 0046 0793     		str	r3, [sp, #28]
 7228              	.LVL1071:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7229              		.loc 1 4636 0
 7230 0048 8046     		mov	r8, r0
 7231 004a 00B9     		cbnz	r0, .L701
 7232 004c 0724     		movs	r4, #7
 7233              	.L701:
 7234              	.LVL1072:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7235              		.loc 1 4637 0
 7236 004e B8F1010F 		cmp	r8, #1
 7237 0052 11D0     		beq	.L720
 7238              	.LVL1073:
 7239              	.L702:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7240              		.loc 1 4638 0
 7241 0054 B8F1FF3F 		cmp	r8, #-1
 7242 0058 10D0     		beq	.L721
 7243              	.LVL1074:
 7244              	.L703:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 250


 7245              		.loc 1 4639 0
 7246 005a 8CB1     		cbz	r4, .L722
 7247              	.LVL1075:
 7248              	.L704:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7249              		.loc 1 4640 0
 7250 005c FFF7FEFF 		bl	get_fattime
 7251              	.LVL1076:
 7252 0060 8246     		mov	r10, r0
 7253              	.LVL1077:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7254              		.loc 1 4641 0
 7255 0062 94B1     		cbz	r4, .L723
 7256              	.LVL1078:
 7257              	.L705:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7258              		.loc 1 4664 0
 7259 0064 002C     		cmp	r4, #0
 7260 0066 62D0     		beq	.L724
 7261              	.L709:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7262              		.loc 1 4667 0
 7263 0068 002C     		cmp	r4, #0
 7264 006a 65D0     		beq	.L725
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7265              		.loc 1 4690 0
 7266 006c 0022     		movs	r2, #0
 7267 006e 4146     		mov	r1, r8
 7268 0070 04A8     		add	r0, sp, #16
 7269 0072 FFF7FEFF 		bl	remove_chain
 7270              	.LVL1079:
 7271 0076 D0E7     		b	.L699
 7272              	.LVL1080:
 7273              	.L720:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7274              		.loc 1 4637 0
 7275 0078 0224     		movs	r4, #2
 7276              	.LVL1081:
 7277 007a EBE7     		b	.L702
 7278              	.LVL1082:
 7279              	.L721:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7280              		.loc 1 4638 0
 7281 007c 0124     		movs	r4, #1
 7282              	.LVL1083:
 7283 007e ECE7     		b	.L703
 7284              	.LVL1084:
 7285              	.L722:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7286              		.loc 1 4639 0 discriminator 1
 7287 0080 1046     		mov	r0, r2
 7288              	.LVL1085:
 7289 0082 FFF7FEFF 		bl	sync_window
 7290              	.LVL1086:
 7291 0086 0446     		mov	r4, r0
 7292              	.LVL1087:
 7293 0088 E8E7     		b	.L704
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 251


 7294              	.LVL1088:
 7295              	.L723:
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7296              		.loc 1 4642 0
 7297 008a 039D     		ldr	r5, [sp, #12]
 7298 008c 4146     		mov	r1, r8
 7299 008e 2846     		mov	r0, r5
 7300              	.LVL1089:
 7301 0090 FFF7FEFF 		bl	clust2sect
 7302              	.LVL1090:
 7303 0094 0646     		mov	r6, r0
 7304              	.LVL1091:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7305              		.loc 1 4643 0
 7306 0096 05F13009 		add	r9, r5, #48
 7307              	.LVL1092:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7308              		.loc 1 4644 0
 7309 009a 4FF40072 		mov	r2, #512
 7310 009e 0021     		movs	r1, #0
 7311 00a0 4846     		mov	r0, r9
 7312              	.LVL1093:
 7313 00a2 FFF7FEFF 		bl	mem_set
 7314              	.LVL1094:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7315              		.loc 1 4646 0
 7316 00a6 0B22     		movs	r2, #11
 7317 00a8 2021     		movs	r1, #32
 7318 00aa 4846     		mov	r0, r9
 7319 00ac FFF7FEFF 		bl	mem_set
 7320              	.LVL1095:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7321              		.loc 1 4647 0
 7322 00b0 4FF02E0B 		mov	fp, #46
 7323 00b4 85F830B0 		strb	fp, [r5, #48]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7324              		.loc 1 4648 0
 7325 00b8 1023     		movs	r3, #16
 7326 00ba 85F83B30 		strb	r3, [r5, #59]
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7327              		.loc 1 4649 0
 7328 00be 5146     		mov	r1, r10
 7329 00c0 05F14600 		add	r0, r5, #70
 7330 00c4 FFF7FEFF 		bl	st_dword
 7331              	.LVL1096:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7332              		.loc 1 4650 0
 7333 00c8 4246     		mov	r2, r8
 7334 00ca 4946     		mov	r1, r9
 7335 00cc 0398     		ldr	r0, [sp, #12]
 7336 00ce FFF7FEFF 		bl	st_clust
 7337              	.LVL1097:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7338              		.loc 1 4651 0
 7339 00d2 05F15007 		add	r7, r5, #80
 7340 00d6 2022     		movs	r2, #32
 7341 00d8 4946     		mov	r1, r9
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 252


 7342 00da 3846     		mov	r0, r7
 7343 00dc FFF7FEFF 		bl	mem_cpy
 7344              	.LVL1098:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7345              		.loc 1 4652 0
 7346 00e0 85F851B0 		strb	fp, [r5, #81]
 7347 00e4 069A     		ldr	r2, [sp, #24]
 7348              	.LVL1099:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7349              		.loc 1 4653 0
 7350 00e6 0398     		ldr	r0, [sp, #12]
 7351 00e8 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7352 00ea 032B     		cmp	r3, #3
 7353 00ec 1AD0     		beq	.L726
 7354              	.LVL1100:
 7355              	.L706:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7356              		.loc 1 4654 0
 7357 00ee 3946     		mov	r1, r7
 7358 00f0 FFF7FEFF 		bl	st_clust
 7359              	.LVL1101:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7360              		.loc 1 4656 0
 7361 00f4 039B     		ldr	r3, [sp, #12]
 7362 00f6 5D89     		ldrh	r5, [r3, #10]
 7363              	.LVL1102:
 7364              	.L707:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7365              		.loc 1 4656 0 is_stmt 0 discriminator 1
 7366 00f8 002D     		cmp	r5, #0
 7367 00fa B3D0     		beq	.L705
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7368              		.loc 1 4657 0 is_stmt 1
 7369 00fc 039B     		ldr	r3, [sp, #12]
 7370 00fe 771C     		adds	r7, r6, #1
 7371              	.LVL1103:
 7372 0100 DE62     		str	r6, [r3, #44]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7373              		.loc 1 4658 0
 7374 0102 0122     		movs	r2, #1
 7375 0104 DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7376              		.loc 1 4659 0
 7377 0106 0398     		ldr	r0, [sp, #12]
 7378 0108 FFF7FEFF 		bl	sync_window
 7379              	.LVL1104:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7380              		.loc 1 4660 0
 7381 010c 0446     		mov	r4, r0
 7382 010e 0028     		cmp	r0, #0
 7383 0110 A8D1     		bne	.L705
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7384              		.loc 1 4661 0 discriminator 2
 7385 0112 4FF40072 		mov	r2, #512
 7386 0116 0021     		movs	r1, #0
 7387 0118 4846     		mov	r0, r9
 7388              	.LVL1105:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 253


 7389 011a FFF7FEFF 		bl	mem_set
 7390              	.LVL1106:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7391              		.loc 1 4656 0 discriminator 2
 7392 011e 013D     		subs	r5, r5, #1
 7393              	.LVL1107:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7394              		.loc 1 4657 0 discriminator 2
 7395 0120 3E46     		mov	r6, r7
 7396 0122 E9E7     		b	.L707
 7397              	.LVL1108:
 7398              	.L726:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7399              		.loc 1 4653 0 discriminator 1
 7400 0124 436A     		ldr	r3, [r0, #36]
 7401 0126 9A42     		cmp	r2, r3
 7402 0128 E1D1     		bne	.L706
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7403              		.loc 1 4653 0 is_stmt 0
 7404 012a 0022     		movs	r2, #0
 7405              	.LVL1109:
 7406 012c DFE7     		b	.L706
 7407              	.LVL1110:
 7408              	.L724:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7409              		.loc 1 4665 0 is_stmt 1
 7410 012e 04A8     		add	r0, sp, #16
 7411 0130 FFF7FEFF 		bl	dir_register
 7412              	.LVL1111:
 7413 0134 0446     		mov	r4, r0
 7414              	.LVL1112:
 7415 0136 97E7     		b	.L709
 7416              	.L725:
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7417              		.loc 1 4680 0
 7418 0138 0C9C     		ldr	r4, [sp, #48]
 7419              	.LVL1113:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7420              		.loc 1 4681 0
 7421 013a 5146     		mov	r1, r10
 7422 013c 04F11600 		add	r0, r4, #22
 7423 0140 FFF7FEFF 		bl	st_dword
 7424              	.LVL1114:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7425              		.loc 1 4682 0
 7426 0144 4246     		mov	r2, r8
 7427 0146 2146     		mov	r1, r4
 7428 0148 0398     		ldr	r0, [sp, #12]
 7429 014a FFF7FEFF 		bl	st_clust
 7430              	.LVL1115:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7431              		.loc 1 4683 0
 7432 014e 1023     		movs	r3, #16
 7433 0150 E372     		strb	r3, [r4, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7434              		.loc 1 4684 0
 7435 0152 0122     		movs	r2, #1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 254


 7436 0154 039B     		ldr	r3, [sp, #12]
 7437 0156 DA70     		strb	r2, [r3, #3]
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7438              		.loc 1 4687 0
 7439 0158 0398     		ldr	r0, [sp, #12]
 7440 015a FFF7FEFF 		bl	sync_fs
 7441              	.LVL1116:
 7442 015e 0446     		mov	r4, r0
 7443              	.LVL1117:
 7444 0160 5BE7     		b	.L699
 7445              		.cfi_endproc
 7446              	.LFE176:
 7448              		.section	.text.f_rename,"ax",%progbits
 7449              		.align	1
 7450              		.global	f_rename
 7451              		.syntax unified
 7452              		.thumb
 7453              		.thumb_func
 7454              		.fpu fpv4-sp-d16
 7456              	f_rename:
 7457              	.LFB177:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7458              		.loc 1 4710 0
 7459              		.cfi_startproc
 7460              		@ args = 0, pretend = 0, frame = 136
 7461              		@ frame_needed = 0, uses_anonymous_args = 0
 7462              	.LVL1118:
 7463 0000 30B5     		push	{r4, r5, lr}
 7464              	.LCFI111:
 7465              		.cfi_def_cfa_offset 12
 7466              		.cfi_offset 4, -12
 7467              		.cfi_offset 5, -8
 7468              		.cfi_offset 14, -4
 7469 0002 A3B0     		sub	sp, sp, #140
 7470              	.LCFI112:
 7471              		.cfi_def_cfa_offset 152
 7472 0004 0190     		str	r0, [sp, #4]
 7473 0006 22A8     		add	r0, sp, #136
 7474              	.LVL1119:
 7475 0008 40F8881D 		str	r1, [r0, #-136]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7476              		.loc 1 4719 0
 7477 000c FFF7FEFF 		bl	get_ldnumber
 7478              	.LVL1120:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7479              		.loc 1 4720 0
 7480 0010 0222     		movs	r2, #2
 7481 0012 09A9     		add	r1, sp, #36
 7482 0014 01A8     		add	r0, sp, #4
 7483 0016 FFF7FEFF 		bl	find_volume
 7484              	.LVL1121:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7485              		.loc 1 4721 0
 7486 001a 0446     		mov	r4, r0
 7487 001c 10B1     		cbz	r0, .L738
 7488              	.LVL1122:
 7489              	.L728:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 255


4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7490              		.loc 1 4800 0
 7491 001e 2046     		mov	r0, r4
 7492 0020 23B0     		add	sp, sp, #140
 7493              	.LCFI113:
 7494              		.cfi_remember_state
 7495              		.cfi_def_cfa_offset 12
 7496              		@ sp needed
 7497 0022 30BD     		pop	{r4, r5, pc}
 7498              	.LVL1123:
 7499              	.L738:
 7500              	.LCFI114:
 7501              		.cfi_restore_state
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7502              		.loc 1 4722 0
 7503 0024 099B     		ldr	r3, [sp, #36]
 7504 0026 1693     		str	r3, [sp, #88]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7505              		.loc 1 4724 0
 7506 0028 0199     		ldr	r1, [sp, #4]
 7507 002a 16A8     		add	r0, sp, #88
 7508              	.LVL1124:
 7509 002c FFF7FEFF 		bl	follow_path
 7510              	.LVL1125:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7511              		.loc 1 4725 0
 7512 0030 0446     		mov	r4, r0
 7513 0032 28B9     		cbnz	r0, .L729
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7514              		.loc 1 4725 0 is_stmt 0 discriminator 1
 7515 0034 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7516 0038 13F0A00F 		tst	r3, #160
 7517 003c 00D0     		beq	.L729
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7518              		.loc 1 4725 0
 7519 003e 0624     		movs	r4, #6
 7520              	.L729:
 7521              	.LVL1126:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7522              		.loc 1 4727 0 is_stmt 1
 7523 0040 24B9     		cbnz	r4, .L730
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7524              		.loc 1 4728 0
 7525 0042 0221     		movs	r1, #2
 7526 0044 16A8     		add	r0, sp, #88
 7527 0046 FFF7FEFF 		bl	chk_lock
 7528              	.LVL1127:
 7529 004a 0446     		mov	r4, r0
 7530              	.LVL1128:
 7531              	.L730:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7532              		.loc 1 4731 0
 7533 004c 002C     		cmp	r4, #0
 7534 004e E6D1     		bne	.L728
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7535              		.loc 1 4758 0
 7536 0050 1522     		movs	r2, #21
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 256


 7537 0052 1E99     		ldr	r1, [sp, #120]
 7538 0054 0B31     		adds	r1, r1, #11
 7539 0056 03A8     		add	r0, sp, #12
 7540 0058 FFF7FEFF 		bl	mem_cpy
 7541              	.LVL1129:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7542              		.loc 1 4759 0
 7543 005c 3022     		movs	r2, #48
 7544 005e 16A9     		add	r1, sp, #88
 7545 0060 0AA8     		add	r0, sp, #40
 7546 0062 FFF7FEFF 		bl	mem_cpy
 7547              	.LVL1130:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7548              		.loc 1 4760 0
 7549 0066 0099     		ldr	r1, [sp]
 7550 0068 0AA8     		add	r0, sp, #40
 7551 006a FFF7FEFF 		bl	follow_path
 7552              	.LVL1131:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7553              		.loc 1 4761 0
 7554 006e 0446     		mov	r4, r0
 7555 0070 20B9     		cbnz	r0, .L731
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7556              		.loc 1 4762 0
 7557 0072 189B     		ldr	r3, [sp, #96]
 7558 0074 0C9A     		ldr	r2, [sp, #48]
 7559 0076 9A42     		cmp	r2, r3
 7560 0078 0FD0     		beq	.L739
 7561 007a 0824     		movs	r4, #8
 7562              	.L731:
 7563              	.LVL1132:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7564              		.loc 1 4764 0
 7565 007c 042C     		cmp	r4, #4
 7566 007e 14D0     		beq	.L740
 7567              	.LVL1133:
 7568              	.L732:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7569              		.loc 1 4788 0
 7570 0080 002C     		cmp	r4, #0
 7571 0082 CCD1     		bne	.L728
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7572              		.loc 1 4789 0
 7573 0084 16A8     		add	r0, sp, #88
 7574 0086 FFF7FEFF 		bl	dir_remove
 7575              	.LVL1134:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7576              		.loc 1 4790 0
 7577 008a 0446     		mov	r4, r0
 7578 008c 0028     		cmp	r0, #0
 7579 008e C6D1     		bne	.L728
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7580              		.loc 1 4791 0
 7581 0090 0998     		ldr	r0, [sp, #36]
 7582              	.LVL1135:
 7583 0092 FFF7FEFF 		bl	sync_fs
 7584              	.LVL1136:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 257


 7585 0096 0446     		mov	r4, r0
 7586              	.LVL1137:
 7587 0098 C1E7     		b	.L728
 7588              	.LVL1138:
 7589              	.L739:
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7590              		.loc 1 4762 0 discriminator 1
 7591 009a 1B9B     		ldr	r3, [sp, #108]
 7592 009c 0F9A     		ldr	r2, [sp, #60]
 7593 009e 9A42     		cmp	r2, r3
 7594 00a0 01D0     		beq	.L735
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7595              		.loc 1 4762 0 is_stmt 0
 7596 00a2 0824     		movs	r4, #8
 7597 00a4 EAE7     		b	.L731
 7598              	.L735:
 7599 00a6 0424     		movs	r4, #4
 7600 00a8 E8E7     		b	.L731
 7601              	.LVL1139:
 7602              	.L740:
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7603              		.loc 1 4765 0 is_stmt 1
 7604 00aa 0AA8     		add	r0, sp, #40
 7605 00ac FFF7FEFF 		bl	dir_register
 7606              	.LVL1140:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 7607              		.loc 1 4766 0
 7608 00b0 0446     		mov	r4, r0
 7609 00b2 0028     		cmp	r0, #0
 7610 00b4 E4D1     		bne	.L732
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7611              		.loc 1 4767 0
 7612 00b6 129D     		ldr	r5, [sp, #72]
 7613              	.LVL1141:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7614              		.loc 1 4768 0
 7615 00b8 1322     		movs	r2, #19
 7616 00ba 0DF10E01 		add	r1, sp, #14
 7617 00be 05F10D00 		add	r0, r5, #13
 7618              	.LVL1142:
 7619 00c2 FFF7FEFF 		bl	mem_cpy
 7620              	.LVL1143:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 7621              		.loc 1 4769 0
 7622 00c6 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 7623 00ca 43F02003 		orr	r3, r3, #32
 7624 00ce EB72     		strb	r3, [r5, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 7625              		.loc 1 4770 0
 7626 00d0 0122     		movs	r2, #1
 7627 00d2 099B     		ldr	r3, [sp, #36]
 7628 00d4 DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7629              		.loc 1 4771 0
 7630 00d6 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7631 00d8 13F0100F 		tst	r3, #16
 7632 00dc D0D0     		beq	.L732
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 258


4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7633              		.loc 1 4771 0 is_stmt 0 discriminator 1
 7634 00de 0C9B     		ldr	r3, [sp, #48]
 7635 00e0 189A     		ldr	r2, [sp, #96]
 7636 00e2 9A42     		cmp	r2, r3
 7637 00e4 CCD0     		beq	.L732
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7638              		.loc 1 4772 0 is_stmt 1
 7639 00e6 099C     		ldr	r4, [sp, #36]
 7640 00e8 2946     		mov	r1, r5
 7641 00ea 2046     		mov	r0, r4
 7642 00ec FFF7FEFF 		bl	ld_clust
 7643              	.LVL1144:
 7644 00f0 0146     		mov	r1, r0
 7645 00f2 2046     		mov	r0, r4
 7646 00f4 FFF7FEFF 		bl	clust2sect
 7647              	.LVL1145:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7648              		.loc 1 4773 0
 7649 00f8 0146     		mov	r1, r0
 7650 00fa 08B9     		cbnz	r0, .L741
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7651              		.loc 1 4774 0
 7652 00fc 0224     		movs	r4, #2
 7653 00fe BFE7     		b	.L732
 7654              	.L741:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 7655              		.loc 1 4777 0
 7656 0100 2046     		mov	r0, r4
 7657              	.LVL1146:
 7658 0102 FFF7FEFF 		bl	move_window
 7659              	.LVL1147:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7660              		.loc 1 4778 0
 7661 0106 099B     		ldr	r3, [sp, #36]
 7662 0108 03F15001 		add	r1, r3, #80
 7663              	.LVL1148:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7664              		.loc 1 4779 0
 7665 010c 0446     		mov	r4, r0
 7666 010e 0028     		cmp	r0, #0
 7667 0110 B6D1     		bne	.L732
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7668              		.loc 1 4779 0 is_stmt 0 discriminator 1
 7669 0112 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 7670 0116 2E2A     		cmp	r2, #46
 7671 0118 B2D1     		bne	.L732
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 7672              		.loc 1 4780 0 is_stmt 1
 7673 011a 0C9A     		ldr	r2, [sp, #48]
 7674 011c 1846     		mov	r0, r3
 7675              	.LVL1149:
 7676 011e FFF7FEFF 		bl	st_clust
 7677              	.LVL1150:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7678              		.loc 1 4781 0
 7679 0122 0122     		movs	r2, #1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 259


 7680 0124 099B     		ldr	r3, [sp, #36]
 7681 0126 DA70     		strb	r2, [r3, #3]
 7682 0128 AAE7     		b	.L732
 7683              		.cfi_endproc
 7684              	.LFE177:
 7686              		.section	.text.f_getlabel,"ax",%progbits
 7687              		.align	1
 7688              		.global	f_getlabel
 7689              		.syntax unified
 7690              		.thumb
 7691              		.thumb_func
 7692              		.fpu fpv4-sp-d16
 7694              	f_getlabel:
 7695              	.LFB178:
4913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7696              		.loc 1 4913 0
 7697              		.cfi_startproc
 7698              		@ args = 0, pretend = 0, frame = 64
 7699              		@ frame_needed = 0, uses_anonymous_args = 0
 7700              	.LVL1151:
 7701 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7702              	.LCFI115:
 7703              		.cfi_def_cfa_offset 20
 7704              		.cfi_offset 4, -20
 7705              		.cfi_offset 5, -16
 7706              		.cfi_offset 6, -12
 7707              		.cfi_offset 7, -8
 7708              		.cfi_offset 14, -4
 7709 0002 91B0     		sub	sp, sp, #68
 7710              	.LCFI116:
 7711              		.cfi_def_cfa_offset 88
 7712 0004 0190     		str	r0, [sp, #4]
 7713 0006 0D46     		mov	r5, r1
 7714 0008 1646     		mov	r6, r2
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7715              		.loc 1 4923 0
 7716 000a 0022     		movs	r2, #0
 7717              	.LVL1152:
 7718 000c 03A9     		add	r1, sp, #12
 7719              	.LVL1153:
 7720 000e 01A8     		add	r0, sp, #4
 7721              	.LVL1154:
 7722 0010 FFF7FEFF 		bl	find_volume
 7723              	.LVL1155:
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
 7724              		.loc 1 4926 0
 7725 0014 0446     		mov	r4, r0
 7726 0016 60B9     		cbnz	r0, .L743
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
 7727              		.loc 1 4926 0 is_stmt 0 discriminator 1
 7728 0018 5DB1     		cbz	r5, .L743
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
 7729              		.loc 1 4927 0 is_stmt 1
 7730 001a 039B     		ldr	r3, [sp, #12]
 7731 001c 0493     		str	r3, [sp, #16]
 7732 001e 0021     		movs	r1, #0
 7733 0020 0691     		str	r1, [sp, #24]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 260


4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7734              		.loc 1 4928 0
 7735 0022 04A8     		add	r0, sp, #16
 7736              	.LVL1156:
 7737 0024 FFF7FEFF 		bl	dir_sdi
 7738              	.LVL1157:
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
 7739              		.loc 1 4929 0
 7740 0028 0746     		mov	r7, r0
 7741 002a C8B1     		cbz	r0, .L755
 7742              	.L744:
 7743              	.LVL1158:
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
 7744              		.loc 1 4968 0
 7745 002c 042F     		cmp	r7, #4
 7746 002e 2FD0     		beq	.L756
 7747 0030 3C46     		mov	r4, r7
 7748              	.LVL1159:
 7749              	.L743:
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
 7750              		.loc 1 4975 0
 7751 0032 94B9     		cbnz	r4, .L747
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
 7752              		.loc 1 4975 0 is_stmt 0 discriminator 1
 7753 0034 8EB1     		cbz	r6, .L747
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 7754              		.loc 1 4976 0 is_stmt 1
 7755 0036 0398     		ldr	r0, [sp, #12]
 7756 0038 C169     		ldr	r1, [r0, #28]
 7757 003a FFF7FEFF 		bl	move_window
 7758              	.LVL1160:
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
 7759              		.loc 1 4977 0
 7760 003e 0446     		mov	r4, r0
 7761 0040 58B9     		cbnz	r0, .L747
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
 7762              		.loc 1 4978 0
 7763 0042 039B     		ldr	r3, [sp, #12]
 7764 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7765 0046 032A     		cmp	r2, #3
 7766 0048 27D0     		beq	.L752
 7767 004a 042A     		cmp	r2, #4
 7768 004c 23D1     		bne	.L753
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7769              		.loc 1 4980 0
 7770 004e 6420     		movs	r0, #100
 7771              	.LVL1161:
 7772              	.L749:
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7773              		.loc 1 4988 0
 7774 0050 3033     		adds	r3, r3, #48
 7775 0052 1844     		add	r0, r0, r3
 7776              	.LVL1162:
 7777 0054 FFF7FEFF 		bl	ld_dword
 7778              	.LVL1163:
 7779 0058 3060     		str	r0, [r6]
 7780              	.L747:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 261


 7781              	.LVL1164:
4993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7782              		.loc 1 4993 0
 7783 005a 2046     		mov	r0, r4
 7784 005c 11B0     		add	sp, sp, #68
 7785              	.LCFI117:
 7786              		.cfi_remember_state
 7787              		.cfi_def_cfa_offset 20
 7788              		@ sp needed
 7789 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 7790              	.LVL1165:
 7791              	.L755:
 7792              	.LCFI118:
 7793              		.cfi_restore_state
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
 7794              		.loc 1 4930 0
 7795 0060 0121     		movs	r1, #1
 7796 0062 04A8     		add	r0, sp, #16
 7797              	.LVL1166:
 7798 0064 FFF7FEFF 		bl	dir_read
 7799              	.LVL1167:
4931:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7800              		.loc 1 4931 0
 7801 0068 0746     		mov	r7, r0
 7802 006a 0028     		cmp	r0, #0
 7803 006c DED1     		bne	.L744
 7804 006e 0022     		movs	r2, #0
 7805              	.L745:
 7806              	.LVL1168:
4958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7807              		.loc 1 4958 0 discriminator 1
 7808 0070 531C     		adds	r3, r2, #1
 7809              	.LVL1169:
 7810 0072 0C99     		ldr	r1, [sp, #48]
 7811              	.LVL1170:
 7812 0074 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 7813 0076 A954     		strb	r1, [r5, r2]
 7814 0078 1A46     		mov	r2, r3
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
 7815              		.loc 1 4960 0 discriminator 1
 7816 007a 0A2B     		cmp	r3, #10
 7817 007c F8D9     		bls	.L745
 7818              	.LVL1171:
 7819              	.L746:
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
 7820              		.loc 1 4962 0
 7821 007e 0022     		movs	r2, #0
 7822 0080 EA54     		strb	r2, [r5, r3]
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
 7823              		.loc 1 4963 0
 7824 0082 002B     		cmp	r3, #0
 7825 0084 D2D0     		beq	.L744
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7826              		.loc 1 4964 0
 7827 0086 013B     		subs	r3, r3, #1
 7828              	.LVL1172:
 7829 0088 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 262


 7830 008a 202A     		cmp	r2, #32
 7831 008c F7D0     		beq	.L746
 7832 008e CDE7     		b	.L744
 7833              	.LVL1173:
 7834              	.L756:
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7835              		.loc 1 4969 0
 7836 0090 0023     		movs	r3, #0
 7837 0092 2B70     		strb	r3, [r5]
 7838              	.LVL1174:
 7839 0094 CDE7     		b	.L743
 7840              	.LVL1175:
 7841              	.L753:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7842              		.loc 1 4986 0
 7843 0096 2720     		movs	r0, #39
 7844              	.LVL1176:
 7845 0098 DAE7     		b	.L749
 7846              	.LVL1177:
 7847              	.L752:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7848              		.loc 1 4983 0
 7849 009a 4320     		movs	r0, #67
 7850              	.LVL1178:
 7851 009c D8E7     		b	.L749
 7852              		.cfi_endproc
 7853              	.LFE178:
 7855              		.section	.text.f_setlabel,"ax",%progbits
 7856              		.align	1
 7857              		.global	f_setlabel
 7858              		.syntax unified
 7859              		.thumb
 7860              		.thumb_func
 7861              		.fpu fpv4-sp-d16
 7863              	f_setlabel:
 7864              	.LFB179:
5005:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7865              		.loc 1 5005 0
 7866              		.cfi_startproc
 7867              		@ args = 0, pretend = 0, frame = 88
 7868              		@ frame_needed = 0, uses_anonymous_args = 0
 7869              	.LVL1179:
 7870 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7871              	.LCFI119:
 7872              		.cfi_def_cfa_offset 24
 7873              		.cfi_offset 4, -24
 7874              		.cfi_offset 5, -20
 7875              		.cfi_offset 6, -16
 7876              		.cfi_offset 7, -12
 7877              		.cfi_offset 8, -8
 7878              		.cfi_offset 14, -4
 7879 0004 96B0     		sub	sp, sp, #88
 7880              	.LCFI120:
 7881              		.cfi_def_cfa_offset 112
 7882 0006 0190     		str	r0, [sp, #4]
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
 7883              		.loc 1 5016 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 263


 7884 0008 0222     		movs	r2, #2
 7885 000a 09A9     		add	r1, sp, #36
 7886 000c 01A8     		add	r0, sp, #4
 7887              	.LVL1180:
 7888 000e FFF7FEFF 		bl	find_volume
 7889              	.LVL1181:
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7890              		.loc 1 5017 0
 7891 0012 0446     		mov	r4, r0
 7892 0014 0028     		cmp	r0, #0
 7893 0016 59D1     		bne	.L758
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7894              		.loc 1 5018 0
 7895 0018 099B     		ldr	r3, [sp, #36]
 7896 001a 0A93     		str	r3, [sp, #40]
 7897              	.LVL1182:
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 7898              		.loc 1 5021 0
 7899 001c 0025     		movs	r5, #0
 7900 001e 00E0     		b	.L759
 7901              	.LVL1183:
 7902              	.L760:
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 7903              		.loc 1 5021 0 is_stmt 0 discriminator 3
 7904 0020 0135     		adds	r5, r5, #1
 7905              	.LVL1184:
 7906              	.L759:
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 7907              		.loc 1 5021 0 discriminator 1
 7908 0022 019F     		ldr	r7, [sp, #4]
 7909 0024 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 7910 0026 1F2B     		cmp	r3, #31
 7911 0028 FAD8     		bhi	.L760
 7912 002a 00E0     		b	.L762
 7913              	.L774:
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
 7914              		.loc 1 5045 0 is_stmt 1
 7915 002c 1D46     		mov	r5, r3
 7916              	.LVL1185:
 7917              	.L762:
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
 7918              		.loc 1 5045 0 is_stmt 0 discriminator 1
 7919 002e 1DB1     		cbz	r5, .L761
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
 7920              		.loc 1 5045 0 discriminator 2
 7921 0030 6B1E     		subs	r3, r5, #1
 7922 0032 FA5C     		ldrb	r2, [r7, r3]	@ zero_extendqisi2
 7923 0034 202A     		cmp	r2, #32
 7924 0036 F9D0     		beq	.L774
 7925              	.L761:
5046:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
 7926              		.loc 1 5046 0 is_stmt 1
 7927 0038 002D     		cmp	r5, #0
 7928 003a 40D0     		beq	.L763
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
 7929              		.loc 1 5047 0
 7930 003c 0023     		movs	r3, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 264


 7931 003e 8DF80C30 		strb	r3, [sp, #12]
 7932              	.LVL1186:
 7933 0042 1E46     		mov	r6, r3
 7934 0044 0AE0     		b	.L768
 7935              	.LVL1187:
 7936              	.L777:
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7937              		.loc 1 5067 0
 7938 0046 0B23     		movs	r3, #11
 7939 0048 22E0     		b	.L766
 7940              	.L779:
 7941 004a 3346     		mov	r3, r6
 7942              	.LVL1188:
 7943              	.L767:
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
 7944              		.loc 1 5071 0
 7945 004c 5E1C     		adds	r6, r3, #1
 7946              	.LVL1189:
 7947 004e 16AA     		add	r2, sp, #88
 7948 0050 1344     		add	r3, r3, r2
 7949 0052 03F84C4C 		strb	r4, [r3, #-76]
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
 7950              		.loc 1 5052 0
 7951 0056 4346     		mov	r3, r8
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
 7952              		.loc 1 5072 0
 7953 0058 4545     		cmp	r5, r8
 7954 005a 2AD9     		bls	.L769
 7955              	.LVL1190:
 7956              	.L768:
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
 7957              		.loc 1 5052 0
 7958 005c 03F10108 		add	r8, r3, #1
 7959              	.LVL1191:
 7960 0060 FC5C     		ldrb	r4, [r7, r3]	@ zero_extendqisi2
 7961              	.LVL1192:
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 7962              		.loc 1 5059 0
 7963 0062 A4F16103 		sub	r3, r4, #97
 7964 0066 9BB2     		uxth	r3, r3
 7965 0068 192B     		cmp	r3, #25
 7966 006a 01D8     		bhi	.L764
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 7967              		.loc 1 5059 0 is_stmt 0 discriminator 1
 7968 006c 203C     		subs	r4, r4, #32
 7969              	.LVL1193:
 7970 006e A4B2     		uxth	r4, r4
 7971              	.LVL1194:
 7972              	.L764:
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 7973              		.loc 1 5061 0 is_stmt 1
 7974 0070 7F2C     		cmp	r4, #127
 7975 0072 02D9     		bls	.L765
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 7976              		.loc 1 5061 0 is_stmt 0 discriminator 1
 7977 0074 803C     		subs	r4, r4, #128
 7978              	.LVL1195:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 265


 7979 0076 384B     		ldr	r3, .L786
 7980 0078 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 7981              	.LVL1196:
 7982              	.L765:
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7983              		.loc 1 5067 0 is_stmt 1
 7984 007a 002C     		cmp	r4, #0
 7985 007c 63D0     		beq	.L775
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7986              		.loc 1 5067 0 is_stmt 0 discriminator 1
 7987 007e 2146     		mov	r1, r4
 7988 0080 3648     		ldr	r0, .L786+4
 7989 0082 FFF7FEFF 		bl	chk_chr
 7990              	.LVL1197:
 7991 0086 0028     		cmp	r0, #0
 7992 0088 5FD1     		bne	.L776
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7993              		.loc 1 5067 0 discriminator 2
 7994 008a FF2C     		cmp	r4, #255
 7995 008c DBD9     		bls	.L777
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7996              		.loc 1 5067 0
 7997 008e 0A23     		movs	r3, #10
 7998              	.L766:
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
 7999              		.loc 1 5067 0 discriminator 6
 8000 0090 9E42     		cmp	r6, r3
 8001 0092 5CD2     		bcs	.L778
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
 8002              		.loc 1 5070 0 is_stmt 1
 8003 0094 FF2C     		cmp	r4, #255
 8004 0096 D8D9     		bls	.L779
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
 8005              		.loc 1 5070 0 is_stmt 0 discriminator 1
 8006 0098 731C     		adds	r3, r6, #1
 8007              	.LVL1198:
 8008 009a 220A     		lsrs	r2, r4, #8
 8009 009c 16A9     		add	r1, sp, #88
 8010 009e 0E44     		add	r6, r6, r1
 8011 00a0 06F84C2C 		strb	r2, [r6, #-76]
 8012 00a4 D2E7     		b	.L767
 8013              	.LVL1199:
 8014              	.L770:
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
 8015              		.loc 1 5073 0 is_stmt 1 discriminator 2
 8016 00a6 16AB     		add	r3, sp, #88
 8017 00a8 3344     		add	r3, r3, r6
 8018 00aa 2022     		movs	r2, #32
 8019 00ac 03F84C2C 		strb	r2, [r3, #-76]
 8020 00b0 0136     		adds	r6, r6, #1
 8021              	.LVL1200:
 8022              	.L769:
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
 8023              		.loc 1 5073 0 is_stmt 0 discriminator 1
 8024 00b2 0A2E     		cmp	r6, #10
 8025 00b4 F7D9     		bls	.L770
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 266


 8026              		.loc 1 5074 0 is_stmt 1
 8027 00b6 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 8028 00ba E52B     		cmp	r3, #229
 8029 00bc 49D0     		beq	.L780
 8030              	.LVL1201:
 8031              	.L763:
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
 8032              		.loc 1 5079 0
 8033 00be 0021     		movs	r1, #0
 8034 00c0 0C91     		str	r1, [sp, #48]
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 8035              		.loc 1 5080 0
 8036 00c2 0AA8     		add	r0, sp, #40
 8037 00c4 FFF7FEFF 		bl	dir_sdi
 8038              	.LVL1202:
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
 8039              		.loc 1 5081 0
 8040 00c8 0446     		mov	r4, r0
 8041 00ca 18B1     		cbz	r0, .L783
 8042              	.LVL1203:
 8043              	.L758:
5120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8044              		.loc 1 5120 0
 8045 00cc 2046     		mov	r0, r4
 8046 00ce 16B0     		add	sp, sp, #88
 8047              	.LCFI121:
 8048              		.cfi_remember_state
 8049              		.cfi_def_cfa_offset 24
 8050              		@ sp needed
 8051 00d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8052              	.LVL1204:
 8053              	.L783:
 8054              	.LCFI122:
 8055              		.cfi_restore_state
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 8056              		.loc 1 5082 0
 8057 00d4 0121     		movs	r1, #1
 8058 00d6 0AA8     		add	r0, sp, #40
 8059              	.LVL1205:
 8060 00d8 FFF7FEFF 		bl	dir_read
 8061              	.LVL1206:
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
 8062              		.loc 1 5083 0
 8063 00dc 88B9     		cbnz	r0, .L771
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
 8064              		.loc 1 5088 0
 8065 00de 55B9     		cbnz	r5, .L784
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8066              		.loc 1 5091 0
 8067 00e0 E522     		movs	r2, #229
 8068 00e2 129B     		ldr	r3, [sp, #72]
 8069 00e4 1A70     		strb	r2, [r3]
 8070              	.LVL1207:
 8071              	.L773:
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
 8072              		.loc 1 5094 0
 8073 00e6 0122     		movs	r2, #1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 267


 8074 00e8 099B     		ldr	r3, [sp, #36]
 8075 00ea DA70     		strb	r2, [r3, #3]
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
 8076              		.loc 1 5095 0
 8077 00ec 0998     		ldr	r0, [sp, #36]
 8078 00ee FFF7FEFF 		bl	sync_fs
 8079              	.LVL1208:
 8080 00f2 0446     		mov	r4, r0
 8081              	.LVL1209:
 8082 00f4 EAE7     		b	.L758
 8083              	.LVL1210:
 8084              	.L784:
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 8085              		.loc 1 5089 0
 8086 00f6 0B22     		movs	r2, #11
 8087 00f8 03A9     		add	r1, sp, #12
 8088 00fa 1298     		ldr	r0, [sp, #72]
 8089              	.LVL1211:
 8090 00fc FFF7FEFF 		bl	mem_cpy
 8091              	.LVL1212:
 8092 0100 F1E7     		b	.L773
 8093              	.LVL1213:
 8094              	.L771:
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 8095              		.loc 1 5097 0
 8096 0102 0428     		cmp	r0, #4
 8097 0104 01D0     		beq	.L785
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 8098              		.loc 1 5082 0
 8099 0106 0446     		mov	r4, r0
 8100 0108 E0E7     		b	.L758
 8101              	.L785:
 8102              	.LVL1214:
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
 8103              		.loc 1 5099 0
 8104 010a 002D     		cmp	r5, #0
 8105 010c DED0     		beq	.L758
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 8106              		.loc 1 5100 0
 8107 010e 0121     		movs	r1, #1
 8108 0110 0AA8     		add	r0, sp, #40
 8109 0112 FFF7FEFF 		bl	dir_alloc
 8110              	.LVL1215:
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
 8111              		.loc 1 5101 0
 8112 0116 0446     		mov	r4, r0
 8113 0118 0028     		cmp	r0, #0
 8114 011a D7D1     		bne	.L758
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
 8115              		.loc 1 5102 0
 8116 011c 2022     		movs	r2, #32
 8117 011e 0021     		movs	r1, #0
 8118 0120 1298     		ldr	r0, [sp, #72]
 8119              	.LVL1216:
 8120 0122 FFF7FEFF 		bl	mem_set
 8121              	.LVL1217:
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 268


 8122              		.loc 1 5108 0
 8123 0126 0822     		movs	r2, #8
 8124 0128 129B     		ldr	r3, [sp, #72]
 8125 012a DA72     		strb	r2, [r3, #11]
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 8126              		.loc 1 5109 0
 8127 012c 0B22     		movs	r2, #11
 8128 012e 03A9     		add	r1, sp, #12
 8129 0130 1298     		ldr	r0, [sp, #72]
 8130 0132 FFF7FEFF 		bl	mem_cpy
 8131              	.LVL1218:
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
 8132              		.loc 1 5111 0
 8133 0136 0122     		movs	r2, #1
 8134 0138 099B     		ldr	r3, [sp, #36]
 8135 013a DA70     		strb	r2, [r3, #3]
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8136              		.loc 1 5112 0
 8137 013c 0998     		ldr	r0, [sp, #36]
 8138 013e FFF7FEFF 		bl	sync_fs
 8139              	.LVL1219:
 8140 0142 0446     		mov	r4, r0
 8141              	.LVL1220:
 8142 0144 C2E7     		b	.L758
 8143              	.LVL1221:
 8144              	.L775:
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8145              		.loc 1 5068 0
 8146 0146 0624     		movs	r4, #6
 8147              	.LVL1222:
 8148 0148 C0E7     		b	.L758
 8149              	.LVL1223:
 8150              	.L776:
 8151 014a 0624     		movs	r4, #6
 8152              	.LVL1224:
 8153 014c BEE7     		b	.L758
 8154              	.LVL1225:
 8155              	.L778:
 8156 014e 0624     		movs	r4, #6
 8157              	.LVL1226:
 8158 0150 BCE7     		b	.L758
 8159              	.LVL1227:
 8160              	.L780:
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8161              		.loc 1 5074 0
 8162 0152 0624     		movs	r4, #6
 8163              	.LVL1228:
 8164 0154 BAE7     		b	.L758
 8165              	.L787:
 8166 0156 00BF     		.align	2
 8167              	.L786:
 8168 0158 00000000 		.word	.LANCHOR1
 8169 015c 00000000 		.word	.LANCHOR4
 8170              		.cfi_endproc
 8171              	.LFE179:
 8173              		.section	.text.f_mkfs,"ax",%progbits
 8174              		.align	1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 269


 8175              		.global	f_mkfs
 8176              		.syntax unified
 8177              		.thumb
 8178              		.thumb_func
 8179              		.fpu fpv4-sp-d16
 8181              	f_mkfs:
 8182              	.LFB180:
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 8183              		.loc 1 5300 0
 8184              		.cfi_startproc
 8185              		@ args = 4, pretend = 0, frame = 40
 8186              		@ frame_needed = 0, uses_anonymous_args = 0
 8187              	.LVL1229:
 8188 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8189              	.LCFI123:
 8190              		.cfi_def_cfa_offset 36
 8191              		.cfi_offset 4, -36
 8192              		.cfi_offset 5, -32
 8193              		.cfi_offset 6, -28
 8194              		.cfi_offset 7, -24
 8195              		.cfi_offset 8, -20
 8196              		.cfi_offset 9, -16
 8197              		.cfi_offset 10, -12
 8198              		.cfi_offset 11, -8
 8199              		.cfi_offset 14, -4
 8200 0004 8BB0     		sub	sp, sp, #44
 8201              	.LCFI124:
 8202              		.cfi_def_cfa_offset 80
 8203 0006 0AAC     		add	r4, sp, #40
 8204 0008 44F80C0D 		str	r0, [r4, #-12]!
 8205 000c 0E46     		mov	r6, r1
 8206 000e 1746     		mov	r7, r2
 8207 0010 1D46     		mov	r5, r3
 8208              	.LVL1230:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 8209              		.loc 1 5319 0
 8210 0012 2046     		mov	r0, r4
 8211              	.LVL1231:
 8212 0014 FFF7FEFF 		bl	get_ldnumber
 8213              	.LVL1232:
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8214              		.loc 1 5320 0
 8215 0018 0028     		cmp	r0, #0
 8216 001a C0F2DA82 		blt	.L832
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8217              		.loc 1 5321 0
 8218 001e 9E4B     		ldr	r3, .L876
 8219 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 8220 0024 0BB1     		cbz	r3, .L790
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8221              		.loc 1 5321 0 is_stmt 0 discriminator 1
 8222 0026 0022     		movs	r2, #0
 8223 0028 1A70     		strb	r2, [r3]
 8224              	.L790:
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 8225              		.loc 1 5322 0 is_stmt 1
 8226 002a C4B2     		uxtb	r4, r0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 270


 8227              	.LVL1233:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 8228              		.loc 1 5326 0
 8229 002c 2046     		mov	r0, r4
 8230              	.LVL1234:
 8231 002e FFF7FEFF 		bl	disk_initialize
 8232              	.LVL1235:
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8233              		.loc 1 5327 0
 8234 0032 10F0010F 		tst	r0, #1
 8235 0036 01D0     		beq	.L870
 8236 0038 0320     		movs	r0, #3
 8237              	.LVL1236:
 8238 003a CBE2     		b	.L789
 8239              	.LVL1237:
 8240              	.L870:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8241              		.loc 1 5328 0
 8242 003c 10F0040F 		tst	r0, #4
 8243 0040 01D0     		beq	.L871
 8244 0042 0A20     		movs	r0, #10
 8245              	.LVL1238:
 8246 0044 C6E2     		b	.L789
 8247              	.LVL1239:
 8248              	.L871:
5329:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8249              		.loc 1 5329 0
 8250 0046 09AA     		add	r2, sp, #36
 8251 0048 0321     		movs	r1, #3
 8252 004a 2046     		mov	r0, r4
 8253              	.LVL1240:
 8254 004c FFF7FEFF 		bl	disk_ioctl
 8255              	.LVL1241:
 8256 0050 38B9     		cbnz	r0, .L791
5329:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8257              		.loc 1 5329 0 is_stmt 0 discriminator 2
 8258 0052 099B     		ldr	r3, [sp, #36]
 8259 0054 2BB1     		cbz	r3, .L791
5329:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8260              		.loc 1 5329 0 discriminator 4
 8261 0056 B3F5004F 		cmp	r3, #32768
 8262 005a 02D8     		bhi	.L791
5329:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8263              		.loc 1 5329 0 discriminator 6
 8264 005c 5A1E     		subs	r2, r3, #1
 8265 005e 1342     		tst	r3, r2
 8266 0060 01D0     		beq	.L792
 8267              	.L791:
5329:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8268              		.loc 1 5329 0 discriminator 7
 8269 0062 0123     		movs	r3, #1
 8270 0064 0993     		str	r3, [sp, #36]
 8271              	.L792:
 8272              	.LVL1242:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8273              		.loc 1 5336 0 is_stmt 1
 8274 0066 27B1     		cbz	r7, .L793
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 271


5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8275              		.loc 1 5336 0 is_stmt 0 discriminator 1
 8276 0068 B7F5007F 		cmp	r7, #512
 8277 006c 01D2     		bcs	.L793
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8278              		.loc 1 5336 0
 8279 006e 1320     		movs	r0, #19
 8280 0070 B0E2     		b	.L789
 8281              	.L793:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8282              		.loc 1 5336 0 discriminator 4
 8283 0072 B7F1807F 		cmp	r7, #16777216
 8284 0076 01D9     		bls	.L872
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8285              		.loc 1 5336 0
 8286 0078 1320     		movs	r0, #19
 8287 007a ABE2     		b	.L789
 8288              	.L872:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8289              		.loc 1 5336 0 discriminator 6
 8290 007c 7B1E     		subs	r3, r7, #1
 8291 007e 1F42     		tst	r7, r3
 8292 0080 01D0     		beq	.L873
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8293              		.loc 1 5336 0
 8294 0082 1320     		movs	r0, #19
 8295 0084 A6E2     		b	.L789
 8296              	.L873:
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8297              		.loc 1 5337 0 is_stmt 1
 8298 0086 4FEA5729 		lsr	r9, r7, #9
 8299              	.LVL1243:
5341:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 8300              		.loc 1 5341 0
 8301 008a 149B     		ldr	r3, [sp, #80]
 8302 008c 5B0A     		lsrs	r3, r3, #9
 8303 008e 0593     		str	r3, [sp, #20]
 8304              	.LVL1244:
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 8305              		.loc 1 5342 0
 8306 0090 149B     		ldr	r3, [sp, #80]
 8307              	.LVL1245:
 8308 0092 23F4FF7A 		bic	r10, r3, #510
 8309 0096 2AF0010A 		bic	r10, r10, #1
 8310              	.LVL1246:
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8311              		.loc 1 5343 0
 8312 009a BAF1000F 		cmp	r10, #0
 8313 009e 01D1     		bne	.L874
 8314 00a0 0E20     		movs	r0, #14
 8315 00a2 97E2     		b	.L789
 8316              	.L874:
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8317              		.loc 1 5356 0
 8318 00a4 08AA     		add	r2, sp, #32
 8319 00a6 0121     		movs	r1, #1
 8320 00a8 2046     		mov	r0, r4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 272


 8321 00aa FFF7FEFF 		bl	disk_ioctl
 8322              	.LVL1247:
 8323 00ae 0028     		cmp	r0, #0
 8324 00b0 40F09382 		bne	.L839
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8325              		.loc 1 5357 0
 8326 00b4 16F00803 		ands	r3, r6, #8
 8327 00b8 0693     		str	r3, [sp, #24]
 8328 00ba 0CD0     		beq	.L840
 8329 00bc 4FF00008 		mov	r8, #0
 8330              	.L794:
 8331              	.LVL1248:
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8332              		.loc 1 5358 0 discriminator 4
 8333 00c0 089A     		ldr	r2, [sp, #32]
 8334 00c2 9045     		cmp	r8, r2
 8335 00c4 00F28B82 		bhi	.L841
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8336              		.loc 1 5359 0
 8337 00c8 A2EB0802 		sub	r2, r2, r8
 8338 00cc 0892     		str	r2, [sp, #32]
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8339              		.loc 1 5361 0
 8340 00ce 7F2A     		cmp	r2, #127
 8341 00d0 04D8     		bhi	.L875
 8342 00d2 0E20     		movs	r0, #14
 8343 00d4 7EE2     		b	.L789
 8344              	.LVL1249:
 8345              	.L840:
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8346              		.loc 1 5357 0
 8347 00d6 4FF03F08 		mov	r8, #63
 8348 00da F1E7     		b	.L794
 8349              	.LVL1250:
 8350              	.L875:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8351              		.loc 1 5370 0
 8352 00dc B9F1800F 		cmp	r9, #128
 8353 00e0 00F27F82 		bhi	.L843
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 8354              		.loc 1 5371 0
 8355 00e4 16F00201 		ands	r1, r6, #2
 8356 00e8 06D0     		beq	.L795
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8357              		.loc 1 5372 0
 8358 00ea 06F00703 		and	r3, r6, #7
 8359 00ee 022B     		cmp	r3, #2
 8360 00f0 6AD0     		beq	.L844
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8361              		.loc 1 5372 0 is_stmt 0 discriminator 1
 8362 00f2 16F0010F 		tst	r6, #1
 8363 00f6 6BD0     		beq	.L845
 8364              	.L795:
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8365              		.loc 1 5376 0 is_stmt 1
 8366 00f8 16F0010F 		tst	r6, #1
 8367 00fc 00F07382 		beq	.L846
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 273


5377:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 8368              		.loc 1 5377 0
 8369 0100 0227     		movs	r7, #2
 8370 0102 4846     		mov	r0, r9
 8371 0104 0191     		str	r1, [sp, #4]
 8372              	.LVL1251:
 8373              	.L797:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 8374              		.loc 1 5547 0
 8375 0106 032F     		cmp	r7, #3
 8376 0108 71D1     		bne	.L798
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8377              		.loc 1 5548 0
 8378 010a 0028     		cmp	r0, #0
 8379 010c 6BD1     		bne	.L847
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8380              		.loc 1 5549 0
 8381 010e 4FEA524C 		lsr	ip, r2, #17
 8382              	.LVL1252:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8383              		.loc 1 5550 0
 8384 0112 0023     		movs	r3, #0
 8385 0114 0126     		movs	r6, #1
 8386 0116 0199     		ldr	r1, [sp, #4]
 8387              	.LVL1253:
 8388              	.L800:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8389              		.loc 1 5550 0 is_stmt 0 discriminator 1
 8390 0118 DFF880E1 		ldr	lr, .L876+4
 8391 011c 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 8392 0120 BEF1000F 		cmp	lr, #0
 8393 0124 61D0     		beq	.L866
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8394              		.loc 1 5550 0 discriminator 3
 8395 0126 F445     		cmp	ip, lr
 8396 0128 5AD2     		bcs	.L801
 8397 012a 0191     		str	r1, [sp, #4]
 8398              	.LVL1254:
 8399              	.L799:
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8400              		.loc 1 5552 0 is_stmt 1
 8401 012c B2FBF6FE 		udiv	lr, r2, r6
 8402              	.LVL1255:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8403              		.loc 1 5553 0
 8404 0130 0EF10203 		add	r3, lr, #2
 8405 0134 9B00     		lsls	r3, r3, #2
 8406 0136 03F2FF13 		addw	r3, r3, #511
 8407 013a 5B0A     		lsrs	r3, r3, #9
 8408 013c 0293     		str	r3, [sp, #8]
 8409              	.LVL1256:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8410              		.loc 1 5556 0
 8411 013e AEF57F4E 		sub	lr, lr, #65280
 8412              	.LVL1257:
 8413 0142 AEF1F60E 		sub	lr, lr, #246
 8414              	.LVL1258:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 274


 8415 0146 DFF858C1 		ldr	ip, .L876+8
 8416 014a E645     		cmp	lr, ip
 8417 014c 00F24D82 		bhi	.L848
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8418              		.loc 1 5555 0
 8419 0150 0023     		movs	r3, #0
 8420              	.LVL1259:
 8421 0152 0493     		str	r3, [sp, #16]
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8422              		.loc 1 5554 0
 8423 0154 4FF02009 		mov	r9, #32
 8424              	.LVL1260:
 8425              	.L802:
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 8426              		.loc 1 5573 0
 8427 0158 09EB0803 		add	r3, r9, r8
 8428 015c 0393     		str	r3, [sp, #12]
 8429              	.LVL1261:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8430              		.loc 1 5574 0
 8431 015e 0299     		ldr	r1, [sp, #8]
 8432 0160 01EB030E 		add	lr, r1, r3
 8433 0164 049B     		ldr	r3, [sp, #16]
 8434              	.LVL1262:
 8435 0166 9E44     		add	lr, lr, r3
 8436              	.LVL1263:
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 8437              		.loc 1 5577 0
 8438 0168 DDF824B0 		ldr	fp, [sp, #36]
 8439 016c 0EEB0B0C 		add	ip, lr, fp
 8440 0170 0CF1FF3C 		add	ip, ip, #-1
 8441 0174 CBF1000B 		rsb	fp, fp, #0
 8442 0178 0CEA0B0C 		and	ip, ip, fp
 8443 017c ACEB0E0C 		sub	ip, ip, lr
 8444              	.LVL1264:
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 8445              		.loc 1 5578 0
 8446 0180 032F     		cmp	r7, #3
 8447 0182 63D1     		bne	.L808
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 8448              		.loc 1 5579 0
 8449 0184 E144     		add	r9, r9, ip
 8450              	.LVL1265:
 8451 0186 039B     		ldr	r3, [sp, #12]
 8452 0188 6344     		add	r3, r3, ip
 8453 018a 0393     		str	r3, [sp, #12]
 8454              	.LVL1266:
 8455              	.L809:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8456              		.loc 1 5585 0
 8457 018c 0EEB061E 		add	lr, lr, r6, lsl #4
 8458              	.LVL1267:
 8459 0190 AEEB080E 		sub	lr, lr, r8
 8460 0194 7245     		cmp	r2, lr
 8461 0196 C0F02A82 		bcc	.L850
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8462              		.loc 1 5586 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 275


 8463 019a A2EB090B 		sub	fp, r2, r9
 8464 019e 029B     		ldr	r3, [sp, #8]
 8465 01a0 ABEB030B 		sub	fp, fp, r3
 8466 01a4 049B     		ldr	r3, [sp, #16]
 8467 01a6 ABEB030B 		sub	fp, fp, r3
 8468 01aa BBFBF6FB 		udiv	fp, fp, r6
 8469              	.LVL1268:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 8470              		.loc 1 5587 0
 8471 01ae 032F     		cmp	r7, #3
 8472 01b0 50D1     		bne	.L810
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8473              		.loc 1 5588 0
 8474 01b2 4FF6F57E 		movw	lr, #65525
 8475 01b6 F345     		cmp	fp, lr
 8476 01b8 4CD8     		bhi	.L810
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8477              		.loc 1 5589 0
 8478 01ba 0028     		cmp	r0, #0
 8479 01bc 40F01982 		bne	.L851
 8480              	.LVL1269:
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8481              		.loc 1 5589 0 is_stmt 0 discriminator 1
 8482 01c0 7308     		lsrs	r3, r6, #1
 8483              	.LVL1270:
 8484 01c2 0BD1     		bne	.L811
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8485              		.loc 1 5590 0 is_stmt 1
 8486 01c4 0E20     		movs	r0, #14
 8487 01c6 05E2     		b	.L789
 8488              	.LVL1271:
 8489              	.L844:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8490              		.loc 1 5373 0
 8491 01c8 0327     		movs	r7, #3
 8492 01ca 4846     		mov	r0, r9
 8493 01cc 0191     		str	r1, [sp, #4]
 8494 01ce 9AE7     		b	.L797
 8495              	.L845:
 8496 01d0 0327     		movs	r7, #3
 8497 01d2 4846     		mov	r0, r9
 8498 01d4 0191     		str	r1, [sp, #4]
 8499 01d6 96E7     		b	.L797
 8500              	.LVL1272:
 8501              	.L852:
 8502 01d8 0346     		mov	r3, r0
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8503              		.loc 1 5599 0
 8504 01da 0327     		movs	r7, #3
 8505              	.LVL1273:
 8506              	.L811:
 8507 01dc 1846     		mov	r0, r3
 8508 01de 92E7     		b	.L797
 8509              	.LVL1274:
 8510              	.L801:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8511              		.loc 1 5550 0 discriminator 4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 276


 8512 01e0 0133     		adds	r3, r3, #1
 8513              	.LVL1275:
 8514 01e2 7600     		lsls	r6, r6, #1
 8515              	.LVL1276:
 8516 01e4 98E7     		b	.L800
 8517              	.LVL1277:
 8518              	.L847:
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 8519              		.loc 1 5545 0
 8520 01e6 0646     		mov	r6, r0
 8521 01e8 A0E7     		b	.L799
 8522              	.LVL1278:
 8523              	.L866:
 8524 01ea 0191     		str	r1, [sp, #4]
 8525 01ec 9EE7     		b	.L799
 8526              	.LVL1279:
 8527              	.L798:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 8528              		.loc 1 5558 0
 8529 01ee 10BB     		cbnz	r0, .L849
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8530              		.loc 1 5559 0
 8531 01f0 4FEA123C 		lsr	ip, r2, #12
 8532              	.LVL1280:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8533              		.loc 1 5560 0
 8534 01f4 0023     		movs	r3, #0
 8535 01f6 0126     		movs	r6, #1
 8536 01f8 0199     		ldr	r1, [sp, #4]
 8537              	.LVL1281:
 8538              	.L804:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8539              		.loc 1 5560 0 is_stmt 0 discriminator 1
 8540 01fa DFF8A8E0 		ldr	lr, .L876+12
 8541 01fe 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 8542 0202 BEF1000F 		cmp	lr, #0
 8543 0206 18D0     		beq	.L867
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8544              		.loc 1 5560 0 discriminator 3
 8545 0208 F445     		cmp	ip, lr
 8546 020a 11D2     		bcs	.L805
 8547 020c 0191     		str	r1, [sp, #4]
 8548              	.LVL1282:
 8549              	.L803:
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 8550              		.loc 1 5562 0 is_stmt 1
 8551 020e B2FBF6F3 		udiv	r3, r2, r6
 8552              	.LVL1283:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 8553              		.loc 1 5563 0
 8554 0212 40F6F57E 		movw	lr, #4085
 8555 0216 7345     		cmp	r3, lr
 8556 0218 11D9     		bls	.L806
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 8557              		.loc 1 5564 0
 8558 021a 0233     		adds	r3, r3, #2
 8559              	.LVL1284:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 277


 8560 021c 5B00     		lsls	r3, r3, #1
 8561              	.LVL1285:
 8562              	.L807:
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 8563              		.loc 1 5569 0
 8564 021e 03F2FF13 		addw	r3, r3, #511
 8565              	.LVL1286:
 8566 0222 5B0A     		lsrs	r3, r3, #9
 8567              	.LVL1287:
 8568 0224 0293     		str	r3, [sp, #8]
 8569              	.LVL1288:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8570              		.loc 1 5571 0
 8571 0226 2023     		movs	r3, #32
 8572              	.LVL1289:
 8573 0228 0493     		str	r3, [sp, #16]
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 8574              		.loc 1 5570 0
 8575 022a 4FF00109 		mov	r9, #1
 8576 022e 93E7     		b	.L802
 8577              	.LVL1290:
 8578              	.L805:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8579              		.loc 1 5560 0 discriminator 4
 8580 0230 0133     		adds	r3, r3, #1
 8581              	.LVL1291:
 8582 0232 7600     		lsls	r6, r6, #1
 8583              	.LVL1292:
 8584 0234 E1E7     		b	.L804
 8585              	.LVL1293:
 8586              	.L849:
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 8587              		.loc 1 5545 0
 8588 0236 0646     		mov	r6, r0
 8589 0238 E9E7     		b	.L803
 8590              	.LVL1294:
 8591              	.L867:
 8592 023a 0191     		str	r1, [sp, #4]
 8593 023c E7E7     		b	.L803
 8594              	.LVL1295:
 8595              	.L806:
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8596              		.loc 1 5567 0
 8597 023e 03EB4303 		add	r3, r3, r3, lsl #1
 8598              	.LVL1296:
 8599 0242 0133     		adds	r3, r3, #1
 8600 0244 5B08     		lsrs	r3, r3, #1
 8601 0246 0333     		adds	r3, r3, #3
 8602              	.LVL1297:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8603              		.loc 1 5566 0
 8604 0248 0127     		movs	r7, #1
 8605 024a E8E7     		b	.L807
 8606              	.LVL1298:
 8607              	.L808:
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8608              		.loc 1 5581 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 278


 8609 024c 029B     		ldr	r3, [sp, #8]
 8610              	.LVL1299:
 8611 024e 6344     		add	r3, r3, ip
 8612 0250 0293     		str	r3, [sp, #8]
 8613              	.LVL1300:
 8614 0252 9BE7     		b	.L809
 8615              	.LVL1301:
 8616              	.L810:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 8617              		.loc 1 5593 0
 8618 0254 022F     		cmp	r7, #2
 8619 0256 27D1     		bne	.L812
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 8620              		.loc 1 5594 0
 8621 0258 4FF6F57E 		movw	lr, #65525
 8622 025c F345     		cmp	fp, lr
 8623 025e 0ED9     		bls	.L813
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8624              		.loc 1 5595 0
 8625 0260 10B9     		cbnz	r0, .L814
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8626              		.loc 1 5595 0 is_stmt 0 discriminator 1
 8627 0262 7300     		lsls	r3, r6, #1
 8628 0264 402B     		cmp	r3, #64
 8629 0266 B9D9     		bls	.L811
 8630              	.L814:
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 8631              		.loc 1 5598 0 is_stmt 1
 8632 0268 019B     		ldr	r3, [sp, #4]
 8633 026a 002B     		cmp	r3, #0
 8634 026c B4D1     		bne	.L852
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8635              		.loc 1 5601 0
 8636 026e 0028     		cmp	r0, #0
 8637 0270 40F0C181 		bne	.L853
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8638              		.loc 1 5601 0 is_stmt 0 discriminator 1
 8639 0274 7300     		lsls	r3, r6, #1
 8640              	.LVL1302:
 8641 0276 802B     		cmp	r3, #128
 8642 0278 B0D9     		bls	.L811
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8643              		.loc 1 5602 0 is_stmt 1
 8644 027a 0E20     		movs	r0, #14
 8645 027c AAE1     		b	.L789
 8646              	.LVL1303:
 8647              	.L813:
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8648              		.loc 1 5604 0
 8649 027e 40F6F57E 		movw	lr, #4085
 8650 0282 F345     		cmp	fp, lr
 8651 0284 10D8     		bhi	.L812
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8652              		.loc 1 5605 0
 8653 0286 0028     		cmp	r0, #0
 8654 0288 40F0B781 		bne	.L854
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 279


 8655              		.loc 1 5605 0 is_stmt 0 discriminator 1
 8656 028c 7300     		lsls	r3, r6, #1
 8657              	.LVL1304:
 8658 028e 802B     		cmp	r3, #128
 8659 0290 A4D9     		bls	.L811
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8660              		.loc 1 5606 0 is_stmt 1
 8661 0292 0E20     		movs	r0, #14
 8662 0294 9EE1     		b	.L789
 8663              	.L877:
 8664 0296 00BF     		.align	2
 8665              	.L876:
 8666 0298 00000000 		.word	.LANCHOR2
 8667 029c 00000000 		.word	.LANCHOR5
 8668 02a0 FFFFFE0F 		.word	268369919
 8669 02a4 00000000 		.word	.LANCHOR6
 8670              	.LVL1305:
 8671              	.L812:
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8672              		.loc 1 5609 0
 8673 02a8 012F     		cmp	r7, #1
 8674 02aa 04D1     		bne	.L815
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8675              		.loc 1 5609 0 is_stmt 0 discriminator 1
 8676 02ac 40F6F573 		movw	r3, #4085
 8677 02b0 9B45     		cmp	fp, r3
 8678 02b2 00F2A481 		bhi	.L855
 8679              	.L815:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 8680              		.loc 1 5620 0 is_stmt 1
 8681 02b6 4FF40072 		mov	r2, #512
 8682 02ba 0021     		movs	r1, #0
 8683 02bc 2846     		mov	r0, r5
 8684              	.LVL1306:
 8685 02be FFF7FEFF 		bl	mem_set
 8686              	.LVL1307:
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8687              		.loc 1 5621 0
 8688 02c2 0B22     		movs	r2, #11
 8689 02c4 D449     		ldr	r1, .L878
 8690 02c6 2846     		mov	r0, r5
 8691 02c8 FFF7FEFF 		bl	mem_cpy
 8692              	.LVL1308:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 8693              		.loc 1 5622 0
 8694 02cc 4FF40071 		mov	r1, #512
 8695 02d0 05F10B00 		add	r0, r5, #11
 8696 02d4 FFF7FEFF 		bl	st_word
 8697              	.LVL1309:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8698              		.loc 1 5623 0
 8699 02d8 6E73     		strb	r6, [r5, #13]
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8700              		.loc 1 5624 0
 8701 02da 1FFA89F1 		uxth	r1, r9
 8702 02de 05F10E00 		add	r0, r5, #14
 8703 02e2 FFF7FEFF 		bl	st_word
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 280


 8704              	.LVL1310:
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8705              		.loc 1 5625 0
 8706 02e6 0123     		movs	r3, #1
 8707 02e8 2B74     		strb	r3, [r5, #16]
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8708              		.loc 1 5626 0
 8709 02ea 05F11100 		add	r0, r5, #17
 8710 02ee 032F     		cmp	r7, #3
 8711 02f0 00F00581 		beq	.L856
 8712 02f4 4FF40071 		mov	r1, #512
 8713              	.L816:
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8714              		.loc 1 5626 0 is_stmt 0 discriminator 4
 8715 02f8 FFF7FEFF 		bl	st_word
 8716              	.LVL1311:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8717              		.loc 1 5627 0 is_stmt 1 discriminator 4
 8718 02fc 0899     		ldr	r1, [sp, #32]
 8719 02fe B1F5803F 		cmp	r1, #65536
 8720 0302 80F0FE80 		bcs	.L817
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8721              		.loc 1 5628 0
 8722 0306 89B2     		uxth	r1, r1
 8723 0308 05F11300 		add	r0, r5, #19
 8724 030c FFF7FEFF 		bl	st_word
 8725              	.LVL1312:
 8726              	.L818:
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8727              		.loc 1 5632 0
 8728 0310 F823     		movs	r3, #248
 8729 0312 6B75     		strb	r3, [r5, #21]
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8730              		.loc 1 5633 0
 8731 0314 3F21     		movs	r1, #63
 8732 0316 05F11800 		add	r0, r5, #24
 8733 031a FFF7FEFF 		bl	st_word
 8734              	.LVL1313:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8735              		.loc 1 5634 0
 8736 031e FF21     		movs	r1, #255
 8737 0320 05F11A00 		add	r0, r5, #26
 8738 0324 FFF7FEFF 		bl	st_word
 8739              	.LVL1314:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8740              		.loc 1 5635 0
 8741 0328 4146     		mov	r1, r8
 8742 032a 05F11C00 		add	r0, r5, #28
 8743 032e FFF7FEFF 		bl	st_dword
 8744              	.LVL1315:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8745              		.loc 1 5636 0
 8746 0332 032F     		cmp	r7, #3
 8747 0334 40F0EA80 		bne	.L819
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8748              		.loc 1 5637 0
 8749 0338 FFF7FEFF 		bl	get_fattime
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 281


 8750              	.LVL1316:
 8751 033c 0146     		mov	r1, r0
 8752 033e 05F14300 		add	r0, r5, #67
 8753 0342 FFF7FEFF 		bl	st_dword
 8754              	.LVL1317:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8755              		.loc 1 5638 0
 8756 0346 0299     		ldr	r1, [sp, #8]
 8757 0348 05F12400 		add	r0, r5, #36
 8758 034c FFF7FEFF 		bl	st_dword
 8759              	.LVL1318:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8760              		.loc 1 5639 0
 8761 0350 0221     		movs	r1, #2
 8762 0352 05F12C00 		add	r0, r5, #44
 8763 0356 FFF7FEFF 		bl	st_dword
 8764              	.LVL1319:
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8765              		.loc 1 5640 0
 8766 035a 0121     		movs	r1, #1
 8767 035c 05F13000 		add	r0, r5, #48
 8768 0360 FFF7FEFF 		bl	st_word
 8769              	.LVL1320:
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8770              		.loc 1 5641 0
 8771 0364 0621     		movs	r1, #6
 8772 0366 05F13200 		add	r0, r5, #50
 8773 036a FFF7FEFF 		bl	st_word
 8774              	.LVL1321:
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8775              		.loc 1 5642 0
 8776 036e 8023     		movs	r3, #128
 8777 0370 85F84030 		strb	r3, [r5, #64]
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8778              		.loc 1 5643 0
 8779 0374 2923     		movs	r3, #41
 8780 0376 85F84230 		strb	r3, [r5, #66]
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8781              		.loc 1 5644 0
 8782 037a 1322     		movs	r2, #19
 8783 037c A749     		ldr	r1, .L878+4
 8784 037e 05F14700 		add	r0, r5, #71
 8785 0382 FFF7FEFF 		bl	mem_cpy
 8786              	.LVL1322:
 8787              	.L820:
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8788              		.loc 1 5652 0
 8789 0386 05F5FF73 		add	r3, r5, #510
 8790 038a 0193     		str	r3, [sp, #4]
 8791 038c 4AF65521 		movw	r1, #43605
 8792 0390 1846     		mov	r0, r3
 8793 0392 FFF7FEFF 		bl	st_word
 8794              	.LVL1323:
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8795              		.loc 1 5653 0
 8796 0396 0123     		movs	r3, #1
 8797 0398 4246     		mov	r2, r8
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 282


 8798 039a 2946     		mov	r1, r5
 8799 039c 2046     		mov	r0, r4
 8800 039e FFF7FEFF 		bl	disk_write
 8801              	.LVL1324:
 8802 03a2 0028     		cmp	r0, #0
 8803 03a4 40F02D81 		bne	.L857
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8804              		.loc 1 5656 0
 8805 03a8 032F     		cmp	r7, #3
 8806 03aa 33D1     		bne	.L821
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8807              		.loc 1 5657 0
 8808 03ac 0123     		movs	r3, #1
 8809 03ae 08F10602 		add	r2, r8, #6
 8810 03b2 2946     		mov	r1, r5
 8811 03b4 2046     		mov	r0, r4
 8812 03b6 FFF7FEFF 		bl	disk_write
 8813              	.LVL1325:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8814              		.loc 1 5658 0
 8815 03ba 4FF40072 		mov	r2, #512
 8816 03be 0021     		movs	r1, #0
 8817 03c0 2846     		mov	r0, r5
 8818 03c2 FFF7FEFF 		bl	mem_set
 8819              	.LVL1326:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8820              		.loc 1 5659 0
 8821 03c6 9649     		ldr	r1, .L878+8
 8822 03c8 2846     		mov	r0, r5
 8823 03ca FFF7FEFF 		bl	st_dword
 8824              	.LVL1327:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8825              		.loc 1 5660 0
 8826 03ce 9549     		ldr	r1, .L878+12
 8827 03d0 05F5F270 		add	r0, r5, #484
 8828 03d4 FFF7FEFF 		bl	st_dword
 8829              	.LVL1328:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8830              		.loc 1 5661 0
 8831 03d8 0BF1FF31 		add	r1, fp, #-1
 8832 03dc 05F5F470 		add	r0, r5, #488
 8833 03e0 FFF7FEFF 		bl	st_dword
 8834              	.LVL1329:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8835              		.loc 1 5662 0
 8836 03e4 0221     		movs	r1, #2
 8837 03e6 05F5F670 		add	r0, r5, #492
 8838 03ea FFF7FEFF 		bl	st_dword
 8839              	.LVL1330:
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8840              		.loc 1 5663 0
 8841 03ee 4AF65521 		movw	r1, #43605
 8842 03f2 0198     		ldr	r0, [sp, #4]
 8843 03f4 FFF7FEFF 		bl	st_word
 8844              	.LVL1331:
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8845              		.loc 1 5664 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 283


 8846 03f8 0123     		movs	r3, #1
 8847 03fa 08F10702 		add	r2, r8, #7
 8848 03fe 2946     		mov	r1, r5
 8849 0400 2046     		mov	r0, r4
 8850 0402 FFF7FEFF 		bl	disk_write
 8851              	.LVL1332:
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8852              		.loc 1 5665 0
 8853 0406 0123     		movs	r3, #1
 8854 0408 08EB0302 		add	r2, r8, r3
 8855 040c 2946     		mov	r1, r5
 8856 040e 2046     		mov	r0, r4
 8857 0410 FFF7FEFF 		bl	disk_write
 8858              	.LVL1333:
 8859              	.L821:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8860              		.loc 1 5669 0
 8861 0414 5246     		mov	r2, r10
 8862 0416 0021     		movs	r1, #0
 8863 0418 2846     		mov	r0, r5
 8864 041a FFF7FEFF 		bl	mem_set
 8865              	.LVL1334:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8866              		.loc 1 5671 0
 8867 041e 4FF0000B 		mov	fp, #0
 8868              	.LVL1335:
 8869              	.L822:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8870              		.loc 1 5671 0 is_stmt 0 discriminator 1
 8871 0422 BBF1000F 		cmp	fp, #0
 8872 0426 00F08B80 		beq	.L827
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8873              		.loc 1 5689 0 is_stmt 1
 8874 042a 032F     		cmp	r7, #3
 8875 042c 40F0C380 		bne	.L868
 8876 0430 DDF80CA0 		ldr	r10, [sp, #12]
 8877 0434 B146     		mov	r9, r6
 8878              	.LVL1336:
 8879              	.L829:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8880              		.loc 1 5691 0
 8881 0436 059B     		ldr	r3, [sp, #20]
 8882 0438 4B45     		cmp	r3, r9
 8883 043a 28BF     		it	cs
 8884 043c 4B46     		movcs	r3, r9
 8885 043e 1E46     		mov	r6, r3
 8886              	.LVL1337:
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8887              		.loc 1 5692 0
 8888 0440 5246     		mov	r2, r10
 8889 0442 2946     		mov	r1, r5
 8890 0444 2046     		mov	r0, r4
 8891 0446 FFF7FEFF 		bl	disk_write
 8892              	.LVL1338:
 8893 044a 0028     		cmp	r0, #0
 8894 044c 40F0DD80 		bne	.L860
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 284


 8895              		.loc 1 5693 0
 8896 0450 B244     		add	r10, r10, r6
 8897              	.LVL1339:
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8898              		.loc 1 5694 0
 8899 0452 B9EB0609 		subs	r9, r9, r6
 8900              	.LVL1340:
 8901 0456 EED1     		bne	.L829
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8902              		.loc 1 5701 0
 8903 0458 032F     		cmp	r7, #3
 8904 045a 00F0B180 		beq	.L861
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8905              		.loc 1 5704 0
 8906 045e 089B     		ldr	r3, [sp, #32]
 8907 0460 B3F5803F 		cmp	r3, #65536
 8908 0464 80F0AF80 		bcs	.L862
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8909              		.loc 1 5707 0
 8910 0468 022F     		cmp	r7, #2
 8911 046a 40F0AF80 		bne	.L863
 8912 046e 4FF00409 		mov	r9, #4
 8913              	.LVL1341:
 8914              	.L830:
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8915              		.loc 1 5719 0
 8916 0472 069B     		ldr	r3, [sp, #24]
 8917 0474 CBBB     		cbnz	r3, .L831
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8918              		.loc 1 5720 0
 8919 0476 4FF40072 		mov	r2, #512
 8920 047a 0021     		movs	r1, #0
 8921 047c 2846     		mov	r0, r5
 8922 047e FFF7FEFF 		bl	mem_set
 8923              	.LVL1342:
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8924              		.loc 1 5721 0
 8925 0482 4AF65521 		movw	r1, #43605
 8926 0486 0198     		ldr	r0, [sp, #4]
 8927 0488 FFF7FEFF 		bl	st_word
 8928              	.LVL1343:
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8929              		.loc 1 5723 0
 8930 048c 0026     		movs	r6, #0
 8931              	.LVL1344:
 8932 048e 85F8BE61 		strb	r6, [r5, #446]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8933              		.loc 1 5724 0
 8934 0492 0127     		movs	r7, #1
 8935 0494 85F8BF71 		strb	r7, [r5, #447]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8936              		.loc 1 5725 0
 8937 0498 85F8C071 		strb	r7, [r5, #448]
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8938              		.loc 1 5726 0
 8939 049c 85F8C161 		strb	r6, [r5, #449]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 285


 8940              		.loc 1 5727 0
 8941 04a0 85F8C291 		strb	r9, [r5, #450]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8942              		.loc 1 5728 0
 8943 04a4 089B     		ldr	r3, [sp, #32]
 8944 04a6 4344     		add	r3, r3, r8
 8945 04a8 43F6C162 		movw	r2, #16065
 8946 04ac B3FBF2F3 		udiv	r3, r3, r2
 8947              	.LVL1345:
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8948              		.loc 1 5729 0
 8949 04b0 FE22     		movs	r2, #254
 8950 04b2 85F8C321 		strb	r2, [r5, #451]
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8951              		.loc 1 5730 0
 8952 04b6 9A08     		lsrs	r2, r3, #2
 8953 04b8 42F03F02 		orr	r2, r2, #63
 8954 04bc 85F8C421 		strb	r2, [r5, #452]
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8955              		.loc 1 5731 0
 8956 04c0 85F8C531 		strb	r3, [r5, #453]
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8957              		.loc 1 5732 0
 8958 04c4 4146     		mov	r1, r8
 8959 04c6 05F5E370 		add	r0, r5, #454
 8960 04ca FFF7FEFF 		bl	st_dword
 8961              	.LVL1346:
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8962              		.loc 1 5733 0
 8963 04ce 0899     		ldr	r1, [sp, #32]
 8964 04d0 05F5E570 		add	r0, r5, #458
 8965 04d4 FFF7FEFF 		bl	st_dword
 8966              	.LVL1347:
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8967              		.loc 1 5734 0
 8968 04d8 3B46     		mov	r3, r7
 8969 04da 3246     		mov	r2, r6
 8970 04dc 2946     		mov	r1, r5
 8971 04de 2046     		mov	r0, r4
 8972 04e0 FFF7FEFF 		bl	disk_write
 8973              	.LVL1348:
 8974 04e4 0028     		cmp	r0, #0
 8975 04e6 40F09280 		bne	.L864
 8976              	.LVL1349:
 8977              	.L831:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8978              		.loc 1 5738 0
 8979 04ea 0022     		movs	r2, #0
 8980 04ec 1146     		mov	r1, r2
 8981 04ee 2046     		mov	r0, r4
 8982 04f0 FFF7FEFF 		bl	disk_ioctl
 8983              	.LVL1350:
 8984 04f4 0028     		cmp	r0, #0
 8985 04f6 00F08C80 		beq	.L865
 8986 04fa 0120     		movs	r0, #1
 8987 04fc 6AE0     		b	.L789
 8988              	.LVL1351:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 286


 8989              	.L856:
5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8990              		.loc 1 5626 0
 8991 04fe 0021     		movs	r1, #0
 8992 0500 FAE6     		b	.L816
 8993              	.L817:
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8994              		.loc 1 5630 0
 8995 0502 05F12000 		add	r0, r5, #32
 8996 0506 FFF7FEFF 		bl	st_dword
 8997              	.LVL1352:
 8998 050a 01E7     		b	.L818
 8999              	.L819:
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 9000              		.loc 1 5646 0
 9001 050c FFF7FEFF 		bl	get_fattime
 9002              	.LVL1353:
 9003 0510 0146     		mov	r1, r0
 9004 0512 05F12700 		add	r0, r5, #39
 9005 0516 FFF7FEFF 		bl	st_dword
 9006              	.LVL1354:
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 9007              		.loc 1 5647 0
 9008 051a BDF80810 		ldrh	r1, [sp, #8]
 9009 051e 05F11600 		add	r0, r5, #22
 9010 0522 FFF7FEFF 		bl	st_word
 9011              	.LVL1355:
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 9012              		.loc 1 5648 0
 9013 0526 8023     		movs	r3, #128
 9014 0528 85F82430 		strb	r3, [r5, #36]
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 9015              		.loc 1 5649 0
 9016 052c 2923     		movs	r3, #41
 9017 052e 85F82630 		strb	r3, [r5, #38]
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9018              		.loc 1 5650 0
 9019 0532 1322     		movs	r2, #19
 9020 0534 3C49     		ldr	r1, .L878+16
 9021 0536 05F12B00 		add	r0, r5, #43
 9022 053a FFF7FEFF 		bl	mem_cpy
 9023              	.LVL1356:
 9024 053e 22E7     		b	.L820
 9025              	.LVL1357:
 9026              	.L827:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 9027              		.loc 1 5672 0
 9028 0540 032F     		cmp	r7, #3
 9029 0542 2ED1     		bne	.L823
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 9030              		.loc 1 5673 0
 9031 0544 6FF00701 		mvn	r1, #7
 9032 0548 2846     		mov	r0, r5
 9033 054a FFF7FEFF 		bl	st_dword
 9034              	.LVL1358:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 9035              		.loc 1 5674 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 287


 9036 054e 4FF0FF31 		mov	r1, #-1
 9037 0552 281D     		adds	r0, r5, #4
 9038 0554 FFF7FEFF 		bl	st_dword
 9039              	.LVL1359:
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9040              		.loc 1 5675 0
 9041 0558 6FF07041 		mvn	r1, #-268435456
 9042 055c 05F10800 		add	r0, r5, #8
 9043 0560 FFF7FEFF 		bl	st_dword
 9044              	.LVL1360:
 9045              	.L824:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9046              		.loc 1 5677 0
 9047 0564 DDF80890 		ldr	r9, [sp, #8]
 9048 0568 BA46     		mov	r10, r7
 9049              	.L826:
 9050              	.LVL1361:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 9051              		.loc 1 5681 0
 9052 056a 059B     		ldr	r3, [sp, #20]
 9053 056c 4B45     		cmp	r3, r9
 9054 056e 28BF     		it	cs
 9055 0570 4B46     		movcs	r3, r9
 9056 0572 1F46     		mov	r7, r3
 9057              	.LVL1362:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 9058              		.loc 1 5682 0
 9059 0574 039A     		ldr	r2, [sp, #12]
 9060 0576 2946     		mov	r1, r5
 9061 0578 2046     		mov	r0, r4
 9062 057a FFF7FEFF 		bl	disk_write
 9063              	.LVL1363:
 9064 057e 0028     		cmp	r0, #0
 9065 0580 41D1     		bne	.L859
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 9066              		.loc 1 5683 0
 9067 0582 4FF40072 		mov	r2, #512
 9068 0586 0021     		movs	r1, #0
 9069 0588 2846     		mov	r0, r5
 9070 058a FFF7FEFF 		bl	mem_set
 9071              	.LVL1364:
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 9072              		.loc 1 5684 0
 9073 058e 039B     		ldr	r3, [sp, #12]
 9074 0590 3B44     		add	r3, r3, r7
 9075 0592 0393     		str	r3, [sp, #12]
 9076              	.LVL1365:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9077              		.loc 1 5685 0
 9078 0594 B9EB0709 		subs	r9, r9, r7
 9079              	.LVL1366:
 9080 0598 E7D1     		bne	.L826
 9081 059a 5746     		mov	r7, r10
 9082              	.LVL1367:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 9083              		.loc 1 5671 0 discriminator 2
 9084 059c 0BF1010B 		add	fp, fp, #1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 288


 9085              	.LVL1368:
 9086 05a0 3FE7     		b	.L822
 9087              	.LVL1369:
 9088              	.L823:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9089              		.loc 1 5677 0
 9090 05a2 012F     		cmp	r7, #1
 9091 05a4 04D1     		bne	.L858
 9092 05a6 2149     		ldr	r1, .L878+20
 9093              	.L825:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9094              		.loc 1 5677 0 is_stmt 0 discriminator 4
 9095 05a8 2846     		mov	r0, r5
 9096 05aa FFF7FEFF 		bl	st_dword
 9097              	.LVL1370:
 9098 05ae D9E7     		b	.L824
 9099              	.L858:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9100              		.loc 1 5677 0
 9101 05b0 6FF00701 		mvn	r1, #7
 9102 05b4 F8E7     		b	.L825
 9103              	.L868:
 9104 05b6 DDF80CA0 		ldr	r10, [sp, #12]
 9105 05ba DDF81090 		ldr	r9, [sp, #16]
 9106 05be 3AE7     		b	.L829
 9107              	.LVL1371:
 9108              	.L861:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9109              		.loc 1 5702 0 is_stmt 1
 9110 05c0 4FF00C09 		mov	r9, #12
 9111              	.LVL1372:
 9112 05c4 55E7     		b	.L830
 9113              	.LVL1373:
 9114              	.L862:
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9115              		.loc 1 5705 0
 9116 05c6 4FF00609 		mov	r9, #6
 9117              	.LVL1374:
 9118 05ca 52E7     		b	.L830
 9119              	.LVL1375:
 9120              	.L863:
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9121              		.loc 1 5707 0
 9122 05cc 4FF00109 		mov	r9, #1
 9123              	.LVL1376:
 9124 05d0 4FE7     		b	.L830
 9125              	.LVL1377:
 9126              	.L832:
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 9127              		.loc 1 5320 0
 9128 05d2 0B20     		movs	r0, #11
 9129              	.LVL1378:
 9130              	.L789:
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9131              		.loc 1 5741 0
 9132 05d4 0BB0     		add	sp, sp, #44
 9133              	.LCFI125:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 289


 9134              		.cfi_remember_state
 9135              		.cfi_def_cfa_offset 36
 9136              		@ sp needed
 9137 05d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9138              	.LVL1379:
 9139              	.L839:
 9140              	.LCFI126:
 9141              		.cfi_restore_state
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 9142              		.loc 1 5356 0
 9143 05da 0120     		movs	r0, #1
 9144 05dc FAE7     		b	.L789
 9145              	.LVL1380:
 9146              	.L841:
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 9147              		.loc 1 5358 0
 9148 05de 0E20     		movs	r0, #14
 9149 05e0 F8E7     		b	.L789
 9150              	.L843:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 9151              		.loc 1 5370 0
 9152 05e2 1320     		movs	r0, #19
 9153 05e4 F6E7     		b	.L789
 9154              	.L846:
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 9155              		.loc 1 5376 0
 9156 05e6 1320     		movs	r0, #19
 9157 05e8 F4E7     		b	.L789
 9158              	.LVL1381:
 9159              	.L848:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 9160              		.loc 1 5556 0
 9161 05ea 0E20     		movs	r0, #14
 9162              	.LVL1382:
 9163 05ec F2E7     		b	.L789
 9164              	.LVL1383:
 9165              	.L850:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 9166              		.loc 1 5585 0
 9167 05ee 0E20     		movs	r0, #14
 9168              	.LVL1384:
 9169 05f0 F0E7     		b	.L789
 9170              	.LVL1385:
 9171              	.L851:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9172              		.loc 1 5590 0
 9173 05f2 0E20     		movs	r0, #14
 9174              	.LVL1386:
 9175 05f4 EEE7     		b	.L789
 9176              	.LVL1387:
 9177              	.L853:
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9178              		.loc 1 5602 0
 9179 05f6 0E20     		movs	r0, #14
 9180              	.LVL1388:
 9181 05f8 ECE7     		b	.L789
 9182              	.LVL1389:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 290


 9183              	.L854:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9184              		.loc 1 5606 0
 9185 05fa 0E20     		movs	r0, #14
 9186              	.LVL1390:
 9187 05fc EAE7     		b	.L789
 9188              	.LVL1391:
 9189              	.L855:
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9190              		.loc 1 5609 0
 9191 05fe 0E20     		movs	r0, #14
 9192              	.LVL1392:
 9193 0600 E8E7     		b	.L789
 9194              	.LVL1393:
 9195              	.L857:
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9196              		.loc 1 5653 0
 9197 0602 0120     		movs	r0, #1
 9198 0604 E6E7     		b	.L789
 9199              	.LVL1394:
 9200              	.L859:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 9201              		.loc 1 5682 0
 9202 0606 0120     		movs	r0, #1
 9203 0608 E4E7     		b	.L789
 9204              	.LVL1395:
 9205              	.L860:
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 9206              		.loc 1 5692 0
 9207 060a 0120     		movs	r0, #1
 9208 060c E2E7     		b	.L789
 9209              	.LVL1396:
 9210              	.L864:
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9211              		.loc 1 5734 0
 9212 060e 0120     		movs	r0, #1
 9213 0610 E0E7     		b	.L789
 9214              	.LVL1397:
 9215              	.L865:
5740:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9216              		.loc 1 5740 0
 9217 0612 0020     		movs	r0, #0
 9218 0614 DEE7     		b	.L789
 9219              	.L879:
 9220 0616 00BF     		.align	2
 9221              	.L878:
 9222 0618 00000000 		.word	.LC1
 9223 061c 0C000000 		.word	.LC2
 9224 0620 52526141 		.word	1096897106
 9225 0624 72724161 		.word	1631679090
 9226 0628 20000000 		.word	.LC3
 9227 062c F8FFFF00 		.word	16777208
 9228              		.cfi_endproc
 9229              	.LFE180:
 9231              		.section	.text.f_gets,"ax",%progbits
 9232              		.align	1
 9233              		.global	f_gets
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 291


 9234              		.syntax unified
 9235              		.thumb
 9236              		.thumb_func
 9237              		.fpu fpv4-sp-d16
 9239              	f_gets:
 9240              	.LFB181:
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 9241              		.loc 1 5827 0
 9242              		.cfi_startproc
 9243              		@ args = 0, pretend = 0, frame = 8
 9244              		@ frame_needed = 0, uses_anonymous_args = 0
 9245              	.LVL1398:
 9246 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9247              	.LCFI127:
 9248              		.cfi_def_cfa_offset 24
 9249              		.cfi_offset 4, -24
 9250              		.cfi_offset 5, -20
 9251              		.cfi_offset 6, -16
 9252              		.cfi_offset 7, -12
 9253              		.cfi_offset 8, -8
 9254              		.cfi_offset 14, -4
 9255 0004 82B0     		sub	sp, sp, #8
 9256              	.LCFI128:
 9257              		.cfi_def_cfa_offset 32
 9258 0006 8046     		mov	r8, r0
 9259 0008 0E46     		mov	r6, r1
 9260 000a 1746     		mov	r7, r2
 9261              	.LVL1399:
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 9262              		.loc 1 5829 0
 9263 000c 0546     		mov	r5, r0
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 9264              		.loc 1 5828 0
 9265 000e 0024     		movs	r4, #0
 9266              	.LVL1400:
 9267              	.L881:
5834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 9268              		.loc 1 5834 0
 9269 0010 731E     		subs	r3, r6, #1
 9270 0012 9C42     		cmp	r4, r3
 9271 0014 14DA     		bge	.L882
5879:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 9272              		.loc 1 5879 0
 9273 0016 6B46     		mov	r3, sp
 9274 0018 0122     		movs	r2, #1
 9275 001a 01A9     		add	r1, sp, #4
 9276 001c 3846     		mov	r0, r7
 9277 001e FFF7FEFF 		bl	f_read
 9278              	.LVL1401:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 9279              		.loc 1 5880 0
 9280 0022 009B     		ldr	r3, [sp]
 9281 0024 012B     		cmp	r3, #1
 9282 0026 0BD1     		bne	.L882
5881:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9283              		.loc 1 5881 0
 9284 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 292


 9285              	.LVL1402:
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 9286              		.loc 1 5883 0
 9287 002c 0D2B     		cmp	r3, #13
 9288 002e EFD0     		beq	.L881
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9289              		.loc 1 5884 0
 9290 0030 6A1C     		adds	r2, r5, #1
 9291              	.LVL1403:
 9292 0032 2B70     		strb	r3, [r5]
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 9293              		.loc 1 5885 0
 9294 0034 0134     		adds	r4, r4, #1
 9295              	.LVL1404:
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9296              		.loc 1 5886 0
 9297 0036 0A2B     		cmp	r3, #10
 9298 0038 01D0     		beq	.L886
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9299              		.loc 1 5884 0
 9300 003a 1546     		mov	r5, r2
 9301 003c E8E7     		b	.L881
 9302              	.L886:
 9303 003e 1546     		mov	r5, r2
 9304              	.LVL1405:
 9305              	.L882:
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 9306              		.loc 1 5888 0
 9307 0040 0023     		movs	r3, #0
 9308 0042 2B70     		strb	r3, [r5]
5889:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9309              		.loc 1 5889 0
 9310 0044 1CB1     		cbz	r4, .L887
 9311 0046 4046     		mov	r0, r8
 9312              	.L880:
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9313              		.loc 1 5890 0
 9314 0048 02B0     		add	sp, sp, #8
 9315              	.LCFI129:
 9316              		.cfi_remember_state
 9317              		.cfi_def_cfa_offset 24
 9318              		@ sp needed
 9319 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9320              	.LVL1406:
 9321              	.L887:
 9322              	.LCFI130:
 9323              		.cfi_restore_state
5889:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9324              		.loc 1 5889 0
 9325 004e 0020     		movs	r0, #0
 9326 0050 FAE7     		b	.L880
 9327              		.cfi_endproc
 9328              	.LFE181:
 9330              		.section	.text.f_putc,"ax",%progbits
 9331              		.align	1
 9332              		.global	f_putc
 9333              		.syntax unified
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 293


 9334              		.thumb
 9335              		.thumb_func
 9336              		.fpu fpv4-sp-d16
 9338              	f_putc:
 9339              	.LFB185:
5986:Middlewares/Third_Party/FatFs/src/ff.c **** }
5987:Middlewares/Third_Party/FatFs/src/ff.c **** 
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 
5990:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5991:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5993:Middlewares/Third_Party/FatFs/src/ff.c **** )
5994:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9340              		.loc 1 5994 0
 9341              		.cfi_startproc
 9342              		@ args = 0, pretend = 0, frame = 80
 9343              		@ frame_needed = 0, uses_anonymous_args = 0
 9344              	.LVL1407:
 9345 0000 10B5     		push	{r4, lr}
 9346              	.LCFI131:
 9347              		.cfi_def_cfa_offset 8
 9348              		.cfi_offset 4, -8
 9349              		.cfi_offset 14, -4
 9350 0002 94B0     		sub	sp, sp, #80
 9351              	.LCFI132:
 9352              		.cfi_def_cfa_offset 88
 9353 0004 0446     		mov	r4, r0
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 
5998:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9354              		.loc 1 5998 0
 9355 0006 01A8     		add	r0, sp, #4
 9356              	.LVL1408:
 9357 0008 FFF7FEFF 		bl	putc_init
 9358              	.LVL1409:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 9359              		.loc 1 5999 0
 9360 000c 2146     		mov	r1, r4
 9361 000e 01A8     		add	r0, sp, #4
 9362 0010 FFF7FEFF 		bl	putc_bfd
 9363              	.LVL1410:
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9364              		.loc 1 6000 0
 9365 0014 01A8     		add	r0, sp, #4
 9366 0016 FFF7FEFF 		bl	putc_flush
 9367              	.LVL1411:
6001:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9368              		.loc 1 6001 0
 9369 001a 14B0     		add	sp, sp, #80
 9370              	.LCFI133:
 9371              		.cfi_def_cfa_offset 8
 9372              		@ sp needed
 9373 001c 10BD     		pop	{r4, pc}
 9374              		.cfi_endproc
 9375              	.LFE185:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 294


 9377              		.section	.text.f_puts,"ax",%progbits
 9378              		.align	1
 9379              		.global	f_puts
 9380              		.syntax unified
 9381              		.thumb
 9382              		.thumb_func
 9383              		.fpu fpv4-sp-d16
 9385              	f_puts:
 9386              	.LFB186:
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** 
6004:Middlewares/Third_Party/FatFs/src/ff.c **** 
6005:Middlewares/Third_Party/FatFs/src/ff.c **** 
6006:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6007:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6008:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6009:Middlewares/Third_Party/FatFs/src/ff.c **** 
6010:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6011:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6013:Middlewares/Third_Party/FatFs/src/ff.c **** )
6014:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9387              		.loc 1 6014 0
 9388              		.cfi_startproc
 9389              		@ args = 0, pretend = 0, frame = 80
 9390              		@ frame_needed = 0, uses_anonymous_args = 0
 9391              	.LVL1412:
 9392 0000 10B5     		push	{r4, lr}
 9393              	.LCFI134:
 9394              		.cfi_def_cfa_offset 8
 9395              		.cfi_offset 4, -8
 9396              		.cfi_offset 14, -4
 9397 0002 94B0     		sub	sp, sp, #80
 9398              	.LCFI135:
 9399              		.cfi_def_cfa_offset 88
 9400 0004 0446     		mov	r4, r0
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 
6018:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9401              		.loc 1 6018 0
 9402 0006 01A8     		add	r0, sp, #4
 9403              	.LVL1413:
 9404 0008 FFF7FEFF 		bl	putc_init
 9405              	.LVL1414:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 9406              		.loc 1 6019 0
 9407 000c 03E0     		b	.L892
 9408              	.L893:
 9409              		.loc 1 6019 0 is_stmt 0 discriminator 2
 9410 000e 0134     		adds	r4, r4, #1
 9411              	.LVL1415:
 9412 0010 01A8     		add	r0, sp, #4
 9413 0012 FFF7FEFF 		bl	putc_bfd
 9414              	.LVL1416:
 9415              	.L892:
 9416              		.loc 1 6019 0 discriminator 1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 295


 9417 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9418 0018 0029     		cmp	r1, #0
 9419 001a F8D1     		bne	.L893
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9420              		.loc 1 6020 0 is_stmt 1
 9421 001c 01A8     		add	r0, sp, #4
 9422 001e FFF7FEFF 		bl	putc_flush
 9423              	.LVL1417:
6021:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9424              		.loc 1 6021 0
 9425 0022 14B0     		add	sp, sp, #80
 9426              	.LCFI136:
 9427              		.cfi_def_cfa_offset 8
 9428              		@ sp needed
 9429 0024 10BD     		pop	{r4, pc}
 9430              		.cfi_endproc
 9431              	.LFE186:
 9433              		.section	.text.f_printf,"ax",%progbits
 9434              		.align	1
 9435              		.global	f_printf
 9436              		.syntax unified
 9437              		.thumb
 9438              		.thumb_func
 9439              		.fpu fpv4-sp-d16
 9441              	f_printf:
 9442              	.LFB187:
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** 
6024:Middlewares/Third_Party/FatFs/src/ff.c **** 
6025:Middlewares/Third_Party/FatFs/src/ff.c **** 
6026:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6027:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6028:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 
6030:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6031:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6032:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6034:Middlewares/Third_Party/FatFs/src/ff.c **** )
6035:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9443              		.loc 1 6035 0
 9444              		.cfi_startproc
 9445              		@ args = 4, pretend = 12, frame = 112
 9446              		@ frame_needed = 0, uses_anonymous_args = 1
 9447              	.LVL1418:
 9448 0000 0EB4     		push	{r1, r2, r3}
 9449              	.LCFI137:
 9450              		.cfi_def_cfa_offset 12
 9451              		.cfi_offset 1, -12
 9452              		.cfi_offset 2, -8
 9453              		.cfi_offset 3, -4
 9454 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9455              	.LCFI138:
 9456              		.cfi_def_cfa_offset 44
 9457              		.cfi_offset 4, -44
 9458              		.cfi_offset 5, -40
 9459              		.cfi_offset 6, -36
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 296


 9460              		.cfi_offset 7, -32
 9461              		.cfi_offset 8, -28
 9462              		.cfi_offset 9, -24
 9463              		.cfi_offset 10, -20
 9464              		.cfi_offset 14, -16
 9465 0006 9DB0     		sub	sp, sp, #116
 9466              	.LCFI139:
 9467              		.cfi_def_cfa_offset 160
 9468 0008 25AC     		add	r4, sp, #148
 9469 000a 54F8046B 		ldr	r6, [r4], #4
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9470              		.loc 1 6044 0
 9471 000e 0146     		mov	r1, r0
 9472 0010 08A8     		add	r0, sp, #32
 9473              	.LVL1419:
 9474 0012 FFF7FEFF 		bl	putc_init
 9475              	.LVL1420:
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9476              		.loc 1 6046 0
 9477 0016 1B94     		str	r4, [sp, #108]
 9478 0018 F4E0     		b	.L896
 9479              	.LVL1421:
 9480              	.L898:
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9481              		.loc 1 6056 0
 9482 001a 0236     		adds	r6, r6, #2
 9483              	.LVL1422:
 9484 001c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9485              	.LVL1423:
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9486              		.loc 1 6057 0
 9487 001e 3029     		cmp	r1, #48
 9488 0020 04D0     		beq	.L947
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9489              		.loc 1 6060 0
 9490 0022 2D29     		cmp	r1, #45
 9491 0024 06D0     		beq	.L948
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 297


6055:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9492              		.loc 1 6055 0
 9493 0026 0027     		movs	r7, #0
 9494              	.LVL1424:
 9495              	.L901:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9496              		.loc 1 6058 0
 9497 0028 0025     		movs	r5, #0
 9498 002a 0EE0     		b	.L902
 9499              	.LVL1425:
 9500              	.L947:
 9501 002c A61C     		adds	r6, r4, #2
 9502              	.LVL1426:
 9503 002e 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9504              	.LVL1427:
 9505 0030 0127     		movs	r7, #1
 9506 0032 F9E7     		b	.L901
 9507              	.LVL1428:
 9508              	.L948:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9509              		.loc 1 6061 0
 9510 0034 A61C     		adds	r6, r4, #2
 9511              	.LVL1429:
 9512 0036 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9513              	.LVL1430:
 9514 0038 0227     		movs	r7, #2
 9515 003a F5E7     		b	.L901
 9516              	.LVL1431:
 9517              	.L903:
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9518              		.loc 1 6065 0
 9519 003c 05EB8505 		add	r5, r5, r5, lsl #2
 9520              	.LVL1432:
 9521 0040 6B00     		lsls	r3, r5, #1
 9522 0042 CD18     		adds	r5, r1, r3
 9523 0044 303D     		subs	r5, r5, #48
 9524              	.LVL1433:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9525              		.loc 1 6066 0
 9526 0046 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9527              	.LVL1434:
 9528 0048 0136     		adds	r6, r6, #1
 9529              	.LVL1435:
 9530              	.L902:
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9531              		.loc 1 6064 0
 9532 004a A1F13002 		sub	r2, r1, #48
 9533 004e D2B2     		uxtb	r2, r2
 9534 0050 092A     		cmp	r2, #9
 9535 0052 F3D9     		bls	.L903
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9536              		.loc 1 6068 0
 9537 0054 6C29     		cmp	r1, #108
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 298


 9538 0056 1ED0     		beq	.L904
 9539              		.loc 1 6068 0 is_stmt 0 discriminator 1
 9540 0058 4C29     		cmp	r1, #76
 9541 005a 1CD0     		beq	.L904
 9542              	.L905:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9543              		.loc 1 6071 0 is_stmt 1
 9544 005c 0029     		cmp	r1, #0
 9545 005e 00F0DC80 		beq	.L897
 9546              	.LVL1436:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9547              		.loc 1 6073 0
 9548 0062 A1F16103 		sub	r3, r1, #97
 9549 0066 DBB2     		uxtb	r3, r3
 9550 0068 192B     		cmp	r3, #25
 9551 006a 19D8     		bhi	.L941
 9552              		.loc 1 6073 0 is_stmt 0 discriminator 1
 9553 006c A1F12003 		sub	r3, r1, #32
 9554 0070 DBB2     		uxtb	r3, r3
 9555              	.LVL1437:
 9556              	.L906:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9557              		.loc 1 6074 0 is_stmt 1
 9558 0072 A3F14202 		sub	r2, r3, #66
 9559 0076 162A     		cmp	r2, #22
 9560 0078 4DD8     		bhi	.L907
 9561 007a DFE802F0 		tbb	[pc, r2]
 9562              	.L909:
 9563 007e 50       		.byte	(.L908-.L909)/2
 9564 007f 3E       		.byte	(.L910-.L909)/2
 9565 0080 46       		.byte	(.L911-.L909)/2
 9566 0081 4C       		.byte	(.L907-.L909)/2
 9567 0082 4C       		.byte	(.L907-.L909)/2
 9568 0083 4C       		.byte	(.L907-.L909)/2
 9569 0084 4C       		.byte	(.L907-.L909)/2
 9570 0085 4C       		.byte	(.L907-.L909)/2
 9571 0086 4C       		.byte	(.L907-.L909)/2
 9572 0087 4C       		.byte	(.L907-.L909)/2
 9573 0088 4C       		.byte	(.L907-.L909)/2
 9574 0089 4C       		.byte	(.L907-.L909)/2
 9575 008a 4C       		.byte	(.L907-.L909)/2
 9576 008b 53       		.byte	(.L942-.L909)/2
 9577 008c 4C       		.byte	(.L907-.L909)/2
 9578 008d 4C       		.byte	(.L907-.L909)/2
 9579 008e 4C       		.byte	(.L907-.L909)/2
 9580 008f 13       		.byte	(.L913-.L909)/2
 9581 0090 4C       		.byte	(.L907-.L909)/2
 9582 0091 46       		.byte	(.L911-.L909)/2
 9583 0092 4C       		.byte	(.L907-.L909)/2
 9584 0093 4C       		.byte	(.L907-.L909)/2
 9585 0094 49       		.byte	(.L914-.L909)/2
 9586              	.LVL1438:
 9587 0095 00       		.p2align 1
 9588              	.L904:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 299


6069:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9589              		.loc 1 6069 0
 9590 0096 47F00407 		orr	r7, r7, #4
 9591              	.LVL1439:
 9592 009a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9593              	.LVL1440:
 9594 009c 0136     		adds	r6, r6, #1
 9595              	.LVL1441:
 9596 009e DDE7     		b	.L905
 9597              	.LVL1442:
 9598              	.L941:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9599              		.loc 1 6072 0
 9600 00a0 0B46     		mov	r3, r1
 9601 00a2 E6E7     		b	.L906
 9602              	.LVL1443:
 9603              	.L913:
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9604              		.loc 1 6076 0
 9605 00a4 1B9B     		ldr	r3, [sp, #108]
 9606              	.LVL1444:
 9607 00a6 1A1D     		adds	r2, r3, #4
 9608 00a8 1B92     		str	r2, [sp, #108]
 9609 00aa 1C68     		ldr	r4, [r3]
 9610              	.LVL1445:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9611              		.loc 1 6077 0
 9612 00ac 0023     		movs	r3, #0
 9613 00ae 00E0     		b	.L915
 9614              	.LVL1446:
 9615              	.L916:
 9616              		.loc 1 6077 0 is_stmt 0 discriminator 3
 9617 00b0 0133     		adds	r3, r3, #1
 9618              	.LVL1447:
 9619              	.L915:
 9620              		.loc 1 6077 0 discriminator 1
 9621 00b2 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 9622 00b4 002A     		cmp	r2, #0
 9623 00b6 FBD1     		bne	.L916
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9624              		.loc 1 6078 0 is_stmt 1
 9625 00b8 17F0020F 		tst	r7, #2
 9626 00bc 07D0     		beq	.L917
 9627 00be 1F46     		mov	r7, r3
 9628              	.LVL1448:
 9629 00c0 0DE0     		b	.L920
 9630              	.LVL1449:
 9631              	.L919:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9632              		.loc 1 6079 0 discriminator 2
 9633 00c2 2021     		movs	r1, #32
 9634 00c4 0DEB0100 		add	r0, sp, r1
 9635 00c8 FFF7FEFF 		bl	putc_bfd
 9636              	.LVL1450:
 9637 00cc 3B46     		mov	r3, r7
 9638              	.LVL1451:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 300


 9639              	.L917:
 9640              		.loc 1 6079 0 is_stmt 0 discriminator 1
 9641 00ce 5F1C     		adds	r7, r3, #1
 9642              	.LVL1452:
 9643 00d0 AB42     		cmp	r3, r5
 9644 00d2 F6D3     		bcc	.L919
 9645 00d4 03E0     		b	.L920
 9646              	.LVL1453:
 9647              	.L921:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9648              		.loc 1 6081 0 is_stmt 1 discriminator 2
 9649 00d6 0134     		adds	r4, r4, #1
 9650              	.LVL1454:
 9651 00d8 08A8     		add	r0, sp, #32
 9652 00da FFF7FEFF 		bl	putc_bfd
 9653              	.LVL1455:
 9654              	.L920:
 9655              		.loc 1 6081 0 is_stmt 0 discriminator 1
 9656 00de 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9657 00e0 0029     		cmp	r1, #0
 9658 00e2 F8D1     		bne	.L921
 9659 00e4 05E0     		b	.L922
 9660              	.LVL1456:
 9661              	.L923:
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9662              		.loc 1 6082 0 is_stmt 1 discriminator 2
 9663 00e6 2021     		movs	r1, #32
 9664 00e8 0DEB0100 		add	r0, sp, r1
 9665 00ec FFF7FEFF 		bl	putc_bfd
 9666              	.LVL1457:
 9667 00f0 2746     		mov	r7, r4
 9668              	.LVL1458:
 9669              	.L922:
 9670              		.loc 1 6082 0 is_stmt 0 discriminator 1
 9671 00f2 7C1C     		adds	r4, r7, #1
 9672              	.LVL1459:
 9673 00f4 AF42     		cmp	r7, r5
 9674 00f6 F6D3     		bcc	.L923
 9675 00f8 84E0     		b	.L896
 9676              	.LVL1460:
 9677              	.L910:
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9678              		.loc 1 6086 0 is_stmt 1
 9679 00fa 1B9B     		ldr	r3, [sp, #108]
 9680              	.LVL1461:
 9681 00fc 1A1D     		adds	r2, r3, #4
 9682 00fe 1B92     		str	r2, [sp, #108]
 9683 0100 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9684              	.LVL1462:
 9685 0102 08A8     		add	r0, sp, #32
 9686 0104 FFF7FEFF 		bl	putc_bfd
 9687              	.LVL1463:
 9688 0108 7CE0     		b	.L896
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 301


 9689              	.LVL1464:
 9690              	.L911:
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9691              		.loc 1 6096 0
 9692 010a 4FF00A0C 		mov	ip, #10
 9693 010e 0BE0     		b	.L912
 9694              	.LVL1465:
 9695              	.L914:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9696              		.loc 1 6099 0
 9697 0110 4FF0100C 		mov	ip, #16
 9698 0114 08E0     		b	.L912
 9699              	.LVL1466:
 9700              	.L907:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9701              		.loc 1 6102 0
 9702 0116 08A8     		add	r0, sp, #32
 9703 0118 FFF7FEFF 		bl	putc_bfd
 9704              	.LVL1467:
 9705 011c 72E0     		b	.L896
 9706              	.LVL1468:
 9707              	.L908:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9708              		.loc 1 6089 0
 9709 011e 4FF0020C 		mov	ip, #2
 9710 0122 01E0     		b	.L912
 9711              	.L942:
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9712              		.loc 1 6092 0
 9713 0124 4FF0080C 		mov	ip, #8
 9714              	.L912:
 9715              	.LVL1469:
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9716              		.loc 1 6106 0
 9717 0128 17F0040F 		tst	r7, #4
 9718 012c 0AD1     		bne	.L949
 9719              		.loc 1 6106 0 is_stmt 0 discriminator 2
 9720 012e 442B     		cmp	r3, #68
 9721 0130 0DD0     		beq	.L950
 9722              		.loc 1 6106 0
 9723 0132 1B9A     		ldr	r2, [sp, #108]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 302


 9724 0134 101D     		adds	r0, r2, #4
 9725 0136 1B90     		str	r0, [sp, #108]
 9726 0138 1068     		ldr	r0, [r2]
 9727              	.L925:
 9728              	.LVL1470:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9729              		.loc 1 6107 0 is_stmt 1 discriminator 8
 9730 013a 442B     		cmp	r3, #68
 9731 013c 0CD0     		beq	.L951
 9732              	.L927:
 9733              	.LVL1471:
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9734              		.loc 1 6111 0
 9735 013e 4FF0000E 		mov	lr, #0
 9736 0142 1EE0     		b	.L931
 9737              	.LVL1472:
 9738              	.L949:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9739              		.loc 1 6106 0
 9740 0144 1B9A     		ldr	r2, [sp, #108]
 9741 0146 101D     		adds	r0, r2, #4
 9742 0148 1B90     		str	r0, [sp, #108]
 9743 014a 1068     		ldr	r0, [r2]
 9744 014c F5E7     		b	.L925
 9745              	.L950:
 9746 014e 1B9A     		ldr	r2, [sp, #108]
 9747 0150 101D     		adds	r0, r2, #4
 9748 0152 1B90     		str	r0, [sp, #108]
 9749 0154 1068     		ldr	r0, [r2]
 9750 0156 F0E7     		b	.L925
 9751              	.LVL1473:
 9752              	.L951:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9753              		.loc 1 6107 0 discriminator 1
 9754 0158 0028     		cmp	r0, #0
 9755 015a F0DA     		bge	.L927
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9756              		.loc 1 6108 0
 9757 015c 4042     		negs	r0, r0
 9758              	.LVL1474:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9759              		.loc 1 6109 0
 9760 015e 47F00807 		orr	r7, r7, #8
 9761              	.LVL1475:
 9762 0162 ECE7     		b	.L927
 9763              	.LVL1476:
 9764              	.L952:
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9765              		.loc 1 6114 0
 9766 0164 2724     		movs	r4, #39
 9767              	.L929:
 9768              		.loc 1 6114 0 is_stmt 0 discriminator 5
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 303


 9769 0166 2344     		add	r3, r3, r4
 9770              	.LVL1477:
 9771 0168 DBB2     		uxtb	r3, r3
 9772              	.LVL1478:
 9773              	.L928:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9774              		.loc 1 6115 0 is_stmt 1
 9775 016a 0EF10104 		add	r4, lr, #1
 9776              	.LVL1479:
 9777 016e 3033     		adds	r3, r3, #48
 9778              	.LVL1480:
 9779 0170 0DF17008 		add	r8, sp, #112
 9780 0174 F044     		add	r8, r8, lr
 9781 0176 08F8703C 		strb	r3, [r8, #-112]
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9782              		.loc 1 6116 0
 9783 017a 72B1     		cbz	r2, .L930
 9784              		.loc 1 6116 0 is_stmt 0 discriminator 1
 9785 017c 1F2C     		cmp	r4, #31
 9786 017e 0CD8     		bhi	.L930
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9787              		.loc 1 6115 0 is_stmt 1
 9788 0180 A646     		mov	lr, r4
 9789              	.LVL1481:
 9790              	.L931:
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9791              		.loc 1 6113 0
 9792 0182 B0FBFCF2 		udiv	r2, r0, ip
 9793 0186 0CFB1203 		mls	r3, ip, r2, r0
 9794 018a DBB2     		uxtb	r3, r3
 9795              	.LVL1482:
 9796 018c 1046     		mov	r0, r2
 9797              	.LVL1483:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9798              		.loc 1 6114 0
 9799 018e 092B     		cmp	r3, #9
 9800 0190 EBD9     		bls	.L928
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9801              		.loc 1 6114 0 is_stmt 0 discriminator 1
 9802 0192 7829     		cmp	r1, #120
 9803 0194 E6D0     		beq	.L952
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9804              		.loc 1 6114 0
 9805 0196 0724     		movs	r4, #7
 9806 0198 E5E7     		b	.L929
 9807              	.LVL1484:
 9808              	.L930:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9809              		.loc 1 6117 0 is_stmt 1
 9810 019a 17F0080F 		tst	r7, #8
 9811 019e 06D0     		beq	.L932
 9812              	.LVL1485:
 9813              		.loc 1 6117 0 is_stmt 0 discriminator 1
 9814 01a0 1CAB     		add	r3, sp, #112
 9815 01a2 1C44     		add	r4, r4, r3
 9816 01a4 2D23     		movs	r3, #45
 9817 01a6 04F8703C 		strb	r3, [r4, #-112]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 304


 9818 01aa 0EF10204 		add	r4, lr, #2
 9819              	.LVL1486:
 9820              	.L932:
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9821              		.loc 1 6118 0 is_stmt 1
 9822 01ae 17F0010F 		tst	r7, #1
 9823 01b2 03D0     		beq	.L945
 9824 01b4 4FF0300A 		mov	r10, #48
 9825              	.L933:
 9826              	.LVL1487:
 9827              		.loc 1 6118 0 is_stmt 0 discriminator 4
 9828 01b8 A046     		mov	r8, r4
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9829              		.loc 1 6119 0 is_stmt 1 discriminator 4
 9830 01ba 07E0     		b	.L934
 9831              	.LVL1488:
 9832              	.L945:
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9833              		.loc 1 6118 0
 9834 01bc 4FF0200A 		mov	r10, #32
 9835 01c0 FAE7     		b	.L933
 9836              	.LVL1489:
 9837              	.L936:
 9838              		.loc 1 6119 0 discriminator 3
 9839 01c2 5146     		mov	r1, r10
 9840 01c4 08A8     		add	r0, sp, #32
 9841 01c6 FFF7FEFF 		bl	putc_bfd
 9842              	.LVL1490:
 9843 01ca C846     		mov	r8, r9
 9844              	.LVL1491:
 9845              	.L934:
 9846              		.loc 1 6119 0 is_stmt 0 discriminator 1
 9847 01cc 17F0020F 		tst	r7, #2
 9848 01d0 04D1     		bne	.L937
 9849              		.loc 1 6119 0 discriminator 2
 9850 01d2 08F10109 		add	r9, r8, #1
 9851              	.LVL1492:
 9852 01d6 A845     		cmp	r8, r5
 9853 01d8 F3D3     		bcc	.L936
 9854              		.loc 1 6119 0
 9855 01da C846     		mov	r8, r9
 9856              	.LVL1493:
 9857              	.L937:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9858              		.loc 1 6121 0 is_stmt 1 discriminator 1
 9859 01dc 013C     		subs	r4, r4, #1
 9860              	.LVL1494:
 9861 01de 1CAB     		add	r3, sp, #112
 9862 01e0 2344     		add	r3, r3, r4
 9863 01e2 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9864 01e6 08A8     		add	r0, sp, #32
 9865 01e8 FFF7FEFF 		bl	putc_bfd
 9866              	.LVL1495:
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9867              		.loc 1 6122 0 discriminator 1
 9868 01ec 002C     		cmp	r4, #0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 305


 9869 01ee F5D1     		bne	.L937
 9870 01f0 04E0     		b	.L938
 9871              	.LVL1496:
 9872              	.L939:
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9873              		.loc 1 6123 0 discriminator 2
 9874 01f2 5146     		mov	r1, r10
 9875 01f4 08A8     		add	r0, sp, #32
 9876 01f6 FFF7FEFF 		bl	putc_bfd
 9877              	.LVL1497:
 9878 01fa A046     		mov	r8, r4
 9879              	.LVL1498:
 9880              	.L938:
 9881              		.loc 1 6123 0 is_stmt 0 discriminator 1
 9882 01fc 08F10104 		add	r4, r8, #1
 9883              	.LVL1499:
 9884 0200 A845     		cmp	r8, r5
 9885 0202 F6D3     		bcc	.L939
 9886              	.LVL1500:
 9887              	.L896:
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9888              		.loc 1 6049 0 is_stmt 1
 9889 0204 741C     		adds	r4, r6, #1
 9890              	.LVL1501:
 9891 0206 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9892              	.LVL1502:
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9893              		.loc 1 6050 0
 9894 0208 39B1     		cbz	r1, .L897
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9895              		.loc 1 6051 0
 9896 020a 2529     		cmp	r1, #37
 9897 020c 3FF405AF 		beq	.L898
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 9898              		.loc 1 6052 0
 9899 0210 08A8     		add	r0, sp, #32
 9900 0212 FFF7FEFF 		bl	putc_bfd
 9901              	.LVL1503:
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9902              		.loc 1 6049 0
 9903 0216 2646     		mov	r6, r4
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9904              		.loc 1 6053 0
 9905 0218 F4E7     		b	.L896
 9906              	.LVL1504:
 9907              	.L897:
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6127:Middlewares/Third_Party/FatFs/src/ff.c **** 
6128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9908              		.loc 1 6128 0
 9909 021a 08A8     		add	r0, sp, #32
 9910 021c FFF7FEFF 		bl	putc_flush
 9911              	.LVL1505:
6129:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9912              		.loc 1 6129 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 306


 9913 0220 1DB0     		add	sp, sp, #116
 9914              	.LCFI140:
 9915              		.cfi_def_cfa_offset 44
 9916              		@ sp needed
 9917 0222 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9918              	.LCFI141:
 9919              		.cfi_restore 14
 9920              		.cfi_restore 10
 9921              		.cfi_restore 9
 9922              		.cfi_restore 8
 9923              		.cfi_restore 7
 9924              		.cfi_restore 6
 9925              		.cfi_restore 5
 9926              		.cfi_restore 4
 9927              		.cfi_def_cfa_offset 12
 9928 0226 03B0     		add	sp, sp, #12
 9929              	.LCFI142:
 9930              		.cfi_restore 3
 9931              		.cfi_restore 2
 9932              		.cfi_restore 1
 9933              		.cfi_def_cfa_offset 0
 9934 0228 7047     		bx	lr
 9935              		.cfi_endproc
 9936              	.LFE187:
 9938              		.section	.bss.FatFs,"aw",%nobits
 9939              		.align	2
 9940              		.set	.LANCHOR2,. + 0
 9943              	FatFs:
 9944 0000 00000000 		.space	4
 9945              		.section	.bss.Files,"aw",%nobits
 9946              		.align	2
 9947              		.set	.LANCHOR0,. + 0
 9950              	Files:
 9951 0000 00000000 		.space	32
 9951      00000000 
 9951      00000000 
 9951      00000000 
 9951      00000000 
 9952              		.section	.bss.Fsid,"aw",%nobits
 9953              		.align	1
 9954              		.set	.LANCHOR3,. + 0
 9957              	Fsid:
 9958 0000 0000     		.space	2
 9959              		.section	.rodata.ExCvt,"a",%progbits
 9960              		.align	2
 9961              		.set	.LANCHOR1,. + 0
 9964              	ExCvt:
 9965 0000 43       		.byte	67
 9966 0001 55       		.byte	85
 9967 0002 45       		.byte	69
 9968 0003 41       		.byte	65
 9969 0004 41       		.byte	65
 9970 0005 41       		.byte	65
 9971 0006 41       		.byte	65
 9972 0007 43       		.byte	67
 9973 0008 45       		.byte	69
 9974 0009 45       		.byte	69
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 307


 9975 000a 45       		.byte	69
 9976 000b 49       		.byte	73
 9977 000c 49       		.byte	73
 9978 000d 49       		.byte	73
 9979 000e 41       		.byte	65
 9980 000f 41       		.byte	65
 9981 0010 45       		.byte	69
 9982 0011 92       		.byte	-110
 9983 0012 92       		.byte	-110
 9984 0013 4F       		.byte	79
 9985 0014 4F       		.byte	79
 9986 0015 4F       		.byte	79
 9987 0016 55       		.byte	85
 9988 0017 55       		.byte	85
 9989 0018 59       		.byte	89
 9990 0019 4F       		.byte	79
 9991 001a 55       		.byte	85
 9992 001b 4F       		.byte	79
 9993 001c 9C       		.byte	-100
 9994 001d 4F       		.byte	79
 9995 001e 9E       		.byte	-98
 9996 001f 9F       		.byte	-97
 9997 0020 41       		.byte	65
 9998 0021 49       		.byte	73
 9999 0022 4F       		.byte	79
 10000 0023 55       		.byte	85
 10001 0024 A5       		.byte	-91
 10002 0025 A5       		.byte	-91
 10003 0026 A6       		.byte	-90
 10004 0027 A7       		.byte	-89
 10005 0028 A8       		.byte	-88
 10006 0029 A9       		.byte	-87
 10007 002a AA       		.byte	-86
 10008 002b AB       		.byte	-85
 10009 002c AC       		.byte	-84
 10010 002d AD       		.byte	-83
 10011 002e AE       		.byte	-82
 10012 002f AF       		.byte	-81
 10013 0030 B0       		.byte	-80
 10014 0031 B1       		.byte	-79
 10015 0032 B2       		.byte	-78
 10016 0033 B3       		.byte	-77
 10017 0034 B4       		.byte	-76
 10018 0035 41       		.byte	65
 10019 0036 41       		.byte	65
 10020 0037 41       		.byte	65
 10021 0038 B8       		.byte	-72
 10022 0039 B9       		.byte	-71
 10023 003a BA       		.byte	-70
 10024 003b BB       		.byte	-69
 10025 003c BC       		.byte	-68
 10026 003d BD       		.byte	-67
 10027 003e BE       		.byte	-66
 10028 003f BF       		.byte	-65
 10029 0040 C0       		.byte	-64
 10030 0041 C1       		.byte	-63
 10031 0042 C2       		.byte	-62
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 308


 10032 0043 C3       		.byte	-61
 10033 0044 C4       		.byte	-60
 10034 0045 C5       		.byte	-59
 10035 0046 41       		.byte	65
 10036 0047 41       		.byte	65
 10037 0048 C8       		.byte	-56
 10038 0049 C9       		.byte	-55
 10039 004a CA       		.byte	-54
 10040 004b CB       		.byte	-53
 10041 004c CC       		.byte	-52
 10042 004d CD       		.byte	-51
 10043 004e CE       		.byte	-50
 10044 004f CF       		.byte	-49
 10045 0050 D1       		.byte	-47
 10046 0051 D1       		.byte	-47
 10047 0052 45       		.byte	69
 10048 0053 45       		.byte	69
 10049 0054 45       		.byte	69
 10050 0055 49       		.byte	73
 10051 0056 49       		.byte	73
 10052 0057 49       		.byte	73
 10053 0058 49       		.byte	73
 10054 0059 D9       		.byte	-39
 10055 005a DA       		.byte	-38
 10056 005b DB       		.byte	-37
 10057 005c DC       		.byte	-36
 10058 005d DD       		.byte	-35
 10059 005e 49       		.byte	73
 10060 005f DF       		.byte	-33
 10061 0060 4F       		.byte	79
 10062 0061 E1       		.byte	-31
 10063 0062 4F       		.byte	79
 10064 0063 4F       		.byte	79
 10065 0064 4F       		.byte	79
 10066 0065 4F       		.byte	79
 10067 0066 E6       		.byte	-26
 10068 0067 E8       		.byte	-24
 10069 0068 E8       		.byte	-24
 10070 0069 55       		.byte	85
 10071 006a 55       		.byte	85
 10072 006b 55       		.byte	85
 10073 006c 59       		.byte	89
 10074 006d 59       		.byte	89
 10075 006e EE       		.byte	-18
 10076 006f EF       		.byte	-17
 10077 0070 F0       		.byte	-16
 10078 0071 F1       		.byte	-15
 10079 0072 F2       		.byte	-14
 10080 0073 F3       		.byte	-13
 10081 0074 F4       		.byte	-12
 10082 0075 F5       		.byte	-11
 10083 0076 F6       		.byte	-10
 10084 0077 F7       		.byte	-9
 10085 0078 F8       		.byte	-8
 10086 0079 F9       		.byte	-7
 10087 007a FA       		.byte	-6
 10088 007b FB       		.byte	-5
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 309


 10089 007c FC       		.byte	-4
 10090 007d FD       		.byte	-3
 10091 007e FE       		.byte	-2
 10092 007f FF       		.byte	-1
 10093              		.section	.rodata.badchr.10701,"a",%progbits
 10094              		.align	2
 10095              		.set	.LANCHOR4,. + 0
 10098              	badchr.10701:
 10099 0000 222A2B2C 		.ascii	"\"*+,.:;<=>?[]|\177\000"
 10099      2E3A3B3C 
 10099      3D3E3F5B 
 10099      5D7C7F00 
 10100              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 10101              		.align	2
 10102              	.LC0:
 10103 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 10103      3A3B3C3D 
 10103      3E3F5B5D 
 10103      7C7F00
 10104              		.section	.rodata.cst.10722,"a",%progbits
 10105              		.align	2
 10106              		.set	.LANCHOR6,. + 0
 10109              	cst.10722:
 10110 0000 0100     		.short	1
 10111 0002 0400     		.short	4
 10112 0004 1000     		.short	16
 10113 0006 4000     		.short	64
 10114 0008 0001     		.short	256
 10115 000a 0002     		.short	512
 10116 000c 0000     		.short	0
 10117              		.section	.rodata.cst32.10723,"a",%progbits
 10118              		.align	2
 10119              		.set	.LANCHOR5,. + 0
 10122              	cst32.10723:
 10123 0000 0100     		.short	1
 10124 0002 0200     		.short	2
 10125 0004 0400     		.short	4
 10126 0006 0800     		.short	8
 10127 0008 1000     		.short	16
 10128 000a 2000     		.short	32
 10129 000c 0000     		.short	0
 10130              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 10131              		.align	2
 10132              	.LC1:
 10133 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 10133      53444F53 
 10133      352E3000 
 10134              	.LC2:
 10135 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 10135      414D4520 
 10135      20202046 
 10135      41543332 
 10135      20202000 
 10136              	.LC3:
 10137 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 10137      414D4520 
 10137      20202046 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 310


 10137      41542020 
 10137      20202000 
 10138              		.text
 10139              	.Letext0:
 10140              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 10141              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 10142              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 10143              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 10144              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 10145              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 10146              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 10147              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 10148              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 10149              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 10150              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 10151              		.file 13 "<built-in>"
 10152              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 10153              		.file 15 "Middlewares/Third_Party/FatFs/src/ff.h"
 10154              		.file 16 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 311


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:18     .text.ld_word:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:24     .text.ld_word:00000000 ld_word
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:47     .text.ld_dword:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:53     .text.ld_dword:00000000 ld_dword
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:83     .text.st_word:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:89     .text.st_word:00000000 st_word
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:109    .text.st_dword:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:115    .text.st_dword:00000000 st_dword
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:143    .text.mem_cpy:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:149    .text.mem_cpy:00000000 mem_cpy
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:180    .text.mem_set:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:186    .text.mem_set:00000000 mem_set
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:210    .text.mem_cmp:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:216    .text.mem_cmp:00000000 mem_cmp
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:266    .text.chk_chr:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:272    .text.chk_chr:00000000 chk_chr
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:302    .text.chk_lock:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:308    .text.chk_lock:00000000 chk_lock
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:428    .text.chk_lock:00000070 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:433    .text.enq_lock:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:439    .text.enq_lock:00000000 enq_lock
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:476    .text.enq_lock:0000001c $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:481    .text.inc_lock:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:487    .text.inc_lock:00000000 inc_lock
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:639    .text.inc_lock:000000a0 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:644    .text.dec_lock:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:650    .text.dec_lock:00000000 dec_lock
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:718    .text.dec_lock:0000003c $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:723    .text.clear_lock:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:729    .text.clear_lock:00000000 clear_lock
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:795    .text.clear_lock:00000038 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:800    .text.clust2sect:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:806    .text.clust2sect:00000000 clust2sect
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:839    .text.clmt_clust:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:845    .text.clmt_clust:00000000 clmt_clust
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:896    .text.ld_clust:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:902    .text.ld_clust:00000000 ld_clust
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:947    .text.st_clust:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:953    .text.st_clust:00000000 st_clust
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:996    .text.get_fileinfo:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1002   .text.get_fileinfo:00000000 get_fileinfo
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1114   .text.create_name:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1120   .text.create_name:00000000 create_name
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1302   .text.create_name:000000cc $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1308   .text.get_ldnumber:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1314   .text.get_ldnumber:00000000 get_ldnumber
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1417   .text.putc_init:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1423   .text.putc_init:00000000 putc_init
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1442   .text.validate:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1448   .text.validate:00000000 validate
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1509   .text.sync_window:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1515   .text.sync_window:00000000 sync_window
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1606   .text.move_window:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1612   .text.move_window:00000000 move_window
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1673   .text.check_fs:00000000 $t
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 312


C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1679   .text.check_fs:00000000 check_fs
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1764   .text.check_fs:00000070 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1771   .text.find_volume:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:1777   .text.find_volume:00000000 find_volume
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2321   .text.find_volume:000002c0 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2329   .text.put_fat:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2335   .text.put_fat:00000000 put_fat
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2533   .text.get_fat:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2539   .text.get_fat:00000000 get_fat
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2705   .text.dir_sdi:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2711   .text.dir_sdi:00000000 dir_sdi
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2867   .text.create_chain:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:2873   .text.create_chain:00000000 create_chain
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3058   .text.remove_chain:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3064   .text.remove_chain:00000000 remove_chain
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3186   .text.dir_remove:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3192   .text.dir_remove:00000000 dir_remove
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3235   .text.dir_next:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3241   .text.dir_next:00000000 dir_next
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3468   .text.dir_find:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3474   .text.dir_find:00000000 dir_find
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3560   .text.follow_path:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3566   .text.follow_path:00000000 follow_path
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3693   .text.dir_alloc:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3699   .text.dir_alloc:00000000 dir_alloc
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3791   .text.dir_register:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3797   .text.dir_register:00000000 dir_register
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3860   .text.dir_read:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3866   .text.dir_read:00000000 dir_read
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3964   .text.sync_fs:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:3970   .text.sync_fs:00000000 sync_fs
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4066   .text.sync_fs:00000084 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4072   .text.f_mount:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4079   .text.f_mount:00000000 f_mount
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4175   .text.f_mount:0000005c $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4180   .text.f_open:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4187   .text.f_open:00000000 f_open
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4613   .text.f_read:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4620   .text.f_read:00000000 f_read
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4925   .text.f_write:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:4932   .text.f_write:00000000 f_write
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5272   .text.putc_bfd:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5278   .text.putc_bfd:00000000 putc_bfd
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5368   .text.putc_flush:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5374   .text.putc_flush:00000000 putc_flush
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5442   .text.f_sync:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5449   .text.f_sync:00000000 f_sync
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5581   .text.f_close:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5588   .text.f_close:00000000 f_close
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5651   .text.f_lseek:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:5658   .text.f_lseek:00000000 f_lseek
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6183   .text.f_opendir:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6190   .text.f_opendir:00000000 f_opendir
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6330   .text.f_closedir:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6337   .text.f_closedir:00000000 f_closedir
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6395   .text.f_readdir:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6402   .text.f_readdir:00000000 f_readdir
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 313


C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6490   .text.f_stat:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6497   .text.f_stat:00000000 f_stat
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6573   .text.f_getfree:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6580   .text.f_getfree:00000000 f_getfree
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6794   .text.f_truncate:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6801   .text.f_truncate:00000000 f_truncate
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6957   .text.f_unlink:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:6964   .text.f_unlink:00000000 f_unlink
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7143   .text.f_mkdir:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7150   .text.f_mkdir:00000000 f_mkdir
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7449   .text.f_rename:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7456   .text.f_rename:00000000 f_rename
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7687   .text.f_getlabel:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7694   .text.f_getlabel:00000000 f_getlabel
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7856   .text.f_setlabel:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:7863   .text.f_setlabel:00000000 f_setlabel
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:8168   .text.f_setlabel:00000158 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:8174   .text.f_mkfs:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:8181   .text.f_mkfs:00000000 f_mkfs
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:8666   .text.f_mkfs:00000298 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:8673   .text.f_mkfs:000002a8 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9222   .text.f_mkfs:00000618 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9232   .text.f_gets:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9239   .text.f_gets:00000000 f_gets
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9331   .text.f_putc:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9338   .text.f_putc:00000000 f_putc
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9378   .text.f_puts:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9385   .text.f_puts:00000000 f_puts
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9434   .text.f_printf:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9441   .text.f_printf:00000000 f_printf
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9563   .text.f_printf:0000007e $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9939   .bss.FatFs:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9943   .bss.FatFs:00000000 FatFs
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9946   .bss.Files:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9950   .bss.Files:00000000 Files
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9953   .bss.Fsid:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9957   .bss.Fsid:00000000 Fsid
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9960   .rodata.ExCvt:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9964   .rodata.ExCvt:00000000 ExCvt
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10094  .rodata.badchr.10701:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10098  .rodata.badchr.10701:00000000 badchr.10701
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10101  .rodata.create_name.str1.4:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10105  .rodata.cst.10722:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10109  .rodata.cst.10722:00000000 cst.10722
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10118  .rodata.cst32.10723:00000000 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10122  .rodata.cst32.10723:00000000 cst32.10723
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:10131  .rodata.f_mkfs.str1.4:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9587   .text.f_printf:00000095 $d
C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s:9587   .text.f_printf:00000096 $t

UNDEFINED SYMBOLS
disk_status
disk_write
disk_read
disk_initialize
disk_ioctl
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\ccUMJuRR.s 			page 314


get_fattime
