ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bq24157.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.bq24157_register_write,"ax",%progbits
  18              		.align	1
  19              		.global	bq24157_register_write
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	bq24157_register_write:
  26              	.LFB124:
  27              		.file 1 "Lib/bq24157/bq24157.c"
   1:Lib/bq24157/bq24157.c **** #include "bq24157.h"
   2:Lib/bq24157/bq24157.c **** #include "i2c.h"
   3:Lib/bq24157/bq24157.c **** 
   4:Lib/bq24157/bq24157.c **** extern int16_t _rSense_mOhm;
   5:Lib/bq24157/bq24157.c **** 
   6:Lib/bq24157/bq24157.c **** bool bq24157_register_write(uint8_t reg, uint8_t data)
   7:Lib/bq24157/bq24157.c **** {
  28              		.loc 1 7 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
   8:Lib/bq24157/bq24157.c ****     HAL_StatusTypeDef ret;
   9:Lib/bq24157/bq24157.c ****     uint8_t i2c_data[2];
  10:Lib/bq24157/bq24157.c **** 
  11:Lib/bq24157/bq24157.c ****     i2c_data[0] = reg;
  40              		.loc 1 11 0
  41 0004 8DF80C00 		strb	r0, [sp, #12]
  12:Lib/bq24157/bq24157.c ****     i2c_data[1] = data;
  42              		.loc 1 12 0
  43 0008 8DF80D10 		strb	r1, [sp, #13]
  13:Lib/bq24157/bq24157.c **** 
  14:Lib/bq24157/bq24157.c ****     ret = HAL_I2C_Master_Transmit( &HAL_I2C_INSTANCE, (uint16_t)BQ24157_I2C_ADDRESS, i2c_data, 2, H
  44              		.loc 1 14 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 2


  45 000c 0123     		movs	r3, #1
  46 000e 0093     		str	r3, [sp]
  47 0010 0223     		movs	r3, #2
  48 0012 03AA     		add	r2, sp, #12
  49 0014 D421     		movs	r1, #212
  50              	.LVL1:
  51 0016 0548     		ldr	r0, .L6
  52              	.LVL2:
  53 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  54              	.LVL3:
  15:Lib/bq24157/bq24157.c ****     if( ret != HAL_OK )
  55              		.loc 1 15 0
  56 001c 18B9     		cbnz	r0, .L5
  16:Lib/bq24157/bq24157.c ****     {
  17:Lib/bq24157/bq24157.c ****         return false;
  18:Lib/bq24157/bq24157.c ****     }
  19:Lib/bq24157/bq24157.c **** 
  20:Lib/bq24157/bq24157.c ****     return true;
  57              		.loc 1 20 0
  58 001e 0120     		movs	r0, #1
  59              	.LVL4:
  60              	.L2:
  21:Lib/bq24157/bq24157.c **** }
  61              		.loc 1 21 0
  62 0020 05B0     		add	sp, sp, #20
  63              	.LCFI2:
  64              		.cfi_remember_state
  65              		.cfi_def_cfa_offset 4
  66              		@ sp needed
  67 0022 5DF804FB 		ldr	pc, [sp], #4
  68              	.LVL5:
  69              	.L5:
  70              	.LCFI3:
  71              		.cfi_restore_state
  17:Lib/bq24157/bq24157.c ****     }
  72              		.loc 1 17 0
  73 0026 0020     		movs	r0, #0
  74              	.LVL6:
  75 0028 FAE7     		b	.L2
  76              	.L7:
  77 002a 00BF     		.align	2
  78              	.L6:
  79 002c 00000000 		.word	hi2c2
  80              		.cfi_endproc
  81              	.LFE124:
  83              		.section	.text.bq24157_register_read,"ax",%progbits
  84              		.align	1
  85              		.global	bq24157_register_read
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	bq24157_register_read:
  92              	.LFB125:
  22:Lib/bq24157/bq24157.c **** 
  23:Lib/bq24157/bq24157.c **** bool bq24157_register_read(uint8_t reg, uint8_t *data)
  24:Lib/bq24157/bq24157.c **** {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 3


  93              		.loc 1 24 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              	.LVL7:
  98 0000 10B5     		push	{r4, lr}
  99              	.LCFI4:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 4, -8
 102              		.cfi_offset 14, -4
 103 0002 84B0     		sub	sp, sp, #16
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 24
 106 0004 0C46     		mov	r4, r1
 107 0006 04AA     		add	r2, sp, #16
 108 0008 02F8010D 		strb	r0, [r2, #-1]!
  25:Lib/bq24157/bq24157.c ****     HAL_StatusTypeDef ret;
  26:Lib/bq24157/bq24157.c ****     
  27:Lib/bq24157/bq24157.c ****     ret = HAL_I2C_Master_Transmit( &HAL_I2C_INSTANCE, (uint16_t)BQ24157_I2C_ADDRESS, &reg, 1, HAL_B
 109              		.loc 1 27 0
 110 000c 0123     		movs	r3, #1
 111 000e 0093     		str	r3, [sp]
 112 0010 D421     		movs	r1, #212
 113              	.LVL8:
 114 0012 0948     		ldr	r0, .L15
 115              	.LVL9:
 116 0014 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 117              	.LVL10:
  28:Lib/bq24157/bq24157.c ****     if( ret != HAL_OK )
 118              		.loc 1 28 0
 119 0018 10B1     		cbz	r0, .L13
  29:Lib/bq24157/bq24157.c ****     {
  30:Lib/bq24157/bq24157.c ****         return false;
 120              		.loc 1 30 0
 121 001a 0020     		movs	r0, #0
 122              	.LVL11:
 123              	.L9:
  31:Lib/bq24157/bq24157.c ****     }
  32:Lib/bq24157/bq24157.c **** 
  33:Lib/bq24157/bq24157.c ****     ret = HAL_I2C_Master_Receive( &HAL_I2C_INSTANCE, (uint16_t)BQ24157_I2C_ADDRESS, data, 1, HAL_BQ
  34:Lib/bq24157/bq24157.c ****     if(ret != HAL_OK )
  35:Lib/bq24157/bq24157.c ****     {
  36:Lib/bq24157/bq24157.c ****         return false;
  37:Lib/bq24157/bq24157.c ****     }
  38:Lib/bq24157/bq24157.c ****     
  39:Lib/bq24157/bq24157.c ****     return true;
  40:Lib/bq24157/bq24157.c **** }
 124              		.loc 1 40 0
 125 001c 04B0     		add	sp, sp, #16
 126              	.LCFI6:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 8
 129              		@ sp needed
 130 001e 10BD     		pop	{r4, pc}
 131              	.LVL12:
 132              	.L13:
 133              	.LCFI7:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 4


 134              		.cfi_restore_state
  33:Lib/bq24157/bq24157.c ****     if(ret != HAL_OK )
 135              		.loc 1 33 0
 136 0020 0123     		movs	r3, #1
 137 0022 0093     		str	r3, [sp]
 138 0024 2246     		mov	r2, r4
 139 0026 D421     		movs	r1, #212
 140 0028 0348     		ldr	r0, .L15
 141              	.LVL13:
 142 002a FFF7FEFF 		bl	HAL_I2C_Master_Receive
 143              	.LVL14:
  34:Lib/bq24157/bq24157.c ****     {
 144              		.loc 1 34 0
 145 002e 08B9     		cbnz	r0, .L14
  39:Lib/bq24157/bq24157.c **** }
 146              		.loc 1 39 0
 147 0030 0120     		movs	r0, #1
 148              	.LVL15:
 149 0032 F3E7     		b	.L9
 150              	.LVL16:
 151              	.L14:
  36:Lib/bq24157/bq24157.c ****     }
 152              		.loc 1 36 0
 153 0034 0020     		movs	r0, #0
 154              	.LVL17:
 155 0036 F1E7     		b	.L9
 156              	.L16:
 157              		.align	2
 158              	.L15:
 159 0038 00000000 		.word	hi2c2
 160              		.cfi_endproc
 161              	.LFE125:
 163              		.section	.text.bq24157_setRSense,"ax",%progbits
 164              		.align	1
 165              		.global	bq24157_setRSense
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	bq24157_setRSense:
 172              	.LFB128:
  41:Lib/bq24157/bq24157.c **** 
  42:Lib/bq24157/bq24157.c **** bool bq24157_init( uint16_t rsense_mohm, uint16_t batVoltage_mV, uint16_t chargeCurrent_mA )
  43:Lib/bq24157/bq24157.c **** {
  44:Lib/bq24157/bq24157.c ****     if( !bq24157_setReset() )
  45:Lib/bq24157/bq24157.c ****     {
  46:Lib/bq24157/bq24157.c ****         return false;
  47:Lib/bq24157/bq24157.c ****     }
  48:Lib/bq24157/bq24157.c **** 
  49:Lib/bq24157/bq24157.c ****     if( !bq24157_setRSense( rsense_mohm ) )
  50:Lib/bq24157/bq24157.c ****     {
  51:Lib/bq24157/bq24157.c ****         return false;
  52:Lib/bq24157/bq24157.c ****     }
  53:Lib/bq24157/bq24157.c **** 
  54:Lib/bq24157/bq24157.c ****     if( !bq24157_setBatteryRegulationVoltage( batVoltage_mV ) )
  55:Lib/bq24157/bq24157.c ****     {
  56:Lib/bq24157/bq24157.c ****         return false;
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 5


  57:Lib/bq24157/bq24157.c ****     }
  58:Lib/bq24157/bq24157.c **** 
  59:Lib/bq24157/bq24157.c ****     if( !bq24157_setChargeCurrentSenseVoltage( ( chargeCurrent_mA * rsense_mohm ) / 100 ) )
  60:Lib/bq24157/bq24157.c ****     {
  61:Lib/bq24157/bq24157.c ****         return false;
  62:Lib/bq24157/bq24157.c ****     }
  63:Lib/bq24157/bq24157.c **** 
  64:Lib/bq24157/bq24157.c ****     if( !bq24157_setInputCurrentLimit( BQ24157_INPUT_CURRENT_500MA ) )
  65:Lib/bq24157/bq24157.c ****     {
  66:Lib/bq24157/bq24157.c ****         return false;
  67:Lib/bq24157/bq24157.c ****     }
  68:Lib/bq24157/bq24157.c **** 
  69:Lib/bq24157/bq24157.c ****     if( !bq24157_setTermCurrentSenseVoltage( 34 ) )
  70:Lib/bq24157/bq24157.c ****     {
  71:Lib/bq24157/bq24157.c ****         return false;
  72:Lib/bq24157/bq24157.c ****     }
  73:Lib/bq24157/bq24157.c **** 
  74:Lib/bq24157/bq24157.c ****     if( !bq24157_setChargeCurrentTerm( true ) )
  75:Lib/bq24157/bq24157.c ****     {
  76:Lib/bq24157/bq24157.c ****         return false;
  77:Lib/bq24157/bq24157.c ****     }
  78:Lib/bq24157/bq24157.c **** 
  79:Lib/bq24157/bq24157.c ****     if( !bq24157_setWeakBatteryThreshold( 3500 ) )
  80:Lib/bq24157/bq24157.c ****     {
  81:Lib/bq24157/bq24157.c ****         return false;
  82:Lib/bq24157/bq24157.c ****     }
  83:Lib/bq24157/bq24157.c **** 
  84:Lib/bq24157/bq24157.c ****     return true;
  85:Lib/bq24157/bq24157.c **** }
  86:Lib/bq24157/bq24157.c **** 
  87:Lib/bq24157/bq24157.c **** bool bq24157_update( bq24157_info *charger )
  88:Lib/bq24157/bq24157.c **** {
  89:Lib/bq24157/bq24157.c ****     int16_t value;
  90:Lib/bq24157/bq24157.c ****     BQ24157_STAT_TYPE status;
  91:Lib/bq24157/bq24157.c ****     BQ24157_FAULT_TYPE fault;
  92:Lib/bq24157/bq24157.c ****     
  93:Lib/bq24157/bq24157.c ****     if( _rSense_mOhm <= 0 )
  94:Lib/bq24157/bq24157.c ****     {
  95:Lib/bq24157/bq24157.c ****         return false;
  96:Lib/bq24157/bq24157.c ****     }
  97:Lib/bq24157/bq24157.c ****     charger->rSense_mOhm = _rSense_mOhm;
  98:Lib/bq24157/bq24157.c **** 
  99:Lib/bq24157/bq24157.c ****     value = bq24157_getChargeCurrentSenseVoltage();
 100:Lib/bq24157/bq24157.c ****     if( value < 0 )
 101:Lib/bq24157/bq24157.c ****     {
 102:Lib/bq24157/bq24157.c ****         return false;
 103:Lib/bq24157/bq24157.c ****     }
 104:Lib/bq24157/bq24157.c ****     charger->chargeCurrent_mA = ( ( (uint16_t)(value * 10 ) / charger->rSense_mOhm ) * 10 );
 105:Lib/bq24157/bq24157.c **** 
 106:Lib/bq24157/bq24157.c ****     value = bq24157_getTermCurrentSenseVoltage();
 107:Lib/bq24157/bq24157.c ****     if( value < 0 )
 108:Lib/bq24157/bq24157.c ****     {
 109:Lib/bq24157/bq24157.c ****         return false;
 110:Lib/bq24157/bq24157.c ****     }
 111:Lib/bq24157/bq24157.c ****     charger->terminationCurrent_mA = ( ( (uint16_t)( value * 10 ) / charger->rSense_mOhm ) * 10 );
 112:Lib/bq24157/bq24157.c **** 
 113:Lib/bq24157/bq24157.c ****     value = bq24157_getWeakBatteryThreshold();
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 6


 114:Lib/bq24157/bq24157.c ****     if( value < 0 )
 115:Lib/bq24157/bq24157.c ****     {
 116:Lib/bq24157/bq24157.c ****         return false;
 117:Lib/bq24157/bq24157.c ****     }
 118:Lib/bq24157/bq24157.c ****     charger->lowBatteryThreshold_mV = (uint16_t)(value);
 119:Lib/bq24157/bq24157.c **** 
 120:Lib/bq24157/bq24157.c ****     switch( bq24157_getInputCurrentLimit() )
 121:Lib/bq24157/bq24157.c ****     {
 122:Lib/bq24157/bq24157.c ****         case BQ24157_INPUT_CURRENT_100MA:
 123:Lib/bq24157/bq24157.c ****         {
 124:Lib/bq24157/bq24157.c ****             charger->inputCurrentLimit_mA = 100;
 125:Lib/bq24157/bq24157.c ****             break;
 126:Lib/bq24157/bq24157.c ****         }
 127:Lib/bq24157/bq24157.c ****         case BQ24157_INPUT_CURRENT_500MA:
 128:Lib/bq24157/bq24157.c ****         {
 129:Lib/bq24157/bq24157.c ****             charger->inputCurrentLimit_mA = 500;
 130:Lib/bq24157/bq24157.c ****             break;
 131:Lib/bq24157/bq24157.c ****         }
 132:Lib/bq24157/bq24157.c ****         case BQ24157_INPUT_CURRENT_800MA:
 133:Lib/bq24157/bq24157.c ****         {
 134:Lib/bq24157/bq24157.c ****             charger->inputCurrentLimit_mA = 800;
 135:Lib/bq24157/bq24157.c ****             break;
 136:Lib/bq24157/bq24157.c ****         }
 137:Lib/bq24157/bq24157.c ****         case BQ24157_INPUT_CURRENT_NO_LIMIT:
 138:Lib/bq24157/bq24157.c ****         {
 139:Lib/bq24157/bq24157.c ****             charger->inputCurrentLimit_mA = 0;
 140:Lib/bq24157/bq24157.c ****             break;
 141:Lib/bq24157/bq24157.c ****         }
 142:Lib/bq24157/bq24157.c ****         default:
 143:Lib/bq24157/bq24157.c ****         {
 144:Lib/bq24157/bq24157.c ****             return false;
 145:Lib/bq24157/bq24157.c ****         }
 146:Lib/bq24157/bq24157.c ****     }
 147:Lib/bq24157/bq24157.c **** 
 148:Lib/bq24157/bq24157.c ****     value = bq24157_getBatteryRegulationVoltage();
 149:Lib/bq24157/bq24157.c ****     if( value < 0 )
 150:Lib/bq24157/bq24157.c ****     {
 151:Lib/bq24157/bq24157.c ****         return false;
 152:Lib/bq24157/bq24157.c ****     }
 153:Lib/bq24157/bq24157.c ****     charger->batteryRegulationVoltage_mV = (uint16_t)(value);
 154:Lib/bq24157/bq24157.c **** 
 155:Lib/bq24157/bq24157.c ****     value = bq24157_getSpecialChargerVoltage();
 156:Lib/bq24157/bq24157.c ****     if( value < 0 )
 157:Lib/bq24157/bq24157.c ****     {
 158:Lib/bq24157/bq24157.c ****         return false;
 159:Lib/bq24157/bq24157.c ****     }
 160:Lib/bq24157/bq24157.c ****     charger->specialChargeVoltage_mV = (uint16_t)(value);
 161:Lib/bq24157/bq24157.c **** 
 162:Lib/bq24157/bq24157.c ****     value = bq24157_getMaxBatteryRegulationVoltage();
 163:Lib/bq24157/bq24157.c ****     if( value < 0 )
 164:Lib/bq24157/bq24157.c ****     {
 165:Lib/bq24157/bq24157.c ****         return false;
 166:Lib/bq24157/bq24157.c ****     }
 167:Lib/bq24157/bq24157.c ****     charger->maxBatteryRegulationVoltage_mV = (uint16_t)(value);
 168:Lib/bq24157/bq24157.c **** 
 169:Lib/bq24157/bq24157.c ****     value = bq24157_getMaxChargeCurrentSenseVoltage();
 170:Lib/bq24157/bq24157.c ****     if( value < 0 )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 7


 171:Lib/bq24157/bq24157.c ****     {
 172:Lib/bq24157/bq24157.c ****         return false;
 173:Lib/bq24157/bq24157.c ****     }
 174:Lib/bq24157/bq24157.c ****     charger->maxChargeCurrent_mA = ( ( (uint16_t)(value) * 10 / charger->rSense_mOhm ) * 10 );
 175:Lib/bq24157/bq24157.c **** 
 176:Lib/bq24157/bq24157.c ****     value = bq24157_getChargerEnable();
 177:Lib/bq24157/bq24157.c ****     if( value < 0 )
 178:Lib/bq24157/bq24157.c ****     {
 179:Lib/bq24157/bq24157.c ****         return false;
 180:Lib/bq24157/bq24157.c ****     }
 181:Lib/bq24157/bq24157.c ****     charger->isEnabled = !value;
 182:Lib/bq24157/bq24157.c **** 
 183:Lib/bq24157/bq24157.c ****     value = bq24157_getBoostMode();
 184:Lib/bq24157/bq24157.c ****     if( value < 0 )
 185:Lib/bq24157/bq24157.c ****     {
 186:Lib/bq24157/bq24157.c ****         return false;
 187:Lib/bq24157/bq24157.c ****     }
 188:Lib/bq24157/bq24157.c ****     charger->isBoosting = value;
 189:Lib/bq24157/bq24157.c **** 
 190:Lib/bq24157/bq24157.c ****     value = bq24157_getOtgPinStatus();
 191:Lib/bq24157/bq24157.c ****     if( value < 0 )
 192:Lib/bq24157/bq24157.c ****     {
 193:Lib/bq24157/bq24157.c ****         return false;
 194:Lib/bq24157/bq24157.c ****     }
 195:Lib/bq24157/bq24157.c ****     charger->otgPinStatus = value;
 196:Lib/bq24157/bq24157.c **** 
 197:Lib/bq24157/bq24157.c ****     status = bq24157_getStatus();
 198:Lib/bq24157/bq24157.c ****     if( status == BQ24157_ERROR )
 199:Lib/bq24157/bq24157.c ****     {
 200:Lib/bq24157/bq24157.c ****         return false;
 201:Lib/bq24157/bq24157.c ****     }
 202:Lib/bq24157/bq24157.c ****     charger->status = status;
 203:Lib/bq24157/bq24157.c **** 
 204:Lib/bq24157/bq24157.c ****     if( charger->status == BQ24157_STAT_CHARGING )
 205:Lib/bq24157/bq24157.c ****     {
 206:Lib/bq24157/bq24157.c ****         charger->isCharging = true;
 207:Lib/bq24157/bq24157.c ****     }
 208:Lib/bq24157/bq24157.c ****     else
 209:Lib/bq24157/bq24157.c ****     {
 210:Lib/bq24157/bq24157.c ****         charger->isCharging = false;
 211:Lib/bq24157/bq24157.c ****     }
 212:Lib/bq24157/bq24157.c **** 
 213:Lib/bq24157/bq24157.c ****     fault = bq24157_getFault();
 214:Lib/bq24157/bq24157.c ****     if( fault == BQ24157_FAULT_ERROR )
 215:Lib/bq24157/bq24157.c ****     {
 216:Lib/bq24157/bq24157.c ****         return false;
 217:Lib/bq24157/bq24157.c ****     }
 218:Lib/bq24157/bq24157.c ****     charger->fault = fault;
 219:Lib/bq24157/bq24157.c ****     
 220:Lib/bq24157/bq24157.c ****     return true;
 221:Lib/bq24157/bq24157.c **** }
 222:Lib/bq24157/bq24157.c **** 
 223:Lib/bq24157/bq24157.c **** bool bq24157_setRSense(uint16_t rsense_mohm)
 224:Lib/bq24157/bq24157.c **** {
 173              		.loc 1 224 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 8


 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL18:
 225:Lib/bq24157/bq24157.c ****     // Range check Rsense value.  Minimum value is 55 mOhm (1.55A max charge current), there
 226:Lib/bq24157/bq24157.c ****     // is no theoretical minimum for charge current, therefor no maximum value so the uint16_t
 227:Lib/bq24157/bq24157.c ****     // max of 65535 is arbitary chosen
 228:Lib/bq24157/bq24157.c **** 
 229:Lib/bq24157/bq24157.c ****     if( rsense_mohm <= 55 )
 179              		.loc 1 229 0
 180 0000 3728     		cmp	r0, #55
 181 0002 03D9     		bls	.L19
 230:Lib/bq24157/bq24157.c ****     {
 231:Lib/bq24157/bq24157.c ****         return false;
 232:Lib/bq24157/bq24157.c ****     }
 233:Lib/bq24157/bq24157.c **** 
 234:Lib/bq24157/bq24157.c ****     _rSense_mOhm = rsense_mohm;
 182              		.loc 1 234 0
 183 0004 024B     		ldr	r3, .L20
 184 0006 1880     		strh	r0, [r3]	@ movhi
 235:Lib/bq24157/bq24157.c **** 
 236:Lib/bq24157/bq24157.c ****     return true;
 185              		.loc 1 236 0
 186 0008 0120     		movs	r0, #1
 187              	.LVL19:
 188 000a 7047     		bx	lr
 189              	.LVL20:
 190              	.L19:
 231:Lib/bq24157/bq24157.c ****     }
 191              		.loc 1 231 0
 192 000c 0020     		movs	r0, #0
 193              	.LVL21:
 237:Lib/bq24157/bq24157.c **** }
 194              		.loc 1 237 0
 195 000e 7047     		bx	lr
 196              	.L21:
 197              		.align	2
 198              	.L20:
 199 0010 00000000 		.word	_rSense_mOhm
 200              		.cfi_endproc
 201              	.LFE128:
 203              		.section	.text.bq24157_getRSense,"ax",%progbits
 204              		.align	1
 205              		.global	bq24157_getRSense
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	bq24157_getRSense:
 212              	.LFB129:
 238:Lib/bq24157/bq24157.c **** 
 239:Lib/bq24157/bq24157.c **** int16_t bq24157_getRSense(void)
 240:Lib/bq24157/bq24157.c **** {
 213              		.loc 1 240 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 9


 241:Lib/bq24157/bq24157.c ****     return _rSense_mOhm;
 242:Lib/bq24157/bq24157.c **** }
 218              		.loc 1 242 0
 219 0000 014B     		ldr	r3, .L23
 220 0002 B3F90000 		ldrsh	r0, [r3]
 221 0006 7047     		bx	lr
 222              	.L24:
 223              		.align	2
 224              	.L23:
 225 0008 00000000 		.word	_rSense_mOhm
 226              		.cfi_endproc
 227              	.LFE129:
 229              		.section	.text.bq24157_resetSafteyTimer,"ax",%progbits
 230              		.align	1
 231              		.global	bq24157_resetSafteyTimer
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	bq24157_resetSafteyTimer:
 238              	.LFB130:
 243:Lib/bq24157/bq24157.c **** 
 244:Lib/bq24157/bq24157.c **** bool bq24157_resetSafteyTimer(void)
 245:Lib/bq24157/bq24157.c **** {
 239              		.loc 1 245 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 00B5     		push	{lr}
 244              	.LCFI8:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 14, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI9:
 249              		.cfi_def_cfa_offset 16
 246:Lib/bq24157/bq24157.c ****     uint8_t temp;
 247:Lib/bq24157/bq24157.c **** 
 248:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 249:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 250              		.loc 1 249 0
 251 0004 0DF10701 		add	r1, sp, #7
 252 0008 0020     		movs	r0, #0
 253 000a FFF7FEFF 		bl	bq24157_register_read
 254              	.LVL22:
 255 000e 0346     		mov	r3, r0
 256 0010 18B9     		cbnz	r0, .L28
 257              	.L26:
 250:Lib/bq24157/bq24157.c ****     {
 251:Lib/bq24157/bq24157.c ****         return false;
 252:Lib/bq24157/bq24157.c ****     }
 253:Lib/bq24157/bq24157.c **** 
 254:Lib/bq24157/bq24157.c ****     // Set B7
 255:Lib/bq24157/bq24157.c ****     temp = temp | 0x80;
 256:Lib/bq24157/bq24157.c **** 
 257:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x00
 258:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_STATUS_CONTROL_REG, temp ) )
 259:Lib/bq24157/bq24157.c ****     {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 10


 260:Lib/bq24157/bq24157.c ****         return false;
 261:Lib/bq24157/bq24157.c ****     }
 262:Lib/bq24157/bq24157.c **** 
 263:Lib/bq24157/bq24157.c ****     return true;
 264:Lib/bq24157/bq24157.c **** }
 258              		.loc 1 264 0
 259 0012 1846     		mov	r0, r3
 260 0014 03B0     		add	sp, sp, #12
 261              	.LCFI10:
 262              		.cfi_remember_state
 263              		.cfi_def_cfa_offset 4
 264              		@ sp needed
 265 0016 5DF804FB 		ldr	pc, [sp], #4
 266              	.L28:
 267              	.LCFI11:
 268              		.cfi_restore_state
 255:Lib/bq24157/bq24157.c **** 
 269              		.loc 1 255 0
 270 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 271 001e 41F08001 		orr	r1, r1, #128
 272 0022 8DF80710 		strb	r1, [sp, #7]
 258:Lib/bq24157/bq24157.c ****     {
 273              		.loc 1 258 0
 274 0026 0020     		movs	r0, #0
 275 0028 FFF7FEFF 		bl	bq24157_register_write
 276              	.LVL23:
 277 002c 0346     		mov	r3, r0
 278 002e F0E7     		b	.L26
 279              		.cfi_endproc
 280              	.LFE130:
 282              		.section	.text.bq24157_getOtgPinStatus,"ax",%progbits
 283              		.align	1
 284              		.global	bq24157_getOtgPinStatus
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	bq24157_getOtgPinStatus:
 291              	.LFB131:
 265:Lib/bq24157/bq24157.c **** 
 266:Lib/bq24157/bq24157.c **** int8_t bq24157_getOtgPinStatus(void)
 267:Lib/bq24157/bq24157.c **** {
 292              		.loc 1 267 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 00B5     		push	{lr}
 297              	.LCFI12:
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 14, -4
 300 0002 83B0     		sub	sp, sp, #12
 301              	.LCFI13:
 302              		.cfi_def_cfa_offset 16
 268:Lib/bq24157/bq24157.c ****     uint8_t temp;
 269:Lib/bq24157/bq24157.c **** 
 270:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 271:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 11


 303              		.loc 1 271 0
 304 0004 0DF10701 		add	r1, sp, #7
 305 0008 0020     		movs	r0, #0
 306 000a FFF7FEFF 		bl	bq24157_register_read
 307              	.LVL24:
 308 000e 48B1     		cbz	r0, .L31
 272:Lib/bq24157/bq24157.c ****     {
 273:Lib/bq24157/bq24157.c ****         return -1;
 274:Lib/bq24157/bq24157.c ****     }
 275:Lib/bq24157/bq24157.c **** 
 276:Lib/bq24157/bq24157.c ****     // Check B7
 277:Lib/bq24157/bq24157.c ****     if( ( temp & 0x80 ) != 0 )
 309              		.loc 1 277 0
 310 0010 9DF90730 		ldrsb	r3, [sp, #7]
 311 0014 002B     		cmp	r3, #0
 312 0016 03DB     		blt	.L34
 278:Lib/bq24157/bq24157.c ****     {   // B7 is set
 279:Lib/bq24157/bq24157.c ****         return true;
 280:Lib/bq24157/bq24157.c ****     }
 281:Lib/bq24157/bq24157.c ****     else
 282:Lib/bq24157/bq24157.c ****     {   // B7 is clear
 283:Lib/bq24157/bq24157.c ****         return false;
 313              		.loc 1 283 0
 314 0018 0020     		movs	r0, #0
 315              	.L30:
 284:Lib/bq24157/bq24157.c ****     }
 285:Lib/bq24157/bq24157.c **** }
 316              		.loc 1 285 0
 317 001a 03B0     		add	sp, sp, #12
 318              	.LCFI14:
 319              		.cfi_remember_state
 320              		.cfi_def_cfa_offset 4
 321              		@ sp needed
 322 001c 5DF804FB 		ldr	pc, [sp], #4
 323              	.L34:
 324              	.LCFI15:
 325              		.cfi_restore_state
 279:Lib/bq24157/bq24157.c ****     }
 326              		.loc 1 279 0
 327 0020 0120     		movs	r0, #1
 328 0022 FAE7     		b	.L30
 329              	.L31:
 273:Lib/bq24157/bq24157.c ****     }
 330              		.loc 1 273 0
 331 0024 4FF0FF30 		mov	r0, #-1
 332 0028 F7E7     		b	.L30
 333              		.cfi_endproc
 334              	.LFE131:
 336              		.section	.text.bq24157_getStatPinFunction,"ax",%progbits
 337              		.align	1
 338              		.global	bq24157_getStatPinFunction
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	bq24157_getStatPinFunction:
 345              	.LFB132:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 12


 286:Lib/bq24157/bq24157.c **** 
 287:Lib/bq24157/bq24157.c **** int8_t bq24157_getStatPinFunction(void)
 288:Lib/bq24157/bq24157.c **** {
 346              		.loc 1 288 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 00B5     		push	{lr}
 351              	.LCFI16:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 14, -4
 354 0002 83B0     		sub	sp, sp, #12
 355              	.LCFI17:
 356              		.cfi_def_cfa_offset 16
 289:Lib/bq24157/bq24157.c ****     uint8_t temp;
 290:Lib/bq24157/bq24157.c **** 
 291:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 292:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 357              		.loc 1 292 0
 358 0004 0DF10701 		add	r1, sp, #7
 359 0008 0020     		movs	r0, #0
 360 000a FFF7FEFF 		bl	bq24157_register_read
 361              	.LVL25:
 362 000e 50B1     		cbz	r0, .L37
 293:Lib/bq24157/bq24157.c ****     {
 294:Lib/bq24157/bq24157.c ****         return -1;
 295:Lib/bq24157/bq24157.c ****     }
 296:Lib/bq24157/bq24157.c **** 
 297:Lib/bq24157/bq24157.c ****     // Check B6
 298:Lib/bq24157/bq24157.c ****     if( ( temp & 0x40 ) != 0 )
 363              		.loc 1 298 0
 364 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 365 0014 13F0400F 		tst	r3, #64
 366 0018 03D1     		bne	.L40
 299:Lib/bq24157/bq24157.c ****     {   // B6 is set
 300:Lib/bq24157/bq24157.c ****         return true;
 301:Lib/bq24157/bq24157.c ****     }
 302:Lib/bq24157/bq24157.c ****     else
 303:Lib/bq24157/bq24157.c ****     {   // B6 is clear
 304:Lib/bq24157/bq24157.c ****         return false;
 367              		.loc 1 304 0
 368 001a 0020     		movs	r0, #0
 369              	.L36:
 305:Lib/bq24157/bq24157.c ****     }
 306:Lib/bq24157/bq24157.c **** }
 370              		.loc 1 306 0
 371 001c 03B0     		add	sp, sp, #12
 372              	.LCFI18:
 373              		.cfi_remember_state
 374              		.cfi_def_cfa_offset 4
 375              		@ sp needed
 376 001e 5DF804FB 		ldr	pc, [sp], #4
 377              	.L40:
 378              	.LCFI19:
 379              		.cfi_restore_state
 300:Lib/bq24157/bq24157.c ****     }
 380              		.loc 1 300 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 13


 381 0022 0120     		movs	r0, #1
 382 0024 FAE7     		b	.L36
 383              	.L37:
 294:Lib/bq24157/bq24157.c ****     }
 384              		.loc 1 294 0
 385 0026 4FF0FF30 		mov	r0, #-1
 386 002a F7E7     		b	.L36
 387              		.cfi_endproc
 388              	.LFE132:
 390              		.section	.text.bq24157_setStatPinFunction,"ax",%progbits
 391              		.align	1
 392              		.global	bq24157_setStatPinFunction
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	bq24157_setStatPinFunction:
 399              	.LFB133:
 307:Lib/bq24157/bq24157.c **** 
 308:Lib/bq24157/bq24157.c **** bool bq24157_setStatPinFunction(bool status)
 309:Lib/bq24157/bq24157.c **** {
 400              		.loc 1 309 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              	.LVL26:
 405 0000 10B5     		push	{r4, lr}
 406              	.LCFI20:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 410 0002 82B0     		sub	sp, sp, #8
 411              	.LCFI21:
 412              		.cfi_def_cfa_offset 16
 413 0004 0446     		mov	r4, r0
 310:Lib/bq24157/bq24157.c ****     uint8_t temp;
 311:Lib/bq24157/bq24157.c **** 
 312:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 313:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 414              		.loc 1 313 0
 415 0006 0DF10701 		add	r1, sp, #7
 416 000a 0020     		movs	r0, #0
 417              	.LVL27:
 418 000c FFF7FEFF 		bl	bq24157_register_read
 419              	.LVL28:
 420 0010 0346     		mov	r3, r0
 421 0012 10B9     		cbnz	r0, .L44
 422              	.L42:
 314:Lib/bq24157/bq24157.c ****     {
 315:Lib/bq24157/bq24157.c ****         return false;
 316:Lib/bq24157/bq24157.c ****     }
 317:Lib/bq24157/bq24157.c **** 
 318:Lib/bq24157/bq24157.c ****     // Set B6
 319:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 6, status );
 320:Lib/bq24157/bq24157.c **** 
 321:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x00
 322:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_STATUS_CONTROL_REG, temp ) )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 14


 323:Lib/bq24157/bq24157.c ****     {
 324:Lib/bq24157/bq24157.c ****         return false;
 325:Lib/bq24157/bq24157.c ****     }
 326:Lib/bq24157/bq24157.c **** 
 327:Lib/bq24157/bq24157.c ****     return true;
 328:Lib/bq24157/bq24157.c **** }
 423              		.loc 1 328 0
 424 0014 1846     		mov	r0, r3
 425 0016 02B0     		add	sp, sp, #8
 426              	.LCFI22:
 427              		.cfi_remember_state
 428              		.cfi_def_cfa_offset 8
 429              		@ sp needed
 430 0018 10BD     		pop	{r4, pc}
 431              	.L44:
 432              	.LCFI23:
 433              		.cfi_restore_state
 319:Lib/bq24157/bq24157.c **** 
 434              		.loc 1 319 0
 435 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 436 001e 01F0BF01 		and	r1, r1, #191
 437 0022 6442     		negs	r4, r4
 438 0024 04F04004 		and	r4, r4, #64
 439 0028 2143     		orrs	r1, r1, r4
 440 002a 8DF80710 		strb	r1, [sp, #7]
 322:Lib/bq24157/bq24157.c ****     {
 441              		.loc 1 322 0
 442 002e 0020     		movs	r0, #0
 443 0030 FFF7FEFF 		bl	bq24157_register_write
 444              	.LVL29:
 445 0034 0346     		mov	r3, r0
 446 0036 EDE7     		b	.L42
 447              		.cfi_endproc
 448              	.LFE133:
 450              		.section	.text.bq24157_getStatus,"ax",%progbits
 451              		.align	1
 452              		.global	bq24157_getStatus
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	bq24157_getStatus:
 459              	.LFB134:
 329:Lib/bq24157/bq24157.c **** 
 330:Lib/bq24157/bq24157.c **** BQ24157_STAT_TYPE bq24157_getStatus(void)
 331:Lib/bq24157/bq24157.c **** {
 460              		.loc 1 331 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 00B5     		push	{lr}
 465              	.LCFI24:
 466              		.cfi_def_cfa_offset 4
 467              		.cfi_offset 14, -4
 468 0002 83B0     		sub	sp, sp, #12
 469              	.LCFI25:
 470              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 15


 332:Lib/bq24157/bq24157.c ****     uint8_t temp;
 333:Lib/bq24157/bq24157.c **** 
 334:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 335:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 471              		.loc 1 335 0
 472 0004 0DF10701 		add	r1, sp, #7
 473 0008 0020     		movs	r0, #0
 474 000a FFF7FEFF 		bl	bq24157_register_read
 475              	.LVL30:
 476 000e 30B1     		cbz	r0, .L47
 336:Lib/bq24157/bq24157.c ****     {
 337:Lib/bq24157/bq24157.c ****         return -1;
 338:Lib/bq24157/bq24157.c ****     }
 339:Lib/bq24157/bq24157.c **** 
 340:Lib/bq24157/bq24157.c ****     return( (BQ24157_STAT_TYPE)( ( temp >> 4 ) & 0x03 ) );
 477              		.loc 1 340 0
 478 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 479 0014 C0F30110 		ubfx	r0, r0, #4, #2
 480              	.L46:
 341:Lib/bq24157/bq24157.c **** }
 481              		.loc 1 341 0
 482 0018 03B0     		add	sp, sp, #12
 483              	.LCFI26:
 484              		.cfi_remember_state
 485              		.cfi_def_cfa_offset 4
 486              		@ sp needed
 487 001a 5DF804FB 		ldr	pc, [sp], #4
 488              	.L47:
 489              	.LCFI27:
 490              		.cfi_restore_state
 337:Lib/bq24157/bq24157.c ****     }
 491              		.loc 1 337 0
 492 001e 4FF0FF30 		mov	r0, #-1
 493 0022 F9E7     		b	.L46
 494              		.cfi_endproc
 495              	.LFE134:
 497              		.section	.text.bq24157_getBoostMode,"ax",%progbits
 498              		.align	1
 499              		.global	bq24157_getBoostMode
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	bq24157_getBoostMode:
 506              	.LFB135:
 342:Lib/bq24157/bq24157.c **** 
 343:Lib/bq24157/bq24157.c **** int8_t bq24157_getBoostMode(void)
 344:Lib/bq24157/bq24157.c **** {
 507              		.loc 1 344 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 00B5     		push	{lr}
 512              	.LCFI28:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 14, -4
 515 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 16


 516              	.LCFI29:
 517              		.cfi_def_cfa_offset 16
 345:Lib/bq24157/bq24157.c ****     uint8_t temp;
 346:Lib/bq24157/bq24157.c **** 
 347:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 348:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 518              		.loc 1 348 0
 519 0004 0DF10701 		add	r1, sp, #7
 520 0008 0020     		movs	r0, #0
 521 000a FFF7FEFF 		bl	bq24157_register_read
 522              	.LVL31:
 523 000e 30B1     		cbz	r0, .L51
 349:Lib/bq24157/bq24157.c ****     {
 350:Lib/bq24157/bq24157.c ****         return -1;
 351:Lib/bq24157/bq24157.c ****     }
 352:Lib/bq24157/bq24157.c **** 
 353:Lib/bq24157/bq24157.c ****     return( ( temp >> 3 ) & 0x01  );
 524              		.loc 1 353 0
 525 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 526 0014 C0F3C000 		ubfx	r0, r0, #3, #1
 527              	.L50:
 354:Lib/bq24157/bq24157.c **** }
 528              		.loc 1 354 0
 529 0018 03B0     		add	sp, sp, #12
 530              	.LCFI30:
 531              		.cfi_remember_state
 532              		.cfi_def_cfa_offset 4
 533              		@ sp needed
 534 001a 5DF804FB 		ldr	pc, [sp], #4
 535              	.L51:
 536              	.LCFI31:
 537              		.cfi_restore_state
 350:Lib/bq24157/bq24157.c ****     }
 538              		.loc 1 350 0
 539 001e 4FF0FF30 		mov	r0, #-1
 540 0022 F9E7     		b	.L50
 541              		.cfi_endproc
 542              	.LFE135:
 544              		.section	.text.bq24157_getFault,"ax",%progbits
 545              		.align	1
 546              		.global	bq24157_getFault
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	bq24157_getFault:
 553              	.LFB136:
 355:Lib/bq24157/bq24157.c **** 
 356:Lib/bq24157/bq24157.c **** BQ24157_FAULT_TYPE bq24157_getFault(void)
 357:Lib/bq24157/bq24157.c **** {
 554              		.loc 1 357 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 8
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 00B5     		push	{lr}
 559              	.LCFI32:
 560              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 17


 561              		.cfi_offset 14, -4
 562 0002 83B0     		sub	sp, sp, #12
 563              	.LCFI33:
 564              		.cfi_def_cfa_offset 16
 358:Lib/bq24157/bq24157.c ****     uint8_t temp;
 359:Lib/bq24157/bq24157.c **** 
 360:Lib/bq24157/bq24157.c ****     // Read register memory location 0x00
 361:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_STATUS_CONTROL_REG, &temp ) )
 565              		.loc 1 361 0
 566 0004 0DF10701 		add	r1, sp, #7
 567 0008 0020     		movs	r0, #0
 568 000a FFF7FEFF 		bl	bq24157_register_read
 569              	.LVL32:
 570 000e A0B1     		cbz	r0, .L56
 362:Lib/bq24157/bq24157.c ****     {
 363:Lib/bq24157/bq24157.c ****         return BQ24157_FAULT_ERROR;
 364:Lib/bq24157/bq24157.c ****     }
 365:Lib/bq24157/bq24157.c **** 
 366:Lib/bq24157/bq24157.c ****     temp &= 0x07;
 571              		.loc 1 366 0
 572 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 573 0014 03F00703 		and	r3, r3, #7
 574 0018 8DF80730 		strb	r3, [sp, #7]
 367:Lib/bq24157/bq24157.c **** 
 368:Lib/bq24157/bq24157.c ****     if( bq24157_getBoostMode() == true )
 575              		.loc 1 368 0
 576 001c FFF7FEFF 		bl	bq24157_getBoostMode
 577              	.LVL33:
 578 0020 0128     		cmp	r0, #1
 579 0022 04D0     		beq	.L58
 580              	.L55:
 369:Lib/bq24157/bq24157.c ****     {
 370:Lib/bq24157/bq24157.c ****         temp += 8;
 371:Lib/bq24157/bq24157.c ****     }
 372:Lib/bq24157/bq24157.c **** 
 373:Lib/bq24157/bq24157.c ****     return( (BQ24157_FAULT_TYPE)temp );
 581              		.loc 1 373 0
 582 0024 9DF90700 		ldrsb	r0, [sp, #7]
 583              	.L54:
 374:Lib/bq24157/bq24157.c **** }
 584              		.loc 1 374 0
 585 0028 03B0     		add	sp, sp, #12
 586              	.LCFI34:
 587              		.cfi_remember_state
 588              		.cfi_def_cfa_offset 4
 589              		@ sp needed
 590 002a 5DF804FB 		ldr	pc, [sp], #4
 591              	.L58:
 592              	.LCFI35:
 593              		.cfi_restore_state
 370:Lib/bq24157/bq24157.c ****     }
 594              		.loc 1 370 0
 595 002e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 596 0032 0833     		adds	r3, r3, #8
 597 0034 8DF80730 		strb	r3, [sp, #7]
 598 0038 F4E7     		b	.L55
 599              	.L56:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 18


 363:Lib/bq24157/bq24157.c ****     }
 600              		.loc 1 363 0
 601 003a 4FF0FF30 		mov	r0, #-1
 602 003e F3E7     		b	.L54
 603              		.cfi_endproc
 604              	.LFE136:
 606              		.section	.text.bq24157_getInputCurrentLimit,"ax",%progbits
 607              		.align	1
 608              		.global	bq24157_getInputCurrentLimit
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	bq24157_getInputCurrentLimit:
 615              	.LFB137:
 375:Lib/bq24157/bq24157.c **** 
 376:Lib/bq24157/bq24157.c **** BQ24157_INPUT_CURRENT_LIMIT_TYPE bq24157_getInputCurrentLimit(void)
 377:Lib/bq24157/bq24157.c **** {
 616              		.loc 1 377 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 00B5     		push	{lr}
 621              	.LCFI36:
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 14, -4
 624 0002 83B0     		sub	sp, sp, #12
 625              	.LCFI37:
 626              		.cfi_def_cfa_offset 16
 378:Lib/bq24157/bq24157.c ****     uint8_t temp;
 379:Lib/bq24157/bq24157.c **** 
 380:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 381:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 627              		.loc 1 381 0
 628 0004 0DF10701 		add	r1, sp, #7
 629 0008 0120     		movs	r0, #1
 630 000a FFF7FEFF 		bl	bq24157_register_read
 631              	.LVL34:
 632 000e 28B1     		cbz	r0, .L61
 382:Lib/bq24157/bq24157.c ****     {
 383:Lib/bq24157/bq24157.c ****         return BQ24157_INPUT_CURRENT_ERROR;
 384:Lib/bq24157/bq24157.c ****     }
 385:Lib/bq24157/bq24157.c **** 
 386:Lib/bq24157/bq24157.c ****     return( (BQ24157_INPUT_CURRENT_LIMIT_TYPE)( ( temp >> 6 ) & 0x03 ) );
 633              		.loc 1 386 0
 634 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 635 0014 8009     		lsrs	r0, r0, #6
 636              	.L60:
 387:Lib/bq24157/bq24157.c **** }
 637              		.loc 1 387 0
 638 0016 03B0     		add	sp, sp, #12
 639              	.LCFI38:
 640              		.cfi_remember_state
 641              		.cfi_def_cfa_offset 4
 642              		@ sp needed
 643 0018 5DF804FB 		ldr	pc, [sp], #4
 644              	.L61:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 19


 645              	.LCFI39:
 646              		.cfi_restore_state
 383:Lib/bq24157/bq24157.c ****     }
 647              		.loc 1 383 0
 648 001c 4FF0FF30 		mov	r0, #-1
 649 0020 F9E7     		b	.L60
 650              		.cfi_endproc
 651              	.LFE137:
 653              		.section	.text.bq24157_setInputCurrentLimit,"ax",%progbits
 654              		.align	1
 655              		.global	bq24157_setInputCurrentLimit
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	bq24157_setInputCurrentLimit:
 662              	.LFB138:
 388:Lib/bq24157/bq24157.c **** 
 389:Lib/bq24157/bq24157.c **** bool bq24157_setInputCurrentLimit(BQ24157_INPUT_CURRENT_LIMIT_TYPE inputCurrent)
 390:Lib/bq24157/bq24157.c **** {
 663              		.loc 1 390 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL35:
 668 0000 10B5     		push	{r4, lr}
 669              	.LCFI40:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 673 0002 82B0     		sub	sp, sp, #8
 674              	.LCFI41:
 675              		.cfi_def_cfa_offset 16
 676 0004 0446     		mov	r4, r0
 391:Lib/bq24157/bq24157.c ****     uint8_t temp;
 392:Lib/bq24157/bq24157.c **** 
 393:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 394:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 677              		.loc 1 394 0
 678 0006 0DF10701 		add	r1, sp, #7
 679 000a 0120     		movs	r0, #1
 680              	.LVL36:
 681 000c FFF7FEFF 		bl	bq24157_register_read
 682              	.LVL37:
 683 0010 0346     		mov	r3, r0
 684 0012 10B9     		cbnz	r0, .L66
 685              	.L64:
 395:Lib/bq24157/bq24157.c ****     {
 396:Lib/bq24157/bq24157.c ****         return false;
 397:Lib/bq24157/bq24157.c ****     }
 398:Lib/bq24157/bq24157.c **** 
 399:Lib/bq24157/bq24157.c ****     temp &= 0x3F;
 400:Lib/bq24157/bq24157.c ****     temp |= ( inputCurrent << 6 );
 401:Lib/bq24157/bq24157.c **** 
 402:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 403:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 404:Lib/bq24157/bq24157.c ****     {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 20


 405:Lib/bq24157/bq24157.c ****         return false;
 406:Lib/bq24157/bq24157.c ****     }
 407:Lib/bq24157/bq24157.c **** 
 408:Lib/bq24157/bq24157.c ****     return true;
 409:Lib/bq24157/bq24157.c **** }
 686              		.loc 1 409 0
 687 0014 1846     		mov	r0, r3
 688 0016 02B0     		add	sp, sp, #8
 689              	.LCFI42:
 690              		.cfi_remember_state
 691              		.cfi_def_cfa_offset 8
 692              		@ sp needed
 693 0018 10BD     		pop	{r4, pc}
 694              	.L66:
 695              	.LCFI43:
 696              		.cfi_restore_state
 399:Lib/bq24157/bq24157.c ****     temp |= ( inputCurrent << 6 );
 697              		.loc 1 399 0
 698 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 699 001e 01F03F01 		and	r1, r1, #63
 400:Lib/bq24157/bq24157.c **** 
 700              		.loc 1 400 0
 701 0022 41EA8411 		orr	r1, r1, r4, lsl #6
 702 0026 C9B2     		uxtb	r1, r1
 703 0028 8DF80710 		strb	r1, [sp, #7]
 403:Lib/bq24157/bq24157.c ****     {
 704              		.loc 1 403 0
 705 002c 0120     		movs	r0, #1
 706 002e FFF7FEFF 		bl	bq24157_register_write
 707              	.LVL38:
 708 0032 0346     		mov	r3, r0
 709 0034 EEE7     		b	.L64
 710              		.cfi_endproc
 711              	.LFE138:
 713              		.section	.text.bq24157_getWeakBatteryThreshold,"ax",%progbits
 714              		.align	1
 715              		.global	bq24157_getWeakBatteryThreshold
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	bq24157_getWeakBatteryThreshold:
 722              	.LFB139:
 410:Lib/bq24157/bq24157.c **** 
 411:Lib/bq24157/bq24157.c **** int16_t bq24157_getWeakBatteryThreshold(void)
 412:Lib/bq24157/bq24157.c **** {
 723              		.loc 1 412 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 8
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727 0000 00B5     		push	{lr}
 728              	.LCFI44:
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 14, -4
 731 0002 83B0     		sub	sp, sp, #12
 732              	.LCFI45:
 733              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 21


 413:Lib/bq24157/bq24157.c ****     uint8_t temp;
 414:Lib/bq24157/bq24157.c **** 
 415:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 416:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 734              		.loc 1 416 0
 735 0004 0DF10701 		add	r1, sp, #7
 736 0008 0120     		movs	r0, #1
 737 000a FFF7FEFF 		bl	bq24157_register_read
 738              	.LVL39:
 739 000e A8B1     		cbz	r0, .L74
 417:Lib/bq24157/bq24157.c ****     {
 418:Lib/bq24157/bq24157.c ****         return -1;
 419:Lib/bq24157/bq24157.c ****     }
 420:Lib/bq24157/bq24157.c **** 
 421:Lib/bq24157/bq24157.c ****     temp = ( temp >> 4 ) & 0x03;
 740              		.loc 1 421 0
 741 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 742 0014 C3F30113 		ubfx	r3, r3, #4, #2
 422:Lib/bq24157/bq24157.c **** 
 423:Lib/bq24157/bq24157.c ****     switch( temp )
 743              		.loc 1 423 0
 744 0018 032B     		cmp	r3, #3
 745 001a 0CD8     		bhi	.L69
 746 001c DFE803F0 		tbb	[pc, r3]
 747              	.L71:
 748 0020 02       		.byte	(.L70-.L71)/2
 749 0021 11       		.byte	(.L75-.L71)/2
 750 0022 05       		.byte	(.L72-.L71)/2
 751 0023 08       		.byte	(.L73-.L71)/2
 752              		.p2align 1
 753              	.L70:
 424:Lib/bq24157/bq24157.c ****     {
 425:Lib/bq24157/bq24157.c ****         case 0x00:
 426:Lib/bq24157/bq24157.c ****         {
 427:Lib/bq24157/bq24157.c ****             return( 3400 );
 754              		.loc 1 427 0
 755 0024 40F64850 		movw	r0, #3400
 756 0028 0DE0     		b	.L68
 757              	.L72:
 428:Lib/bq24157/bq24157.c ****         }
 429:Lib/bq24157/bq24157.c ****         case 0x01:
 430:Lib/bq24157/bq24157.c ****         {
 431:Lib/bq24157/bq24157.c ****             return( 3500 );
 432:Lib/bq24157/bq24157.c ****         }
 433:Lib/bq24157/bq24157.c ****         case 0x02:
 434:Lib/bq24157/bq24157.c ****         {
 435:Lib/bq24157/bq24157.c ****             return( 3600 );
 758              		.loc 1 435 0
 759 002a 4FF46160 		mov	r0, #3600
 760 002e 0AE0     		b	.L68
 761              	.L73:
 436:Lib/bq24157/bq24157.c ****         }
 437:Lib/bq24157/bq24157.c ****         case 0x03:
 438:Lib/bq24157/bq24157.c ****         {
 439:Lib/bq24157/bq24157.c ****             return( 3700 );
 762              		.loc 1 439 0
 763 0030 40F67460 		movw	r0, #3700
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 22


 764 0034 07E0     		b	.L68
 765              	.L69:
 440:Lib/bq24157/bq24157.c ****         }
 441:Lib/bq24157/bq24157.c ****         default:
 442:Lib/bq24157/bq24157.c ****         {
 443:Lib/bq24157/bq24157.c ****             return -1;
 766              		.loc 1 443 0
 767 0036 4FF0FF30 		mov	r0, #-1
 768 003a 04E0     		b	.L68
 769              	.L74:
 418:Lib/bq24157/bq24157.c ****     }
 770              		.loc 1 418 0
 771 003c 4FF0FF30 		mov	r0, #-1
 772 0040 01E0     		b	.L68
 773              	.L75:
 431:Lib/bq24157/bq24157.c ****         }
 774              		.loc 1 431 0
 775 0042 40F6AC50 		movw	r0, #3500
 776              	.L68:
 444:Lib/bq24157/bq24157.c ****         }
 445:Lib/bq24157/bq24157.c ****     }
 446:Lib/bq24157/bq24157.c **** 
 447:Lib/bq24157/bq24157.c ****     return -1;
 448:Lib/bq24157/bq24157.c **** }
 777              		.loc 1 448 0
 778 0046 03B0     		add	sp, sp, #12
 779              	.LCFI46:
 780              		.cfi_def_cfa_offset 4
 781              		@ sp needed
 782 0048 5DF804FB 		ldr	pc, [sp], #4
 783              		.cfi_endproc
 784              	.LFE139:
 786              		.section	.text.bq24157_setWeakBatteryThreshold,"ax",%progbits
 787              		.align	1
 788              		.global	bq24157_setWeakBatteryThreshold
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	bq24157_setWeakBatteryThreshold:
 795              	.LFB140:
 449:Lib/bq24157/bq24157.c **** 
 450:Lib/bq24157/bq24157.c **** bool bq24157_setWeakBatteryThreshold(uint16_t voltage)
 451:Lib/bq24157/bq24157.c **** {
 796              		.loc 1 451 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 8
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              	.LVL40:
 452:Lib/bq24157/bq24157.c ****     uint8_t temp;
 453:Lib/bq24157/bq24157.c **** 
 454:Lib/bq24157/bq24157.c ****     // Range check voltage - allowed values are 3400, 3500, 3600 and 3700
 455:Lib/bq24157/bq24157.c ****     if( !(voltage == 3400 || voltage == 3500 || voltage == 3600 || voltage == 3700 ) )
 801              		.loc 1 455 0
 802 0000 40F64853 		movw	r3, #3400
 803 0004 9842     		cmp	r0, r3
 804 0006 0CD0     		beq	.L78
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 23


 805              		.loc 1 455 0 is_stmt 0 discriminator 1
 806 0008 40F6AC53 		movw	r3, #3500
 807 000c 9842     		cmp	r0, r3
 808 000e 08D0     		beq	.L78
 809              		.loc 1 455 0 discriminator 2
 810 0010 B0F5616F 		cmp	r0, #3600
 811 0014 05D0     		beq	.L78
 812              		.loc 1 455 0 discriminator 3
 813 0016 40F67463 		movw	r3, #3700
 814 001a 9842     		cmp	r0, r3
 815 001c 01D0     		beq	.L78
 456:Lib/bq24157/bq24157.c ****     {
 457:Lib/bq24157/bq24157.c ****         return false;
 816              		.loc 1 457 0 is_stmt 1
 817 001e 0020     		movs	r0, #0
 818              	.LVL41:
 819 0020 7047     		bx	lr
 820              	.LVL42:
 821              	.L78:
 451:Lib/bq24157/bq24157.c ****     uint8_t temp;
 822              		.loc 1 451 0
 823 0022 10B5     		push	{r4, lr}
 824              	.LCFI47:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828 0024 82B0     		sub	sp, sp, #8
 829              	.LCFI48:
 830              		.cfi_def_cfa_offset 16
 458:Lib/bq24157/bq24157.c ****     }
 459:Lib/bq24157/bq24157.c **** 
 460:Lib/bq24157/bq24157.c ****     // Voltage is offset by 3.4V and has resolution of 0.1V
 461:Lib/bq24157/bq24157.c ****     voltage = ( voltage - 3400 ) / 100;
 831              		.loc 1 461 0
 832 0026 A0F64850 		subw	r0, r0, #3400
 833              	.LVL43:
 834 002a 0F4C     		ldr	r4, .L86
 835 002c 84FB0034 		smull	r3, r4, r4, r0
 836 0030 C017     		asrs	r0, r0, #31
 837 0032 C0EB6414 		rsb	r4, r0, r4, asr #5
 838              	.LVL44:
 462:Lib/bq24157/bq24157.c **** 
 463:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 464:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 839              		.loc 1 464 0
 840 0036 0DF10701 		add	r1, sp, #7
 841 003a 0120     		movs	r0, #1
 842 003c FFF7FEFF 		bl	bq24157_register_read
 843              	.LVL45:
 844 0040 10B9     		cbnz	r0, .L85
 465:Lib/bq24157/bq24157.c ****     {
 466:Lib/bq24157/bq24157.c ****         return -1;
 845              		.loc 1 466 0
 846 0042 0120     		movs	r0, #1
 847              	.L79:
 467:Lib/bq24157/bq24157.c ****     }
 468:Lib/bq24157/bq24157.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 24


 469:Lib/bq24157/bq24157.c ****     temp &= 0xCF;
 470:Lib/bq24157/bq24157.c ****     temp |= ( voltage << 4 );
 471:Lib/bq24157/bq24157.c **** 
 472:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 473:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 474:Lib/bq24157/bq24157.c ****     {
 475:Lib/bq24157/bq24157.c ****         return false;
 476:Lib/bq24157/bq24157.c ****     }
 477:Lib/bq24157/bq24157.c **** 
 478:Lib/bq24157/bq24157.c ****     return true;
 479:Lib/bq24157/bq24157.c **** }
 848              		.loc 1 479 0
 849 0044 02B0     		add	sp, sp, #8
 850              	.LCFI49:
 851              		.cfi_remember_state
 852              		.cfi_def_cfa_offset 8
 853              		@ sp needed
 854 0046 10BD     		pop	{r4, pc}
 855              	.LVL46:
 856              	.L85:
 857              	.LCFI50:
 858              		.cfi_restore_state
 469:Lib/bq24157/bq24157.c ****     temp |= ( voltage << 4 );
 859              		.loc 1 469 0
 860 0048 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 861 004c 01F0CF00 		and	r0, r1, #207
 470:Lib/bq24157/bq24157.c **** 
 862              		.loc 1 470 0
 863 0050 0649     		ldr	r1, .L86+4
 864 0052 01EA0411 		and	r1, r1, r4, lsl #4
 865 0056 0143     		orrs	r1, r1, r0
 866 0058 C9B2     		uxtb	r1, r1
 867 005a 8DF80710 		strb	r1, [sp, #7]
 473:Lib/bq24157/bq24157.c ****     {
 868              		.loc 1 473 0
 869 005e 0120     		movs	r0, #1
 870 0060 FFF7FEFF 		bl	bq24157_register_write
 871              	.LVL47:
 872 0064 EEE7     		b	.L79
 873              	.L87:
 874 0066 00BF     		.align	2
 875              	.L86:
 876 0068 1F85EB51 		.word	1374389535
 877 006c F0FF0F00 		.word	1048560
 878              		.cfi_endproc
 879              	.LFE140:
 881              		.section	.text.bq24157_getChargeCurrentTerm,"ax",%progbits
 882              		.align	1
 883              		.global	bq24157_getChargeCurrentTerm
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu fpv4-sp-d16
 889              	bq24157_getChargeCurrentTerm:
 890              	.LFB141:
 480:Lib/bq24157/bq24157.c **** 
 481:Lib/bq24157/bq24157.c **** int8_t bq24157_getChargeCurrentTerm(void)
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 25


 482:Lib/bq24157/bq24157.c **** {
 891              		.loc 1 482 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 8
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 00B5     		push	{lr}
 896              	.LCFI51:
 897              		.cfi_def_cfa_offset 4
 898              		.cfi_offset 14, -4
 899 0002 83B0     		sub	sp, sp, #12
 900              	.LCFI52:
 901              		.cfi_def_cfa_offset 16
 483:Lib/bq24157/bq24157.c ****     uint8_t temp;
 484:Lib/bq24157/bq24157.c **** 
 485:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 486:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 902              		.loc 1 486 0
 903 0004 0DF10701 		add	r1, sp, #7
 904 0008 0120     		movs	r0, #1
 905 000a FFF7FEFF 		bl	bq24157_register_read
 906              	.LVL48:
 907 000e 30B1     		cbz	r0, .L90
 487:Lib/bq24157/bq24157.c ****     {
 488:Lib/bq24157/bq24157.c ****         return -1;
 489:Lib/bq24157/bq24157.c ****     }
 490:Lib/bq24157/bq24157.c **** 
 491:Lib/bq24157/bq24157.c ****     return( ( temp >> 3 ) & 0x01 );
 908              		.loc 1 491 0
 909 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 910 0014 C0F3C000 		ubfx	r0, r0, #3, #1
 911              	.L89:
 492:Lib/bq24157/bq24157.c **** }
 912              		.loc 1 492 0
 913 0018 03B0     		add	sp, sp, #12
 914              	.LCFI53:
 915              		.cfi_remember_state
 916              		.cfi_def_cfa_offset 4
 917              		@ sp needed
 918 001a 5DF804FB 		ldr	pc, [sp], #4
 919              	.L90:
 920              	.LCFI54:
 921              		.cfi_restore_state
 488:Lib/bq24157/bq24157.c ****     }
 922              		.loc 1 488 0
 923 001e 4FF0FF30 		mov	r0, #-1
 924 0022 F9E7     		b	.L89
 925              		.cfi_endproc
 926              	.LFE141:
 928              		.section	.text.bq24157_setChargeCurrentTerm,"ax",%progbits
 929              		.align	1
 930              		.global	bq24157_setChargeCurrentTerm
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv4-sp-d16
 936              	bq24157_setChargeCurrentTerm:
 937              	.LFB142:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 26


 493:Lib/bq24157/bq24157.c **** 
 494:Lib/bq24157/bq24157.c **** bool bq24157_setChargeCurrentTerm(bool status)
 495:Lib/bq24157/bq24157.c **** {
 938              		.loc 1 495 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL49:
 943 0000 10B5     		push	{r4, lr}
 944              	.LCFI55:
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 4, -8
 947              		.cfi_offset 14, -4
 948 0002 82B0     		sub	sp, sp, #8
 949              	.LCFI56:
 950              		.cfi_def_cfa_offset 16
 951 0004 0446     		mov	r4, r0
 496:Lib/bq24157/bq24157.c ****     uint8_t temp;
 497:Lib/bq24157/bq24157.c **** 
 498:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 499:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 952              		.loc 1 499 0
 953 0006 0DF10701 		add	r1, sp, #7
 954 000a 0120     		movs	r0, #1
 955              	.LVL50:
 956 000c FFF7FEFF 		bl	bq24157_register_read
 957              	.LVL51:
 958 0010 0346     		mov	r3, r0
 959 0012 10B9     		cbnz	r0, .L95
 960              	.L93:
 500:Lib/bq24157/bq24157.c ****     {
 501:Lib/bq24157/bq24157.c ****         return false;
 502:Lib/bq24157/bq24157.c ****     }
 503:Lib/bq24157/bq24157.c **** 
 504:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 3, status );
 505:Lib/bq24157/bq24157.c **** 
 506:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 507:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 508:Lib/bq24157/bq24157.c ****     {
 509:Lib/bq24157/bq24157.c ****         return false;
 510:Lib/bq24157/bq24157.c ****     }
 511:Lib/bq24157/bq24157.c **** 
 512:Lib/bq24157/bq24157.c ****     return true;
 513:Lib/bq24157/bq24157.c **** }
 961              		.loc 1 513 0
 962 0014 1846     		mov	r0, r3
 963 0016 02B0     		add	sp, sp, #8
 964              	.LCFI57:
 965              		.cfi_remember_state
 966              		.cfi_def_cfa_offset 8
 967              		@ sp needed
 968 0018 10BD     		pop	{r4, pc}
 969              	.L95:
 970              	.LCFI58:
 971              		.cfi_restore_state
 504:Lib/bq24157/bq24157.c **** 
 972              		.loc 1 504 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 27


 973 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 974 001e 01F0F701 		and	r1, r1, #247
 975 0022 6442     		negs	r4, r4
 976 0024 04F00804 		and	r4, r4, #8
 977 0028 2143     		orrs	r1, r1, r4
 978 002a 8DF80710 		strb	r1, [sp, #7]
 507:Lib/bq24157/bq24157.c ****     {
 979              		.loc 1 507 0
 980 002e 0120     		movs	r0, #1
 981 0030 FFF7FEFF 		bl	bq24157_register_write
 982              	.LVL52:
 983 0034 0346     		mov	r3, r0
 984 0036 EDE7     		b	.L93
 985              		.cfi_endproc
 986              	.LFE142:
 988              		.section	.text.bq24157_getChargerEnable,"ax",%progbits
 989              		.align	1
 990              		.global	bq24157_getChargerEnable
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	bq24157_getChargerEnable:
 997              	.LFB143:
 514:Lib/bq24157/bq24157.c **** 
 515:Lib/bq24157/bq24157.c **** int8_t bq24157_getChargerEnable(void)
 516:Lib/bq24157/bq24157.c **** {
 998              		.loc 1 516 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 8
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 00B5     		push	{lr}
 1003              	.LCFI59:
 1004              		.cfi_def_cfa_offset 4
 1005              		.cfi_offset 14, -4
 1006 0002 83B0     		sub	sp, sp, #12
 1007              	.LCFI60:
 1008              		.cfi_def_cfa_offset 16
 517:Lib/bq24157/bq24157.c ****     uint8_t temp;
 518:Lib/bq24157/bq24157.c **** 
 519:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 520:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1009              		.loc 1 520 0
 1010 0004 0DF10701 		add	r1, sp, #7
 1011 0008 0120     		movs	r0, #1
 1012 000a FFF7FEFF 		bl	bq24157_register_read
 1013              	.LVL53:
 1014 000e 30B1     		cbz	r0, .L98
 521:Lib/bq24157/bq24157.c ****     {
 522:Lib/bq24157/bq24157.c ****         return -1;
 523:Lib/bq24157/bq24157.c ****     }
 524:Lib/bq24157/bq24157.c **** 
 525:Lib/bq24157/bq24157.c ****     return( ( temp >> 2 ) & 0x01 );
 1015              		.loc 1 525 0
 1016 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1017 0014 C0F38000 		ubfx	r0, r0, #2, #1
 1018              	.L97:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 28


 526:Lib/bq24157/bq24157.c **** }
 1019              		.loc 1 526 0
 1020 0018 03B0     		add	sp, sp, #12
 1021              	.LCFI61:
 1022              		.cfi_remember_state
 1023              		.cfi_def_cfa_offset 4
 1024              		@ sp needed
 1025 001a 5DF804FB 		ldr	pc, [sp], #4
 1026              	.L98:
 1027              	.LCFI62:
 1028              		.cfi_restore_state
 522:Lib/bq24157/bq24157.c ****     }
 1029              		.loc 1 522 0
 1030 001e 4FF0FF30 		mov	r0, #-1
 1031 0022 F9E7     		b	.L97
 1032              		.cfi_endproc
 1033              	.LFE143:
 1035              		.section	.text.bq24157_setChargerEnable,"ax",%progbits
 1036              		.align	1
 1037              		.global	bq24157_setChargerEnable
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu fpv4-sp-d16
 1043              	bq24157_setChargerEnable:
 1044              	.LFB144:
 527:Lib/bq24157/bq24157.c **** 
 528:Lib/bq24157/bq24157.c **** bool bq24157_setChargerEnable(bool status)
 529:Lib/bq24157/bq24157.c **** {
 1045              		.loc 1 529 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 8
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL54:
 1050 0000 10B5     		push	{r4, lr}
 1051              	.LCFI63:
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 4, -8
 1054              		.cfi_offset 14, -4
 1055 0002 82B0     		sub	sp, sp, #8
 1056              	.LCFI64:
 1057              		.cfi_def_cfa_offset 16
 1058 0004 0446     		mov	r4, r0
 530:Lib/bq24157/bq24157.c ****     uint8_t temp;
 531:Lib/bq24157/bq24157.c **** 
 532:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 533:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1059              		.loc 1 533 0
 1060 0006 0DF10701 		add	r1, sp, #7
 1061 000a 0120     		movs	r0, #1
 1062              	.LVL55:
 1063 000c FFF7FEFF 		bl	bq24157_register_read
 1064              	.LVL56:
 1065 0010 0346     		mov	r3, r0
 1066 0012 10B9     		cbnz	r0, .L103
 1067              	.L101:
 534:Lib/bq24157/bq24157.c ****     {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 29


 535:Lib/bq24157/bq24157.c ****         return false;
 536:Lib/bq24157/bq24157.c ****     }
 537:Lib/bq24157/bq24157.c **** 
 538:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 2, status );
 539:Lib/bq24157/bq24157.c **** 
 540:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 541:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 542:Lib/bq24157/bq24157.c ****     {
 543:Lib/bq24157/bq24157.c ****         return false;
 544:Lib/bq24157/bq24157.c ****     }
 545:Lib/bq24157/bq24157.c **** 
 546:Lib/bq24157/bq24157.c ****     return true;
 547:Lib/bq24157/bq24157.c **** }
 1068              		.loc 1 547 0
 1069 0014 1846     		mov	r0, r3
 1070 0016 02B0     		add	sp, sp, #8
 1071              	.LCFI65:
 1072              		.cfi_remember_state
 1073              		.cfi_def_cfa_offset 8
 1074              		@ sp needed
 1075 0018 10BD     		pop	{r4, pc}
 1076              	.L103:
 1077              	.LCFI66:
 1078              		.cfi_restore_state
 538:Lib/bq24157/bq24157.c **** 
 1079              		.loc 1 538 0
 1080 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1081 001e 01F0FB01 		and	r1, r1, #251
 1082 0022 6442     		negs	r4, r4
 1083 0024 04F00404 		and	r4, r4, #4
 1084 0028 2143     		orrs	r1, r1, r4
 1085 002a 8DF80710 		strb	r1, [sp, #7]
 541:Lib/bq24157/bq24157.c ****     {
 1086              		.loc 1 541 0
 1087 002e 0120     		movs	r0, #1
 1088 0030 FFF7FEFF 		bl	bq24157_register_write
 1089              	.LVL57:
 1090 0034 0346     		mov	r3, r0
 1091 0036 EDE7     		b	.L101
 1092              		.cfi_endproc
 1093              	.LFE144:
 1095              		.section	.text.bq24157_getHighImpedanceMode,"ax",%progbits
 1096              		.align	1
 1097              		.global	bq24157_getHighImpedanceMode
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv4-sp-d16
 1103              	bq24157_getHighImpedanceMode:
 1104              	.LFB145:
 548:Lib/bq24157/bq24157.c **** 
 549:Lib/bq24157/bq24157.c **** int8_t bq24157_getHighImpedanceMode(void)
 550:Lib/bq24157/bq24157.c **** {
 1105              		.loc 1 550 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 30


 1109 0000 00B5     		push	{lr}
 1110              	.LCFI67:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 14, -4
 1113 0002 83B0     		sub	sp, sp, #12
 1114              	.LCFI68:
 1115              		.cfi_def_cfa_offset 16
 551:Lib/bq24157/bq24157.c ****     uint8_t temp;
 552:Lib/bq24157/bq24157.c **** 
 553:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 554:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1116              		.loc 1 554 0
 1117 0004 0DF10701 		add	r1, sp, #7
 1118 0008 0120     		movs	r0, #1
 1119 000a FFF7FEFF 		bl	bq24157_register_read
 1120              	.LVL58:
 1121 000e 30B1     		cbz	r0, .L106
 555:Lib/bq24157/bq24157.c ****     {
 556:Lib/bq24157/bq24157.c ****         return -1;
 557:Lib/bq24157/bq24157.c ****     }
 558:Lib/bq24157/bq24157.c **** 
 559:Lib/bq24157/bq24157.c ****     return( ( temp >> 1 ) & 0x01 );
 1122              		.loc 1 559 0
 1123 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1124 0014 C0F34000 		ubfx	r0, r0, #1, #1
 1125              	.L105:
 560:Lib/bq24157/bq24157.c **** }
 1126              		.loc 1 560 0
 1127 0018 03B0     		add	sp, sp, #12
 1128              	.LCFI69:
 1129              		.cfi_remember_state
 1130              		.cfi_def_cfa_offset 4
 1131              		@ sp needed
 1132 001a 5DF804FB 		ldr	pc, [sp], #4
 1133              	.L106:
 1134              	.LCFI70:
 1135              		.cfi_restore_state
 556:Lib/bq24157/bq24157.c ****     }
 1136              		.loc 1 556 0
 1137 001e 4FF0FF30 		mov	r0, #-1
 1138 0022 F9E7     		b	.L105
 1139              		.cfi_endproc
 1140              	.LFE145:
 1142              		.section	.text.bq24157_setHighImpedanceMode,"ax",%progbits
 1143              		.align	1
 1144              		.global	bq24157_setHighImpedanceMode
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1148              		.fpu fpv4-sp-d16
 1150              	bq24157_setHighImpedanceMode:
 1151              	.LFB146:
 561:Lib/bq24157/bq24157.c **** 
 562:Lib/bq24157/bq24157.c **** bool bq24157_setHighImpedanceMode(bool status)
 563:Lib/bq24157/bq24157.c **** {
 1152              		.loc 1 563 0
 1153              		.cfi_startproc
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 31


 1154              		@ args = 0, pretend = 0, frame = 8
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL59:
 1157 0000 10B5     		push	{r4, lr}
 1158              	.LCFI71:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
 1162 0002 82B0     		sub	sp, sp, #8
 1163              	.LCFI72:
 1164              		.cfi_def_cfa_offset 16
 1165 0004 0446     		mov	r4, r0
 564:Lib/bq24157/bq24157.c ****     uint8_t temp;
 565:Lib/bq24157/bq24157.c **** 
 566:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 567:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1166              		.loc 1 567 0
 1167 0006 0DF10701 		add	r1, sp, #7
 1168 000a 0120     		movs	r0, #1
 1169              	.LVL60:
 1170 000c FFF7FEFF 		bl	bq24157_register_read
 1171              	.LVL61:
 1172 0010 0346     		mov	r3, r0
 1173 0012 10B9     		cbnz	r0, .L111
 1174              	.L109:
 568:Lib/bq24157/bq24157.c ****     {
 569:Lib/bq24157/bq24157.c ****         return false;
 570:Lib/bq24157/bq24157.c ****     }
 571:Lib/bq24157/bq24157.c **** 
 572:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 1, status );
 573:Lib/bq24157/bq24157.c **** 
 574:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 575:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 576:Lib/bq24157/bq24157.c ****     {
 577:Lib/bq24157/bq24157.c ****         return false;
 578:Lib/bq24157/bq24157.c ****     }
 579:Lib/bq24157/bq24157.c **** 
 580:Lib/bq24157/bq24157.c ****     return true;
 581:Lib/bq24157/bq24157.c **** }
 1175              		.loc 1 581 0
 1176 0014 1846     		mov	r0, r3
 1177 0016 02B0     		add	sp, sp, #8
 1178              	.LCFI73:
 1179              		.cfi_remember_state
 1180              		.cfi_def_cfa_offset 8
 1181              		@ sp needed
 1182 0018 10BD     		pop	{r4, pc}
 1183              	.L111:
 1184              	.LCFI74:
 1185              		.cfi_restore_state
 572:Lib/bq24157/bq24157.c **** 
 1186              		.loc 1 572 0
 1187 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1188 001e 01F0FD01 		and	r1, r1, #253
 1189 0022 6442     		negs	r4, r4
 1190 0024 04F00204 		and	r4, r4, #2
 1191 0028 2143     		orrs	r1, r1, r4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 32


 1192 002a 8DF80710 		strb	r1, [sp, #7]
 575:Lib/bq24157/bq24157.c ****     {
 1193              		.loc 1 575 0
 1194 002e 0120     		movs	r0, #1
 1195 0030 FFF7FEFF 		bl	bq24157_register_write
 1196              	.LVL62:
 1197 0034 0346     		mov	r3, r0
 1198 0036 EDE7     		b	.L109
 1199              		.cfi_endproc
 1200              	.LFE146:
 1202              		.section	.text.bq24157_getOperationMode,"ax",%progbits
 1203              		.align	1
 1204              		.global	bq24157_getOperationMode
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	bq24157_getOperationMode:
 1211              	.LFB147:
 582:Lib/bq24157/bq24157.c **** 
 583:Lib/bq24157/bq24157.c **** int8_t bq24157_getOperationMode(void)
 584:Lib/bq24157/bq24157.c **** {
 1212              		.loc 1 584 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216 0000 00B5     		push	{lr}
 1217              	.LCFI75:
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 14, -4
 1220 0002 83B0     		sub	sp, sp, #12
 1221              	.LCFI76:
 1222              		.cfi_def_cfa_offset 16
 585:Lib/bq24157/bq24157.c ****     uint8_t temp;
 586:Lib/bq24157/bq24157.c **** 
 587:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 588:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1223              		.loc 1 588 0
 1224 0004 0DF10701 		add	r1, sp, #7
 1225 0008 0120     		movs	r0, #1
 1226 000a FFF7FEFF 		bl	bq24157_register_read
 1227              	.LVL63:
 1228 000e 30B1     		cbz	r0, .L114
 589:Lib/bq24157/bq24157.c ****     {
 590:Lib/bq24157/bq24157.c ****         return -1;
 591:Lib/bq24157/bq24157.c ****     }
 592:Lib/bq24157/bq24157.c **** 
 593:Lib/bq24157/bq24157.c ****     return( temp & 0x01 );
 1229              		.loc 1 593 0
 1230 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1231 0014 00F00100 		and	r0, r0, #1
 1232              	.L113:
 594:Lib/bq24157/bq24157.c **** }
 1233              		.loc 1 594 0
 1234 0018 03B0     		add	sp, sp, #12
 1235              	.LCFI77:
 1236              		.cfi_remember_state
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 33


 1237              		.cfi_def_cfa_offset 4
 1238              		@ sp needed
 1239 001a 5DF804FB 		ldr	pc, [sp], #4
 1240              	.L114:
 1241              	.LCFI78:
 1242              		.cfi_restore_state
 590:Lib/bq24157/bq24157.c ****     }
 1243              		.loc 1 590 0
 1244 001e 4FF0FF30 		mov	r0, #-1
 1245 0022 F9E7     		b	.L113
 1246              		.cfi_endproc
 1247              	.LFE147:
 1249              		.section	.text.bq24157_setOperationMode,"ax",%progbits
 1250              		.align	1
 1251              		.global	bq24157_setOperationMode
 1252              		.syntax unified
 1253              		.thumb
 1254              		.thumb_func
 1255              		.fpu fpv4-sp-d16
 1257              	bq24157_setOperationMode:
 1258              	.LFB148:
 595:Lib/bq24157/bq24157.c **** 
 596:Lib/bq24157/bq24157.c **** bool bq24157_setOperationMode(bool mode)
 597:Lib/bq24157/bq24157.c **** {
 1259              		.loc 1 597 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 8
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              	.LVL64:
 1264 0000 10B5     		push	{r4, lr}
 1265              	.LCFI79:
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 4, -8
 1268              		.cfi_offset 14, -4
 1269 0002 82B0     		sub	sp, sp, #8
 1270              	.LCFI80:
 1271              		.cfi_def_cfa_offset 16
 1272 0004 0446     		mov	r4, r0
 598:Lib/bq24157/bq24157.c ****     uint8_t temp;
 599:Lib/bq24157/bq24157.c **** 
 600:Lib/bq24157/bq24157.c ****     // Read register memory location 0x01
 601:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_REG, &temp ) )
 1273              		.loc 1 601 0
 1274 0006 0DF10701 		add	r1, sp, #7
 1275 000a 0120     		movs	r0, #1
 1276              	.LVL65:
 1277 000c FFF7FEFF 		bl	bq24157_register_read
 1278              	.LVL66:
 1279 0010 0346     		mov	r3, r0
 1280 0012 10B9     		cbnz	r0, .L119
 1281              	.L117:
 602:Lib/bq24157/bq24157.c ****     {
 603:Lib/bq24157/bq24157.c ****         return false;
 604:Lib/bq24157/bq24157.c ****     }
 605:Lib/bq24157/bq24157.c **** 
 606:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 0, mode );
 607:Lib/bq24157/bq24157.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 34


 608:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x01
 609:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_REG, temp ) )
 610:Lib/bq24157/bq24157.c ****     {
 611:Lib/bq24157/bq24157.c ****         return false;
 612:Lib/bq24157/bq24157.c ****     }
 613:Lib/bq24157/bq24157.c **** 
 614:Lib/bq24157/bq24157.c ****     return true;
 615:Lib/bq24157/bq24157.c **** }
 1282              		.loc 1 615 0
 1283 0014 1846     		mov	r0, r3
 1284 0016 02B0     		add	sp, sp, #8
 1285              	.LCFI81:
 1286              		.cfi_remember_state
 1287              		.cfi_def_cfa_offset 8
 1288              		@ sp needed
 1289 0018 10BD     		pop	{r4, pc}
 1290              	.L119:
 1291              	.LCFI82:
 1292              		.cfi_restore_state
 606:Lib/bq24157/bq24157.c **** 
 1293              		.loc 1 606 0
 1294 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1295 001e 01F0FE01 		and	r1, r1, #254
 1296 0022 04F00104 		and	r4, r4, #1
 1297 0026 2143     		orrs	r1, r1, r4
 1298 0028 8DF80710 		strb	r1, [sp, #7]
 609:Lib/bq24157/bq24157.c ****     {
 1299              		.loc 1 609 0
 1300 002c 0120     		movs	r0, #1
 1301 002e FFF7FEFF 		bl	bq24157_register_write
 1302              	.LVL67:
 1303 0032 0346     		mov	r3, r0
 1304 0034 EEE7     		b	.L117
 1305              		.cfi_endproc
 1306              	.LFE148:
 1308              		.section	.text.bq24157_getBatteryRegulationVoltage,"ax",%progbits
 1309              		.align	1
 1310              		.global	bq24157_getBatteryRegulationVoltage
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	bq24157_getBatteryRegulationVoltage:
 1317              	.LFB149:
 616:Lib/bq24157/bq24157.c **** 
 617:Lib/bq24157/bq24157.c **** int16_t bq24157_getBatteryRegulationVoltage(void)
 618:Lib/bq24157/bq24157.c **** {
 1318              		.loc 1 618 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 8
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322 0000 00B5     		push	{lr}
 1323              	.LCFI83:
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 14, -4
 1326 0002 83B0     		sub	sp, sp, #12
 1327              	.LCFI84:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 35


 1328              		.cfi_def_cfa_offset 16
 619:Lib/bq24157/bq24157.c ****     uint8_t temp;
 620:Lib/bq24157/bq24157.c **** 
 621:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 622:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 1329              		.loc 1 622 0
 1330 0004 0DF10701 		add	r1, sp, #7
 1331 0008 0220     		movs	r0, #2
 1332 000a FFF7FEFF 		bl	bq24157_register_read
 1333              	.LVL68:
 1334 000e 58B1     		cbz	r0, .L122
 623:Lib/bq24157/bq24157.c ****     {
 624:Lib/bq24157/bq24157.c ****         return -1;
 625:Lib/bq24157/bq24157.c ****     }
 626:Lib/bq24157/bq24157.c **** 
 627:Lib/bq24157/bq24157.c ****     // Charge voltage range is 3.5V to 4.44V with an offset of 3.5V and steps of 0.02V
 628:Lib/bq24157/bq24157.c ****     return( 3500 + ( ( ( temp >> 2 ) & 0x3F ) * 20 ) );
 1335              		.loc 1 628 0
 1336 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1337 0014 9B08     		lsrs	r3, r3, #2
 1338 0016 03EB8303 		add	r3, r3, r3, lsl #2
 1339 001a 9800     		lsls	r0, r3, #2
 1340 001c 00F6AC50 		addw	r0, r0, #3500
 1341 0020 00B2     		sxth	r0, r0
 1342              	.L121:
 629:Lib/bq24157/bq24157.c **** }
 1343              		.loc 1 629 0
 1344 0022 03B0     		add	sp, sp, #12
 1345              	.LCFI85:
 1346              		.cfi_remember_state
 1347              		.cfi_def_cfa_offset 4
 1348              		@ sp needed
 1349 0024 5DF804FB 		ldr	pc, [sp], #4
 1350              	.L122:
 1351              	.LCFI86:
 1352              		.cfi_restore_state
 624:Lib/bq24157/bq24157.c ****     }
 1353              		.loc 1 624 0
 1354 0028 4FF0FF30 		mov	r0, #-1
 1355 002c F9E7     		b	.L121
 1356              		.cfi_endproc
 1357              	.LFE149:
 1359              		.section	.text.bq24157_setBatteryRegulationVoltage,"ax",%progbits
 1360              		.align	1
 1361              		.global	bq24157_setBatteryRegulationVoltage
 1362              		.syntax unified
 1363              		.thumb
 1364              		.thumb_func
 1365              		.fpu fpv4-sp-d16
 1367              	bq24157_setBatteryRegulationVoltage:
 1368              	.LFB150:
 630:Lib/bq24157/bq24157.c **** 
 631:Lib/bq24157/bq24157.c **** bool bq24157_setBatteryRegulationVoltage(uint16_t voltage)
 632:Lib/bq24157/bq24157.c **** {
 1369              		.loc 1 632 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 36


 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              	.LVL69:
 633:Lib/bq24157/bq24157.c ****     uint8_t temp;
 634:Lib/bq24157/bq24157.c **** 
 635:Lib/bq24157/bq24157.c ****     // Range check voltage 3500 - 4440
 636:Lib/bq24157/bq24157.c ****     if( !( voltage >= 3500 && voltage <= 4440 ) )
 1374              		.loc 1 636 0
 1375 0000 A0F6AC53 		subw	r3, r0, #3500
 1376 0004 9BB2     		uxth	r3, r3
 1377 0006 B3F56B7F 		cmp	r3, #940
 1378 000a 02D9     		bls	.L131
 637:Lib/bq24157/bq24157.c ****     {
 638:Lib/bq24157/bq24157.c ****         return false;
 1379              		.loc 1 638 0
 1380 000c 0023     		movs	r3, #0
 639:Lib/bq24157/bq24157.c ****     }
 640:Lib/bq24157/bq24157.c **** 
 641:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 642:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 643:Lib/bq24157/bq24157.c ****     {
 644:Lib/bq24157/bq24157.c ****         return false;
 645:Lib/bq24157/bq24157.c ****     }
 646:Lib/bq24157/bq24157.c **** 
 647:Lib/bq24157/bq24157.c ****     // Charge voltage range is 3.5V to 4.44V with an offset of 3.5V and steps of 0.02V
 648:Lib/bq24157/bq24157.c ****     temp &= 0x03;
 649:Lib/bq24157/bq24157.c ****     temp |= ( ( ( voltage - 3500 ) / 20 ) << 2 );
 650:Lib/bq24157/bq24157.c **** 
 651:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x02
 652:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_VOLTAGE_REG, temp ) )
 653:Lib/bq24157/bq24157.c ****     {
 654:Lib/bq24157/bq24157.c ****         return false;
 655:Lib/bq24157/bq24157.c ****     }
 656:Lib/bq24157/bq24157.c **** 
 657:Lib/bq24157/bq24157.c ****     return true;
 658:Lib/bq24157/bq24157.c **** }
 1381              		.loc 1 658 0
 1382 000e 1846     		mov	r0, r3
 1383              	.LVL70:
 1384 0010 7047     		bx	lr
 1385              	.LVL71:
 1386              	.L131:
 632:Lib/bq24157/bq24157.c ****     uint8_t temp;
 1387              		.loc 1 632 0
 1388 0012 10B5     		push	{r4, lr}
 1389              	.LCFI87:
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 4, -8
 1392              		.cfi_offset 14, -4
 1393 0014 82B0     		sub	sp, sp, #8
 1394              	.LCFI88:
 1395              		.cfi_def_cfa_offset 16
 1396 0016 0446     		mov	r4, r0
 642:Lib/bq24157/bq24157.c ****     {
 1397              		.loc 1 642 0
 1398 0018 0DF10701 		add	r1, sp, #7
 1399 001c 0220     		movs	r0, #2
 1400              	.LVL72:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 37


 1401 001e FFF7FEFF 		bl	bq24157_register_read
 1402              	.LVL73:
 1403 0022 0346     		mov	r3, r0
 1404 0024 10B9     		cbnz	r0, .L132
 1405              	.L125:
 1406              		.loc 1 658 0
 1407 0026 1846     		mov	r0, r3
 1408 0028 02B0     		add	sp, sp, #8
 1409              	.LCFI89:
 1410              		.cfi_remember_state
 1411              		.cfi_def_cfa_offset 8
 1412              		@ sp needed
 1413 002a 10BD     		pop	{r4, pc}
 1414              	.L132:
 1415              	.LCFI90:
 1416              		.cfi_restore_state
 648:Lib/bq24157/bq24157.c ****     temp |= ( ( ( voltage - 3500 ) / 20 ) << 2 );
 1417              		.loc 1 648 0
 1418 002c 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1419 0030 01F00301 		and	r1, r1, #3
 649:Lib/bq24157/bq24157.c **** 
 1420              		.loc 1 649 0
 1421 0034 A4F6AC50 		subw	r0, r4, #3500
 1422 0038 074C     		ldr	r4, .L133
 1423 003a 84FB0034 		smull	r3, r4, r4, r0
 1424 003e C017     		asrs	r0, r0, #31
 1425 0040 C0EBE400 		rsb	r0, r0, r4, asr #3
 1426 0044 41EA8000 		orr	r0, r1, r0, lsl #2
 1427 0048 C1B2     		uxtb	r1, r0
 1428 004a 8DF80710 		strb	r1, [sp, #7]
 652:Lib/bq24157/bq24157.c ****     {
 1429              		.loc 1 652 0
 1430 004e 0220     		movs	r0, #2
 1431 0050 FFF7FEFF 		bl	bq24157_register_write
 1432              	.LVL74:
 1433 0054 0346     		mov	r3, r0
 1434 0056 E6E7     		b	.L125
 1435              	.L134:
 1436              		.align	2
 1437              	.L133:
 1438 0058 67666666 		.word	1717986919
 1439              		.cfi_endproc
 1440              	.LFE150:
 1442              		.section	.text.bq24157_getOtgPinPolarity,"ax",%progbits
 1443              		.align	1
 1444              		.global	bq24157_getOtgPinPolarity
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu fpv4-sp-d16
 1450              	bq24157_getOtgPinPolarity:
 1451              	.LFB151:
 659:Lib/bq24157/bq24157.c **** 
 660:Lib/bq24157/bq24157.c **** int8_t bq24157_getOtgPinPolarity(void)
 661:Lib/bq24157/bq24157.c **** {
 1452              		.loc 1 661 0
 1453              		.cfi_startproc
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 38


 1454              		@ args = 0, pretend = 0, frame = 8
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 00B5     		push	{lr}
 1457              	.LCFI91:
 1458              		.cfi_def_cfa_offset 4
 1459              		.cfi_offset 14, -4
 1460 0002 83B0     		sub	sp, sp, #12
 1461              	.LCFI92:
 1462              		.cfi_def_cfa_offset 16
 662:Lib/bq24157/bq24157.c ****     uint8_t temp;
 663:Lib/bq24157/bq24157.c **** 
 664:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 665:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 1463              		.loc 1 665 0
 1464 0004 0DF10701 		add	r1, sp, #7
 1465 0008 0220     		movs	r0, #2
 1466 000a FFF7FEFF 		bl	bq24157_register_read
 1467              	.LVL75:
 1468 000e 30B1     		cbz	r0, .L137
 666:Lib/bq24157/bq24157.c ****     {
 667:Lib/bq24157/bq24157.c ****         return -1;
 668:Lib/bq24157/bq24157.c ****     }
 669:Lib/bq24157/bq24157.c **** 
 670:Lib/bq24157/bq24157.c ****     return( ( temp >> 1 ) & 0x01 );
 1469              		.loc 1 670 0
 1470 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1471 0014 C0F34000 		ubfx	r0, r0, #1, #1
 1472              	.L136:
 671:Lib/bq24157/bq24157.c **** }
 1473              		.loc 1 671 0
 1474 0018 03B0     		add	sp, sp, #12
 1475              	.LCFI93:
 1476              		.cfi_remember_state
 1477              		.cfi_def_cfa_offset 4
 1478              		@ sp needed
 1479 001a 5DF804FB 		ldr	pc, [sp], #4
 1480              	.L137:
 1481              	.LCFI94:
 1482              		.cfi_restore_state
 667:Lib/bq24157/bq24157.c ****     }
 1483              		.loc 1 667 0
 1484 001e 4FF0FF30 		mov	r0, #-1
 1485 0022 F9E7     		b	.L136
 1486              		.cfi_endproc
 1487              	.LFE151:
 1489              		.section	.text.bq24157_setOtgPinPolarity,"ax",%progbits
 1490              		.align	1
 1491              		.global	bq24157_setOtgPinPolarity
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv4-sp-d16
 1497              	bq24157_setOtgPinPolarity:
 1498              	.LFB152:
 672:Lib/bq24157/bq24157.c **** 
 673:Lib/bq24157/bq24157.c **** bool bq24157_setOtgPinPolarity(bool polarity)
 674:Lib/bq24157/bq24157.c **** {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 39


 1499              		.loc 1 674 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 8
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              	.LVL76:
 1504 0000 10B5     		push	{r4, lr}
 1505              	.LCFI95:
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 4, -8
 1508              		.cfi_offset 14, -4
 1509 0002 82B0     		sub	sp, sp, #8
 1510              	.LCFI96:
 1511              		.cfi_def_cfa_offset 16
 1512 0004 0446     		mov	r4, r0
 675:Lib/bq24157/bq24157.c ****     uint8_t temp;
 676:Lib/bq24157/bq24157.c **** 
 677:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 678:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 1513              		.loc 1 678 0
 1514 0006 0DF10701 		add	r1, sp, #7
 1515 000a 0220     		movs	r0, #2
 1516              	.LVL77:
 1517 000c FFF7FEFF 		bl	bq24157_register_read
 1518              	.LVL78:
 1519 0010 0346     		mov	r3, r0
 1520 0012 10B9     		cbnz	r0, .L142
 1521              	.L140:
 679:Lib/bq24157/bq24157.c ****     {
 680:Lib/bq24157/bq24157.c ****         return false;
 681:Lib/bq24157/bq24157.c ****     }
 682:Lib/bq24157/bq24157.c **** 
 683:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 1, polarity );
 684:Lib/bq24157/bq24157.c **** 
 685:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x02
 686:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_VOLTAGE_REG, temp ) )
 687:Lib/bq24157/bq24157.c ****     {
 688:Lib/bq24157/bq24157.c ****         return false;
 689:Lib/bq24157/bq24157.c ****     }
 690:Lib/bq24157/bq24157.c **** 
 691:Lib/bq24157/bq24157.c ****     return true;
 692:Lib/bq24157/bq24157.c **** }
 1522              		.loc 1 692 0
 1523 0014 1846     		mov	r0, r3
 1524 0016 02B0     		add	sp, sp, #8
 1525              	.LCFI97:
 1526              		.cfi_remember_state
 1527              		.cfi_def_cfa_offset 8
 1528              		@ sp needed
 1529 0018 10BD     		pop	{r4, pc}
 1530              	.L142:
 1531              	.LCFI98:
 1532              		.cfi_restore_state
 683:Lib/bq24157/bq24157.c **** 
 1533              		.loc 1 683 0
 1534 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1535 001e 01F0FD01 		and	r1, r1, #253
 1536 0022 6442     		negs	r4, r4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 40


 1537 0024 04F00204 		and	r4, r4, #2
 1538 0028 2143     		orrs	r1, r1, r4
 1539 002a 8DF80710 		strb	r1, [sp, #7]
 686:Lib/bq24157/bq24157.c ****     {
 1540              		.loc 1 686 0
 1541 002e 0220     		movs	r0, #2
 1542 0030 FFF7FEFF 		bl	bq24157_register_write
 1543              	.LVL79:
 1544 0034 0346     		mov	r3, r0
 1545 0036 EDE7     		b	.L140
 1546              		.cfi_endproc
 1547              	.LFE152:
 1549              		.section	.text.bq24157_getOtgPinEnable,"ax",%progbits
 1550              		.align	1
 1551              		.global	bq24157_getOtgPinEnable
 1552              		.syntax unified
 1553              		.thumb
 1554              		.thumb_func
 1555              		.fpu fpv4-sp-d16
 1557              	bq24157_getOtgPinEnable:
 1558              	.LFB153:
 693:Lib/bq24157/bq24157.c **** 
 694:Lib/bq24157/bq24157.c **** int8_t bq24157_getOtgPinEnable(void)
 695:Lib/bq24157/bq24157.c **** {
 1559              		.loc 1 695 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 8
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563 0000 00B5     		push	{lr}
 1564              	.LCFI99:
 1565              		.cfi_def_cfa_offset 4
 1566              		.cfi_offset 14, -4
 1567 0002 83B0     		sub	sp, sp, #12
 1568              	.LCFI100:
 1569              		.cfi_def_cfa_offset 16
 696:Lib/bq24157/bq24157.c ****     uint8_t temp;
 697:Lib/bq24157/bq24157.c **** 
 698:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 699:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 1570              		.loc 1 699 0
 1571 0004 0DF10701 		add	r1, sp, #7
 1572 0008 0220     		movs	r0, #2
 1573 000a FFF7FEFF 		bl	bq24157_register_read
 1574              	.LVL80:
 1575 000e 30B1     		cbz	r0, .L145
 700:Lib/bq24157/bq24157.c ****     {
 701:Lib/bq24157/bq24157.c ****         return -1;
 702:Lib/bq24157/bq24157.c ****     }
 703:Lib/bq24157/bq24157.c **** 
 704:Lib/bq24157/bq24157.c ****     return( temp & 0x01 );
 1576              		.loc 1 704 0
 1577 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1578 0014 00F00100 		and	r0, r0, #1
 1579              	.L144:
 705:Lib/bq24157/bq24157.c **** }
 1580              		.loc 1 705 0
 1581 0018 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 41


 1582              	.LCFI101:
 1583              		.cfi_remember_state
 1584              		.cfi_def_cfa_offset 4
 1585              		@ sp needed
 1586 001a 5DF804FB 		ldr	pc, [sp], #4
 1587              	.L145:
 1588              	.LCFI102:
 1589              		.cfi_restore_state
 701:Lib/bq24157/bq24157.c ****     }
 1590              		.loc 1 701 0
 1591 001e 4FF0FF30 		mov	r0, #-1
 1592 0022 F9E7     		b	.L144
 1593              		.cfi_endproc
 1594              	.LFE153:
 1596              		.section	.text.bq24157_setOtgPinEnable,"ax",%progbits
 1597              		.align	1
 1598              		.global	bq24157_setOtgPinEnable
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv4-sp-d16
 1604              	bq24157_setOtgPinEnable:
 1605              	.LFB154:
 706:Lib/bq24157/bq24157.c **** 
 707:Lib/bq24157/bq24157.c **** bool bq24157_setOtgPinEnable(bool enable)
 708:Lib/bq24157/bq24157.c **** {
 1606              		.loc 1 708 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 8
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL81:
 1611 0000 10B5     		push	{r4, lr}
 1612              	.LCFI103:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 4, -8
 1615              		.cfi_offset 14, -4
 1616 0002 82B0     		sub	sp, sp, #8
 1617              	.LCFI104:
 1618              		.cfi_def_cfa_offset 16
 1619 0004 0446     		mov	r4, r0
 709:Lib/bq24157/bq24157.c ****     uint8_t temp;
 710:Lib/bq24157/bq24157.c **** 
 711:Lib/bq24157/bq24157.c ****     // Read register memory location 0x02
 712:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_CONTROL_VOLTAGE_REG, &temp ) )
 1620              		.loc 1 712 0
 1621 0006 0DF10701 		add	r1, sp, #7
 1622 000a 0220     		movs	r0, #2
 1623              	.LVL82:
 1624 000c FFF7FEFF 		bl	bq24157_register_read
 1625              	.LVL83:
 1626 0010 0346     		mov	r3, r0
 1627 0012 10B9     		cbnz	r0, .L150
 1628              	.L148:
 713:Lib/bq24157/bq24157.c ****     {
 714:Lib/bq24157/bq24157.c ****         return false;
 715:Lib/bq24157/bq24157.c ****     }
 716:Lib/bq24157/bq24157.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 42


 717:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 0, enable);
 718:Lib/bq24157/bq24157.c **** 
 719:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x02
 720:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_CONTROL_VOLTAGE_REG, temp ) )
 721:Lib/bq24157/bq24157.c ****     {
 722:Lib/bq24157/bq24157.c ****         return false;
 723:Lib/bq24157/bq24157.c ****     }
 724:Lib/bq24157/bq24157.c **** 
 725:Lib/bq24157/bq24157.c ****     return true;
 726:Lib/bq24157/bq24157.c **** }
 1629              		.loc 1 726 0
 1630 0014 1846     		mov	r0, r3
 1631 0016 02B0     		add	sp, sp, #8
 1632              	.LCFI105:
 1633              		.cfi_remember_state
 1634              		.cfi_def_cfa_offset 8
 1635              		@ sp needed
 1636 0018 10BD     		pop	{r4, pc}
 1637              	.L150:
 1638              	.LCFI106:
 1639              		.cfi_restore_state
 717:Lib/bq24157/bq24157.c **** 
 1640              		.loc 1 717 0
 1641 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1642 001e 01F0FE01 		and	r1, r1, #254
 1643 0022 04F00104 		and	r4, r4, #1
 1644 0026 2143     		orrs	r1, r1, r4
 1645 0028 8DF80710 		strb	r1, [sp, #7]
 720:Lib/bq24157/bq24157.c ****     {
 1646              		.loc 1 720 0
 1647 002c 0220     		movs	r0, #2
 1648 002e FFF7FEFF 		bl	bq24157_register_write
 1649              	.LVL84:
 1650 0032 0346     		mov	r3, r0
 1651 0034 EEE7     		b	.L148
 1652              		.cfi_endproc
 1653              	.LFE154:
 1655              		.section	.text.bq24157_getVendorCode,"ax",%progbits
 1656              		.align	1
 1657              		.global	bq24157_getVendorCode
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv4-sp-d16
 1663              	bq24157_getVendorCode:
 1664              	.LFB155:
 727:Lib/bq24157/bq24157.c **** 
 728:Lib/bq24157/bq24157.c **** int8_t bq24157_getVendorCode(void)
 729:Lib/bq24157/bq24157.c **** {
 1665              		.loc 1 729 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 8
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669 0000 00B5     		push	{lr}
 1670              	.LCFI107:
 1671              		.cfi_def_cfa_offset 4
 1672              		.cfi_offset 14, -4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 43


 1673 0002 83B0     		sub	sp, sp, #12
 1674              	.LCFI108:
 1675              		.cfi_def_cfa_offset 16
 730:Lib/bq24157/bq24157.c ****     uint8_t temp;
 731:Lib/bq24157/bq24157.c **** 
 732:Lib/bq24157/bq24157.c ****     // Read register memory location 0x03
 733:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_VENDOR_PART_REV_REG, &temp ) )
 1676              		.loc 1 733 0
 1677 0004 0DF10701 		add	r1, sp, #7
 1678 0008 0320     		movs	r0, #3
 1679 000a FFF7FEFF 		bl	bq24157_register_read
 1680              	.LVL85:
 1681 000e 28B1     		cbz	r0, .L153
 734:Lib/bq24157/bq24157.c ****     {
 735:Lib/bq24157/bq24157.c ****         return -1;
 736:Lib/bq24157/bq24157.c ****     }
 737:Lib/bq24157/bq24157.c **** 
 738:Lib/bq24157/bq24157.c ****     return( ( temp >> 5 ) & 0x07 );
 1682              		.loc 1 738 0
 1683 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1684 0014 4009     		lsrs	r0, r0, #5
 1685              	.L152:
 739:Lib/bq24157/bq24157.c **** }
 1686              		.loc 1 739 0
 1687 0016 03B0     		add	sp, sp, #12
 1688              	.LCFI109:
 1689              		.cfi_remember_state
 1690              		.cfi_def_cfa_offset 4
 1691              		@ sp needed
 1692 0018 5DF804FB 		ldr	pc, [sp], #4
 1693              	.L153:
 1694              	.LCFI110:
 1695              		.cfi_restore_state
 735:Lib/bq24157/bq24157.c ****     }
 1696              		.loc 1 735 0
 1697 001c 4FF0FF30 		mov	r0, #-1
 1698 0020 F9E7     		b	.L152
 1699              		.cfi_endproc
 1700              	.LFE155:
 1702              		.section	.text.bq24157_getPartCode,"ax",%progbits
 1703              		.align	1
 1704              		.global	bq24157_getPartCode
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv4-sp-d16
 1710              	bq24157_getPartCode:
 1711              	.LFB156:
 740:Lib/bq24157/bq24157.c **** 
 741:Lib/bq24157/bq24157.c **** int8_t bq24157_getPartCode(void)
 742:Lib/bq24157/bq24157.c **** {
 1712              		.loc 1 742 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716 0000 00B5     		push	{lr}
 1717              	.LCFI111:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 44


 1718              		.cfi_def_cfa_offset 4
 1719              		.cfi_offset 14, -4
 1720 0002 83B0     		sub	sp, sp, #12
 1721              	.LCFI112:
 1722              		.cfi_def_cfa_offset 16
 743:Lib/bq24157/bq24157.c ****     uint8_t temp;
 744:Lib/bq24157/bq24157.c **** 
 745:Lib/bq24157/bq24157.c ****     // Read register memory location 0x03
 746:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_VENDOR_PART_REV_REG, &temp ) )
 1723              		.loc 1 746 0
 1724 0004 0DF10701 		add	r1, sp, #7
 1725 0008 0320     		movs	r0, #3
 1726 000a FFF7FEFF 		bl	bq24157_register_read
 1727              	.LVL86:
 1728 000e 30B1     		cbz	r0, .L157
 747:Lib/bq24157/bq24157.c ****     {
 748:Lib/bq24157/bq24157.c ****         return -1;
 749:Lib/bq24157/bq24157.c ****     }
 750:Lib/bq24157/bq24157.c **** 
 751:Lib/bq24157/bq24157.c ****     return( ( temp >> 3 ) & 0x03 );
 1729              		.loc 1 751 0
 1730 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1731 0014 C0F3C100 		ubfx	r0, r0, #3, #2
 1732              	.L156:
 752:Lib/bq24157/bq24157.c **** }
 1733              		.loc 1 752 0
 1734 0018 03B0     		add	sp, sp, #12
 1735              	.LCFI113:
 1736              		.cfi_remember_state
 1737              		.cfi_def_cfa_offset 4
 1738              		@ sp needed
 1739 001a 5DF804FB 		ldr	pc, [sp], #4
 1740              	.L157:
 1741              	.LCFI114:
 1742              		.cfi_restore_state
 748:Lib/bq24157/bq24157.c ****     }
 1743              		.loc 1 748 0
 1744 001e 4FF0FF30 		mov	r0, #-1
 1745 0022 F9E7     		b	.L156
 1746              		.cfi_endproc
 1747              	.LFE156:
 1749              		.section	.text.bq24157_getPartRevision,"ax",%progbits
 1750              		.align	1
 1751              		.global	bq24157_getPartRevision
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1755              		.fpu fpv4-sp-d16
 1757              	bq24157_getPartRevision:
 1758              	.LFB157:
 753:Lib/bq24157/bq24157.c **** 
 754:Lib/bq24157/bq24157.c **** int8_t bq24157_getPartRevision(void)
 755:Lib/bq24157/bq24157.c **** {
 1759              		.loc 1 755 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 8
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 45


 1763 0000 00B5     		push	{lr}
 1764              	.LCFI115:
 1765              		.cfi_def_cfa_offset 4
 1766              		.cfi_offset 14, -4
 1767 0002 83B0     		sub	sp, sp, #12
 1768              	.LCFI116:
 1769              		.cfi_def_cfa_offset 16
 756:Lib/bq24157/bq24157.c ****     uint8_t temp;
 757:Lib/bq24157/bq24157.c **** 
 758:Lib/bq24157/bq24157.c ****     // Read register memory location 0x03
 759:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_VENDOR_PART_REV_REG, &temp ) )
 1770              		.loc 1 759 0
 1771 0004 0DF10701 		add	r1, sp, #7
 1772 0008 0320     		movs	r0, #3
 1773 000a FFF7FEFF 		bl	bq24157_register_read
 1774              	.LVL87:
 1775 000e 30B1     		cbz	r0, .L161
 760:Lib/bq24157/bq24157.c ****     {
 761:Lib/bq24157/bq24157.c ****         return -1;
 762:Lib/bq24157/bq24157.c ****     }
 763:Lib/bq24157/bq24157.c **** 
 764:Lib/bq24157/bq24157.c ****     return( temp & 0x07 );
 1776              		.loc 1 764 0
 1777 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1778 0014 00F00700 		and	r0, r0, #7
 1779              	.L160:
 765:Lib/bq24157/bq24157.c **** }
 1780              		.loc 1 765 0
 1781 0018 03B0     		add	sp, sp, #12
 1782              	.LCFI117:
 1783              		.cfi_remember_state
 1784              		.cfi_def_cfa_offset 4
 1785              		@ sp needed
 1786 001a 5DF804FB 		ldr	pc, [sp], #4
 1787              	.L161:
 1788              	.LCFI118:
 1789              		.cfi_restore_state
 761:Lib/bq24157/bq24157.c ****     }
 1790              		.loc 1 761 0
 1791 001e 4FF0FF30 		mov	r0, #-1
 1792 0022 F9E7     		b	.L160
 1793              		.cfi_endproc
 1794              	.LFE157:
 1796              		.section	.text.bq24157_setReset,"ax",%progbits
 1797              		.align	1
 1798              		.global	bq24157_setReset
 1799              		.syntax unified
 1800              		.thumb
 1801              		.thumb_func
 1802              		.fpu fpv4-sp-d16
 1804              	bq24157_setReset:
 1805              	.LFB158:
 766:Lib/bq24157/bq24157.c **** 
 767:Lib/bq24157/bq24157.c **** bool bq24157_setReset(void)
 768:Lib/bq24157/bq24157.c **** {
 1806              		.loc 1 768 0
 1807              		.cfi_startproc
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 46


 1808              		@ args = 0, pretend = 0, frame = 8
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810 0000 00B5     		push	{lr}
 1811              	.LCFI119:
 1812              		.cfi_def_cfa_offset 4
 1813              		.cfi_offset 14, -4
 1814 0002 83B0     		sub	sp, sp, #12
 1815              	.LCFI120:
 1816              		.cfi_def_cfa_offset 16
 769:Lib/bq24157/bq24157.c ****     uint8_t temp;
 770:Lib/bq24157/bq24157.c **** 
 771:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
 772:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
 1817              		.loc 1 772 0
 1818 0004 0DF10701 		add	r1, sp, #7
 1819 0008 0420     		movs	r0, #4
 1820 000a FFF7FEFF 		bl	bq24157_register_read
 1821              	.LVL88:
 1822 000e 0346     		mov	r3, r0
 1823 0010 18B9     		cbnz	r0, .L166
 1824              	.L164:
 773:Lib/bq24157/bq24157.c ****     {
 774:Lib/bq24157/bq24157.c ****         return false;
 775:Lib/bq24157/bq24157.c ****     }
 776:Lib/bq24157/bq24157.c **** 
 777:Lib/bq24157/bq24157.c ****     // Set B7
 778:Lib/bq24157/bq24157.c ****     temp = temp | 0x80;
 779:Lib/bq24157/bq24157.c **** 
 780:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x04
 781:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_BATT_TERM_CURRENT_REG, temp ) )
 782:Lib/bq24157/bq24157.c ****     {
 783:Lib/bq24157/bq24157.c ****         return false;
 784:Lib/bq24157/bq24157.c ****     }
 785:Lib/bq24157/bq24157.c **** 
 786:Lib/bq24157/bq24157.c ****     return true;
 787:Lib/bq24157/bq24157.c **** }
 1825              		.loc 1 787 0
 1826 0012 1846     		mov	r0, r3
 1827 0014 03B0     		add	sp, sp, #12
 1828              	.LCFI121:
 1829              		.cfi_remember_state
 1830              		.cfi_def_cfa_offset 4
 1831              		@ sp needed
 1832 0016 5DF804FB 		ldr	pc, [sp], #4
 1833              	.L166:
 1834              	.LCFI122:
 1835              		.cfi_restore_state
 778:Lib/bq24157/bq24157.c **** 
 1836              		.loc 1 778 0
 1837 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1838 001e 41F08001 		orr	r1, r1, #128
 1839 0022 8DF80710 		strb	r1, [sp, #7]
 781:Lib/bq24157/bq24157.c ****     {
 1840              		.loc 1 781 0
 1841 0026 0420     		movs	r0, #4
 1842 0028 FFF7FEFF 		bl	bq24157_register_write
 1843              	.LVL89:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 47


 1844 002c 0346     		mov	r3, r0
 1845 002e F0E7     		b	.L164
 1846              		.cfi_endproc
 1847              	.LFE158:
 1849              		.section	.text.bq24157_getChargeCurrentSenseVoltage,"ax",%progbits
 1850              		.align	1
 1851              		.global	bq24157_getChargeCurrentSenseVoltage
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	bq24157_getChargeCurrentSenseVoltage:
 1858              	.LFB159:
 788:Lib/bq24157/bq24157.c **** 
 789:Lib/bq24157/bq24157.c **** int16_t bq24157_getChargeCurrentSenseVoltage(void)
 790:Lib/bq24157/bq24157.c **** {
 1859              		.loc 1 790 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 8
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863 0000 00B5     		push	{lr}
 1864              	.LCFI123:
 1865              		.cfi_def_cfa_offset 4
 1866              		.cfi_offset 14, -4
 1867 0002 83B0     		sub	sp, sp, #12
 1868              	.LCFI124:
 1869              		.cfi_def_cfa_offset 16
 791:Lib/bq24157/bq24157.c ****     uint8_t temp;
 792:Lib/bq24157/bq24157.c **** 
 793:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
 794:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
 1870              		.loc 1 794 0
 1871 0004 0DF10701 		add	r1, sp, #7
 1872 0008 0420     		movs	r0, #4
 1873 000a FFF7FEFF 		bl	bq24157_register_read
 1874              	.LVL90:
 1875 000e 60B1     		cbz	r0, .L169
 795:Lib/bq24157/bq24157.c ****     {
 796:Lib/bq24157/bq24157.c ****         return -1;
 797:Lib/bq24157/bq24157.c ****     }
 798:Lib/bq24157/bq24157.c **** 
 799:Lib/bq24157/bq24157.c ****     // Return the charge current sense voltage in unit of 0.1mV includes offset of 37.4mV
 800:Lib/bq24157/bq24157.c ****     return( ( ( temp >> 4 ) * 68 ) + 374 );
 1876              		.loc 1 800 0
 1877 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1878 0014 1B09     		lsrs	r3, r3, #4
 1879 0016 03EB0313 		add	r3, r3, r3, lsl #4
 1880 001a 9800     		lsls	r0, r3, #2
 1881 001c 80B2     		uxth	r0, r0
 1882 001e 00F5BB70 		add	r0, r0, #374
 1883 0022 00B2     		sxth	r0, r0
 1884              	.L168:
 801:Lib/bq24157/bq24157.c **** }
 1885              		.loc 1 801 0
 1886 0024 03B0     		add	sp, sp, #12
 1887              	.LCFI125:
 1888              		.cfi_remember_state
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 48


 1889              		.cfi_def_cfa_offset 4
 1890              		@ sp needed
 1891 0026 5DF804FB 		ldr	pc, [sp], #4
 1892              	.L169:
 1893              	.LCFI126:
 1894              		.cfi_restore_state
 796:Lib/bq24157/bq24157.c ****     }
 1895              		.loc 1 796 0
 1896 002a 4FF0FF30 		mov	r0, #-1
 1897 002e F9E7     		b	.L168
 1898              		.cfi_endproc
 1899              	.LFE159:
 1901              		.section	.text.bq24157_setChargeCurrentSenseVoltage,"ax",%progbits
 1902              		.align	1
 1903              		.global	bq24157_setChargeCurrentSenseVoltage
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv4-sp-d16
 1909              	bq24157_setChargeCurrentSenseVoltage:
 1910              	.LFB160:
 802:Lib/bq24157/bq24157.c **** 
 803:Lib/bq24157/bq24157.c **** bool bq24157_setChargeCurrentSenseVoltage(uint16_t voltage)
 804:Lib/bq24157/bq24157.c **** {
 1911              		.loc 1 804 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 8
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              	.LVL91:
 805:Lib/bq24157/bq24157.c ****     uint8_t temp;
 806:Lib/bq24157/bq24157.c **** 
 807:Lib/bq24157/bq24157.c ****     // Range check voltage.  Units are 0.1mV and range is 37.4mV to 90.4mV
 808:Lib/bq24157/bq24157.c ****     if( !( voltage >= 374 && voltage <= 904 ) )
 1916              		.loc 1 808 0
 1917 0000 A0F5BB73 		sub	r3, r0, #374
 1918 0004 9BB2     		uxth	r3, r3
 1919 0006 40F21222 		movw	r2, #530
 1920 000a 9342     		cmp	r3, r2
 1921 000c 02D9     		bls	.L178
 809:Lib/bq24157/bq24157.c ****     {
 810:Lib/bq24157/bq24157.c ****         return false;
 1922              		.loc 1 810 0
 1923 000e 0023     		movs	r3, #0
 811:Lib/bq24157/bq24157.c ****     }
 812:Lib/bq24157/bq24157.c **** 
 813:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
 814:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
 815:Lib/bq24157/bq24157.c ****     {
 816:Lib/bq24157/bq24157.c ****         return false;
 817:Lib/bq24157/bq24157.c ****     }
 818:Lib/bq24157/bq24157.c **** 
 819:Lib/bq24157/bq24157.c ****     temp &= 0x8F;
 820:Lib/bq24157/bq24157.c ****     temp |= ( ( voltage - 374 ) / 68 ) << 4;
 821:Lib/bq24157/bq24157.c **** 
 822:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x04
 823:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_BATT_TERM_CURRENT_REG, temp ) )
 824:Lib/bq24157/bq24157.c ****     {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 49


 825:Lib/bq24157/bq24157.c ****         return false;
 826:Lib/bq24157/bq24157.c ****     }
 827:Lib/bq24157/bq24157.c **** 
 828:Lib/bq24157/bq24157.c ****     return true;
 829:Lib/bq24157/bq24157.c **** }
 1924              		.loc 1 829 0
 1925 0010 1846     		mov	r0, r3
 1926              	.LVL92:
 1927 0012 7047     		bx	lr
 1928              	.LVL93:
 1929              	.L178:
 804:Lib/bq24157/bq24157.c ****     uint8_t temp;
 1930              		.loc 1 804 0
 1931 0014 10B5     		push	{r4, lr}
 1932              	.LCFI127:
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 4, -8
 1935              		.cfi_offset 14, -4
 1936 0016 82B0     		sub	sp, sp, #8
 1937              	.LCFI128:
 1938              		.cfi_def_cfa_offset 16
 1939 0018 0446     		mov	r4, r0
 814:Lib/bq24157/bq24157.c ****     {
 1940              		.loc 1 814 0
 1941 001a 0DF10701 		add	r1, sp, #7
 1942 001e 0420     		movs	r0, #4
 1943              	.LVL94:
 1944 0020 FFF7FEFF 		bl	bq24157_register_read
 1945              	.LVL95:
 1946 0024 0346     		mov	r3, r0
 1947 0026 10B9     		cbnz	r0, .L179
 1948              	.L172:
 1949              		.loc 1 829 0
 1950 0028 1846     		mov	r0, r3
 1951 002a 02B0     		add	sp, sp, #8
 1952              	.LCFI129:
 1953              		.cfi_remember_state
 1954              		.cfi_def_cfa_offset 8
 1955              		@ sp needed
 1956 002c 10BD     		pop	{r4, pc}
 1957              	.L179:
 1958              	.LCFI130:
 1959              		.cfi_restore_state
 819:Lib/bq24157/bq24157.c ****     temp |= ( ( voltage - 374 ) / 68 ) << 4;
 1960              		.loc 1 819 0
 1961 002e 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1962 0032 01F08F01 		and	r1, r1, #143
 820:Lib/bq24157/bq24157.c **** 
 1963              		.loc 1 820 0
 1964 0036 A4F5BB70 		sub	r0, r4, #374
 1965 003a 084C     		ldr	r4, .L180
 1966 003c 84FB0034 		smull	r3, r4, r4, r0
 1967 0040 C017     		asrs	r0, r0, #31
 1968 0042 C0EB6410 		rsb	r0, r0, r4, asr #5
 1969 0046 41EA0010 		orr	r0, r1, r0, lsl #4
 1970 004a C1B2     		uxtb	r1, r0
 1971 004c 8DF80710 		strb	r1, [sp, #7]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 50


 823:Lib/bq24157/bq24157.c ****     {
 1972              		.loc 1 823 0
 1973 0050 0420     		movs	r0, #4
 1974 0052 FFF7FEFF 		bl	bq24157_register_write
 1975              	.LVL96:
 1976 0056 0346     		mov	r3, r0
 1977 0058 E6E7     		b	.L172
 1978              	.L181:
 1979 005a 00BF     		.align	2
 1980              	.L180:
 1981 005c 79787878 		.word	2021161081
 1982              		.cfi_endproc
 1983              	.LFE160:
 1985              		.section	.text.bq24157_getTermCurrentSenseVoltage,"ax",%progbits
 1986              		.align	1
 1987              		.global	bq24157_getTermCurrentSenseVoltage
 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1991              		.fpu fpv4-sp-d16
 1993              	bq24157_getTermCurrentSenseVoltage:
 1994              	.LFB161:
 830:Lib/bq24157/bq24157.c **** 
 831:Lib/bq24157/bq24157.c **** int16_t bq24157_getTermCurrentSenseVoltage(void)
 832:Lib/bq24157/bq24157.c **** {
 1995              		.loc 1 832 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 8
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999 0000 00B5     		push	{lr}
 2000              	.LCFI131:
 2001              		.cfi_def_cfa_offset 4
 2002              		.cfi_offset 14, -4
 2003 0002 83B0     		sub	sp, sp, #12
 2004              	.LCFI132:
 2005              		.cfi_def_cfa_offset 16
 833:Lib/bq24157/bq24157.c ****     uint8_t temp;
 834:Lib/bq24157/bq24157.c **** 
 835:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
 836:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
 2006              		.loc 1 836 0
 2007 0004 0DF10701 		add	r1, sp, #7
 2008 0008 0420     		movs	r0, #4
 2009 000a FFF7FEFF 		bl	bq24157_register_read
 2010              	.LVL97:
 2011 000e 58B1     		cbz	r0, .L184
 837:Lib/bq24157/bq24157.c ****     {
 838:Lib/bq24157/bq24157.c ****         return -1;
 839:Lib/bq24157/bq24157.c ****     }
 840:Lib/bq24157/bq24157.c **** 
 841:Lib/bq24157/bq24157.c ****     temp &= 0x07;
 2012              		.loc 1 841 0
 2013 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2014 0014 03F00703 		and	r3, r3, #7
 842:Lib/bq24157/bq24157.c **** 
 843:Lib/bq24157/bq24157.c ****     // Return the charge current sense voltage in unit of 0.1mV offset 3.4mV
 844:Lib/bq24157/bq24157.c ****     return( ( temp * 34 ) + 34 );
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 51


 2015              		.loc 1 844 0
 2016 0018 0133     		adds	r3, r3, #1
 2017 001a 03EB0313 		add	r3, r3, r3, lsl #4
 2018 001e 5800     		lsls	r0, r3, #1
 2019 0020 00B2     		sxth	r0, r0
 2020              	.L183:
 845:Lib/bq24157/bq24157.c **** }
 2021              		.loc 1 845 0
 2022 0022 03B0     		add	sp, sp, #12
 2023              	.LCFI133:
 2024              		.cfi_remember_state
 2025              		.cfi_def_cfa_offset 4
 2026              		@ sp needed
 2027 0024 5DF804FB 		ldr	pc, [sp], #4
 2028              	.L184:
 2029              	.LCFI134:
 2030              		.cfi_restore_state
 838:Lib/bq24157/bq24157.c ****     }
 2031              		.loc 1 838 0
 2032 0028 4FF0FF30 		mov	r0, #-1
 2033 002c F9E7     		b	.L183
 2034              		.cfi_endproc
 2035              	.LFE161:
 2037              		.section	.text.bq24157_setTermCurrentSenseVoltage,"ax",%progbits
 2038              		.align	1
 2039              		.global	bq24157_setTermCurrentSenseVoltage
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv4-sp-d16
 2045              	bq24157_setTermCurrentSenseVoltage:
 2046              	.LFB162:
 846:Lib/bq24157/bq24157.c **** 
 847:Lib/bq24157/bq24157.c **** bool bq24157_setTermCurrentSenseVoltage(uint16_t voltage)
 848:Lib/bq24157/bq24157.c **** {
 2047              		.loc 1 848 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 8
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              	.LVL98:
 849:Lib/bq24157/bq24157.c ****     uint8_t temp;
 850:Lib/bq24157/bq24157.c ****     
 851:Lib/bq24157/bq24157.c ****     // Range check voltage.  Units are 0.1mV and range is 3.4mV to 27.2mV
 852:Lib/bq24157/bq24157.c ****     if( !( voltage >= 34 && voltage <= 272 ) )
 2052              		.loc 1 852 0
 2053 0000 A0F12203 		sub	r3, r0, #34
 2054 0004 9BB2     		uxth	r3, r3
 2055 0006 EE2B     		cmp	r3, #238
 2056 0008 02D9     		bls	.L193
 853:Lib/bq24157/bq24157.c ****     {
 854:Lib/bq24157/bq24157.c ****         return false;
 2057              		.loc 1 854 0
 2058 000a 0023     		movs	r3, #0
 855:Lib/bq24157/bq24157.c ****     }
 856:Lib/bq24157/bq24157.c **** 
 857:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
 858:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 52


 859:Lib/bq24157/bq24157.c ****     {
 860:Lib/bq24157/bq24157.c ****         return false;
 861:Lib/bq24157/bq24157.c ****     }
 862:Lib/bq24157/bq24157.c **** 
 863:Lib/bq24157/bq24157.c ****     temp &= 0xF8;
 864:Lib/bq24157/bq24157.c ****     temp |= ( ( voltage - 34 ) / 34 );
 865:Lib/bq24157/bq24157.c **** 
 866:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x04
 867:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_BATT_TERM_CURRENT_REG, temp ) )
 868:Lib/bq24157/bq24157.c ****     {
 869:Lib/bq24157/bq24157.c ****         return false;
 870:Lib/bq24157/bq24157.c ****     }
 871:Lib/bq24157/bq24157.c **** 
 872:Lib/bq24157/bq24157.c ****     return true;
 873:Lib/bq24157/bq24157.c **** }
 2059              		.loc 1 873 0
 2060 000c 1846     		mov	r0, r3
 2061              	.LVL99:
 2062 000e 7047     		bx	lr
 2063              	.LVL100:
 2064              	.L193:
 848:Lib/bq24157/bq24157.c ****     uint8_t temp;
 2065              		.loc 1 848 0
 2066 0010 10B5     		push	{r4, lr}
 2067              	.LCFI135:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 4, -8
 2070              		.cfi_offset 14, -4
 2071 0012 82B0     		sub	sp, sp, #8
 2072              	.LCFI136:
 2073              		.cfi_def_cfa_offset 16
 2074 0014 0446     		mov	r4, r0
 858:Lib/bq24157/bq24157.c ****     {
 2075              		.loc 1 858 0
 2076 0016 0DF10701 		add	r1, sp, #7
 2077 001a 0420     		movs	r0, #4
 2078              	.LVL101:
 2079 001c FFF7FEFF 		bl	bq24157_register_read
 2080              	.LVL102:
 2081 0020 0346     		mov	r3, r0
 2082 0022 10B9     		cbnz	r0, .L194
 2083              	.L187:
 2084              		.loc 1 873 0
 2085 0024 1846     		mov	r0, r3
 2086 0026 02B0     		add	sp, sp, #8
 2087              	.LCFI137:
 2088              		.cfi_remember_state
 2089              		.cfi_def_cfa_offset 8
 2090              		@ sp needed
 2091 0028 10BD     		pop	{r4, pc}
 2092              	.L194:
 2093              	.LCFI138:
 2094              		.cfi_restore_state
 863:Lib/bq24157/bq24157.c ****     temp |= ( ( voltage - 34 ) / 34 );
 2095              		.loc 1 863 0
 2096 002a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2097 002e 01F0F803 		and	r3, r1, #248
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 53


 864:Lib/bq24157/bq24157.c **** 
 2098              		.loc 1 864 0
 2099 0032 A4F12200 		sub	r0, r4, #34
 2100 0036 0749     		ldr	r1, .L195
 2101 0038 81FB0021 		smull	r2, r1, r1, r0
 2102 003c C017     		asrs	r0, r0, #31
 2103 003e C0EB2111 		rsb	r1, r0, r1, asr #4
 2104 0042 1943     		orrs	r1, r1, r3
 2105 0044 C9B2     		uxtb	r1, r1
 2106 0046 8DF80710 		strb	r1, [sp, #7]
 867:Lib/bq24157/bq24157.c ****     {
 2107              		.loc 1 867 0
 2108 004a 0420     		movs	r0, #4
 2109 004c FFF7FEFF 		bl	bq24157_register_write
 2110              	.LVL103:
 2111 0050 0346     		mov	r3, r0
 2112 0052 E7E7     		b	.L187
 2113              	.L196:
 2114              		.align	2
 2115              	.L195:
 2116 0054 79787878 		.word	2021161081
 2117              		.cfi_endproc
 2118              	.LFE162:
 2120              		.section	.text.bq24157_init,"ax",%progbits
 2121              		.align	1
 2122              		.global	bq24157_init
 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu fpv4-sp-d16
 2128              	bq24157_init:
 2129              	.LFB126:
  43:Lib/bq24157/bq24157.c ****     if( !bq24157_setReset() )
 2130              		.loc 1 43 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 2134              	.LVL104:
 2135 0000 70B5     		push	{r4, r5, r6, lr}
 2136              	.LCFI139:
 2137              		.cfi_def_cfa_offset 16
 2138              		.cfi_offset 4, -16
 2139              		.cfi_offset 5, -12
 2140              		.cfi_offset 6, -8
 2141              		.cfi_offset 14, -4
 2142 0002 0446     		mov	r4, r0
 2143 0004 0D46     		mov	r5, r1
 2144 0006 1646     		mov	r6, r2
  44:Lib/bq24157/bq24157.c ****     {
 2145              		.loc 1 44 0
 2146 0008 FFF7FEFF 		bl	bq24157_setReset
 2147              	.LVL105:
 2148 000c 0346     		mov	r3, r0
 2149 000e 08B9     		cbnz	r0, .L200
 2150              	.L198:
  85:Lib/bq24157/bq24157.c **** 
 2151              		.loc 1 85 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 54


 2152 0010 1846     		mov	r0, r3
 2153 0012 70BD     		pop	{r4, r5, r6, pc}
 2154              	.L200:
  49:Lib/bq24157/bq24157.c ****     {
 2155              		.loc 1 49 0
 2156 0014 2046     		mov	r0, r4
 2157 0016 FFF7FEFF 		bl	bq24157_setRSense
 2158              	.LVL106:
 2159 001a 0346     		mov	r3, r0
 2160 001c 0028     		cmp	r0, #0
 2161 001e F7D0     		beq	.L198
  54:Lib/bq24157/bq24157.c ****     {
 2162              		.loc 1 54 0
 2163 0020 2846     		mov	r0, r5
 2164 0022 FFF7FEFF 		bl	bq24157_setBatteryRegulationVoltage
 2165              	.LVL107:
 2166 0026 0346     		mov	r3, r0
 2167 0028 0028     		cmp	r0, #0
 2168 002a F1D0     		beq	.L198
  59:Lib/bq24157/bq24157.c ****     {
 2169              		.loc 1 59 0
 2170 002c 04FB06F4 		mul	r4, r4, r6
 2171 0030 1148     		ldr	r0, .L201
 2172 0032 80FB0430 		smull	r3, r0, r0, r4
 2173 0036 E417     		asrs	r4, r4, #31
 2174 0038 C4EB6010 		rsb	r0, r4, r0, asr #5
 2175 003c 80B2     		uxth	r0, r0
 2176 003e FFF7FEFF 		bl	bq24157_setChargeCurrentSenseVoltage
 2177              	.LVL108:
 2178 0042 0346     		mov	r3, r0
 2179 0044 0028     		cmp	r0, #0
 2180 0046 E3D0     		beq	.L198
  64:Lib/bq24157/bq24157.c ****     {
 2181              		.loc 1 64 0
 2182 0048 0120     		movs	r0, #1
 2183 004a FFF7FEFF 		bl	bq24157_setInputCurrentLimit
 2184              	.LVL109:
 2185 004e 0346     		mov	r3, r0
 2186 0050 0028     		cmp	r0, #0
 2187 0052 DDD0     		beq	.L198
  69:Lib/bq24157/bq24157.c ****     {
 2188              		.loc 1 69 0
 2189 0054 2220     		movs	r0, #34
 2190 0056 FFF7FEFF 		bl	bq24157_setTermCurrentSenseVoltage
 2191              	.LVL110:
 2192 005a 0346     		mov	r3, r0
 2193 005c 0028     		cmp	r0, #0
 2194 005e D7D0     		beq	.L198
  74:Lib/bq24157/bq24157.c ****     {
 2195              		.loc 1 74 0
 2196 0060 0120     		movs	r0, #1
 2197 0062 FFF7FEFF 		bl	bq24157_setChargeCurrentTerm
 2198              	.LVL111:
 2199 0066 0346     		mov	r3, r0
 2200 0068 0028     		cmp	r0, #0
 2201 006a D1D0     		beq	.L198
  79:Lib/bq24157/bq24157.c ****     {
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 55


 2202              		.loc 1 79 0
 2203 006c 40F6AC50 		movw	r0, #3500
 2204 0070 FFF7FEFF 		bl	bq24157_setWeakBatteryThreshold
 2205              	.LVL112:
 2206 0074 0346     		mov	r3, r0
 2207 0076 CBE7     		b	.L198
 2208              	.L202:
 2209              		.align	2
 2210              	.L201:
 2211 0078 1F85EB51 		.word	1374389535
 2212              		.cfi_endproc
 2213              	.LFE126:
 2215              		.section	.text.bq24157_getLowChargeCurrentSenseVoltage,"ax",%progbits
 2216              		.align	1
 2217              		.global	bq24157_getLowChargeCurrentSenseVoltage
 2218              		.syntax unified
 2219              		.thumb
 2220              		.thumb_func
 2221              		.fpu fpv4-sp-d16
 2223              	bq24157_getLowChargeCurrentSenseVoltage:
 2224              	.LFB163:
 874:Lib/bq24157/bq24157.c **** 
 875:Lib/bq24157/bq24157.c **** int8_t bq24157_getLowChargeCurrentSenseVoltage(void)
 876:Lib/bq24157/bq24157.c **** {
 2225              		.loc 1 876 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 8
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 2229 0000 00B5     		push	{lr}
 2230              	.LCFI140:
 2231              		.cfi_def_cfa_offset 4
 2232              		.cfi_offset 14, -4
 2233 0002 83B0     		sub	sp, sp, #12
 2234              	.LCFI141:
 2235              		.cfi_def_cfa_offset 16
 877:Lib/bq24157/bq24157.c ****     uint8_t temp;
 878:Lib/bq24157/bq24157.c **** 
 879:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 880:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 2236              		.loc 1 880 0
 2237 0004 0DF10701 		add	r1, sp, #7
 2238 0008 0520     		movs	r0, #5
 2239 000a FFF7FEFF 		bl	bq24157_register_read
 2240              	.LVL113:
 2241 000e 30B1     		cbz	r0, .L205
 881:Lib/bq24157/bq24157.c ****     {
 882:Lib/bq24157/bq24157.c ****         return -1;
 883:Lib/bq24157/bq24157.c ****     }
 884:Lib/bq24157/bq24157.c **** 
 885:Lib/bq24157/bq24157.c ****     return( ( temp >> 5 ) & 0x01 );
 2242              		.loc 1 885 0
 2243 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2244 0014 C0F34010 		ubfx	r0, r0, #5, #1
 2245              	.L204:
 886:Lib/bq24157/bq24157.c **** }
 2246              		.loc 1 886 0
 2247 0018 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 56


 2248              	.LCFI142:
 2249              		.cfi_remember_state
 2250              		.cfi_def_cfa_offset 4
 2251              		@ sp needed
 2252 001a 5DF804FB 		ldr	pc, [sp], #4
 2253              	.L205:
 2254              	.LCFI143:
 2255              		.cfi_restore_state
 882:Lib/bq24157/bq24157.c ****     }
 2256              		.loc 1 882 0
 2257 001e 4FF0FF30 		mov	r0, #-1
 2258 0022 F9E7     		b	.L204
 2259              		.cfi_endproc
 2260              	.LFE163:
 2262              		.section	.text.bq24157_setLowChargeCurrentSenseVoltage,"ax",%progbits
 2263              		.align	1
 2264              		.global	bq24157_setLowChargeCurrentSenseVoltage
 2265              		.syntax unified
 2266              		.thumb
 2267              		.thumb_func
 2268              		.fpu fpv4-sp-d16
 2270              	bq24157_setLowChargeCurrentSenseVoltage:
 2271              	.LFB164:
 887:Lib/bq24157/bq24157.c **** 
 888:Lib/bq24157/bq24157.c **** bool bq24157_setLowChargeCurrentSenseVoltage(bool low_chg)
 889:Lib/bq24157/bq24157.c **** {
 2272              		.loc 1 889 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 8
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	.LVL114:
 2277 0000 10B5     		push	{r4, lr}
 2278              	.LCFI144:
 2279              		.cfi_def_cfa_offset 8
 2280              		.cfi_offset 4, -8
 2281              		.cfi_offset 14, -4
 2282 0002 82B0     		sub	sp, sp, #8
 2283              	.LCFI145:
 2284              		.cfi_def_cfa_offset 16
 2285 0004 0446     		mov	r4, r0
 890:Lib/bq24157/bq24157.c ****     uint8_t temp;
 891:Lib/bq24157/bq24157.c **** 
 892:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 893:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 2286              		.loc 1 893 0
 2287 0006 0DF10701 		add	r1, sp, #7
 2288 000a 0520     		movs	r0, #5
 2289              	.LVL115:
 2290 000c FFF7FEFF 		bl	bq24157_register_read
 2291              	.LVL116:
 2292 0010 0346     		mov	r3, r0
 2293 0012 10B9     		cbnz	r0, .L210
 2294              	.L208:
 894:Lib/bq24157/bq24157.c ****     {
 895:Lib/bq24157/bq24157.c ****         return false;
 896:Lib/bq24157/bq24157.c ****     }
 897:Lib/bq24157/bq24157.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 57


 898:Lib/bq24157/bq24157.c ****     temp = MOD_BIT( temp, 5, low_chg );
 899:Lib/bq24157/bq24157.c **** 
 900:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x05
 901:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_SPEC_CHRG_EN_PIN_REG, temp ) )
 902:Lib/bq24157/bq24157.c ****     {
 903:Lib/bq24157/bq24157.c ****         return false;
 904:Lib/bq24157/bq24157.c ****     }
 905:Lib/bq24157/bq24157.c **** 
 906:Lib/bq24157/bq24157.c ****     return true;
 907:Lib/bq24157/bq24157.c **** }
 2295              		.loc 1 907 0
 2296 0014 1846     		mov	r0, r3
 2297 0016 02B0     		add	sp, sp, #8
 2298              	.LCFI146:
 2299              		.cfi_remember_state
 2300              		.cfi_def_cfa_offset 8
 2301              		@ sp needed
 2302 0018 10BD     		pop	{r4, pc}
 2303              	.L210:
 2304              	.LCFI147:
 2305              		.cfi_restore_state
 898:Lib/bq24157/bq24157.c **** 
 2306              		.loc 1 898 0
 2307 001a 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2308 001e 01F0DF01 		and	r1, r1, #223
 2309 0022 6442     		negs	r4, r4
 2310 0024 04F02004 		and	r4, r4, #32
 2311 0028 2143     		orrs	r1, r1, r4
 2312 002a 8DF80710 		strb	r1, [sp, #7]
 901:Lib/bq24157/bq24157.c ****     {
 2313              		.loc 1 901 0
 2314 002e 0520     		movs	r0, #5
 2315 0030 FFF7FEFF 		bl	bq24157_register_write
 2316              	.LVL117:
 2317 0034 0346     		mov	r3, r0
 2318 0036 EDE7     		b	.L208
 2319              		.cfi_endproc
 2320              	.LFE164:
 2322              		.section	.text.bq24157_getDpmStatus,"ax",%progbits
 2323              		.align	1
 2324              		.global	bq24157_getDpmStatus
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv4-sp-d16
 2330              	bq24157_getDpmStatus:
 2331              	.LFB165:
 908:Lib/bq24157/bq24157.c **** 
 909:Lib/bq24157/bq24157.c **** int8_t bq24157_getDpmStatus(void)
 910:Lib/bq24157/bq24157.c **** {
 2332              		.loc 1 910 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 8
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336 0000 00B5     		push	{lr}
 2337              	.LCFI148:
 2338              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 58


 2339              		.cfi_offset 14, -4
 2340 0002 83B0     		sub	sp, sp, #12
 2341              	.LCFI149:
 2342              		.cfi_def_cfa_offset 16
 911:Lib/bq24157/bq24157.c ****     uint8_t temp;
 912:Lib/bq24157/bq24157.c **** 
 913:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 914:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 2343              		.loc 1 914 0
 2344 0004 0DF10701 		add	r1, sp, #7
 2345 0008 0520     		movs	r0, #5
 2346 000a FFF7FEFF 		bl	bq24157_register_read
 2347              	.LVL118:
 2348 000e 30B1     		cbz	r0, .L213
 915:Lib/bq24157/bq24157.c ****     {
 916:Lib/bq24157/bq24157.c ****         return -1;
 917:Lib/bq24157/bq24157.c ****     }
 918:Lib/bq24157/bq24157.c **** 
 919:Lib/bq24157/bq24157.c ****     return( ( temp >> 4 ) & 0x01 );
 2349              		.loc 1 919 0
 2350 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2351 0014 C0F30010 		ubfx	r0, r0, #4, #1
 2352              	.L212:
 920:Lib/bq24157/bq24157.c **** }
 2353              		.loc 1 920 0
 2354 0018 03B0     		add	sp, sp, #12
 2355              	.LCFI150:
 2356              		.cfi_remember_state
 2357              		.cfi_def_cfa_offset 4
 2358              		@ sp needed
 2359 001a 5DF804FB 		ldr	pc, [sp], #4
 2360              	.L213:
 2361              	.LCFI151:
 2362              		.cfi_restore_state
 916:Lib/bq24157/bq24157.c ****     }
 2363              		.loc 1 916 0
 2364 001e 4FF0FF30 		mov	r0, #-1
 2365 0022 F9E7     		b	.L212
 2366              		.cfi_endproc
 2367              	.LFE165:
 2369              		.section	.text.bq24157_getCdStatus,"ax",%progbits
 2370              		.align	1
 2371              		.global	bq24157_getCdStatus
 2372              		.syntax unified
 2373              		.thumb
 2374              		.thumb_func
 2375              		.fpu fpv4-sp-d16
 2377              	bq24157_getCdStatus:
 2378              	.LFB166:
 921:Lib/bq24157/bq24157.c **** 
 922:Lib/bq24157/bq24157.c **** int8_t bq24157_getCdStatus(void)
 923:Lib/bq24157/bq24157.c **** {
 2379              		.loc 1 923 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 8
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383 0000 00B5     		push	{lr}
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 59


 2384              	.LCFI152:
 2385              		.cfi_def_cfa_offset 4
 2386              		.cfi_offset 14, -4
 2387 0002 83B0     		sub	sp, sp, #12
 2388              	.LCFI153:
 2389              		.cfi_def_cfa_offset 16
 924:Lib/bq24157/bq24157.c ****     uint8_t temp;
 925:Lib/bq24157/bq24157.c **** 
 926:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 927:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 2390              		.loc 1 927 0
 2391 0004 0DF10701 		add	r1, sp, #7
 2392 0008 0520     		movs	r0, #5
 2393 000a FFF7FEFF 		bl	bq24157_register_read
 2394              	.LVL119:
 2395 000e 30B1     		cbz	r0, .L217
 928:Lib/bq24157/bq24157.c ****     {
 929:Lib/bq24157/bq24157.c ****         return -1;
 930:Lib/bq24157/bq24157.c ****     }
 931:Lib/bq24157/bq24157.c **** 
 932:Lib/bq24157/bq24157.c ****     return( ( temp >> 3 ) & 0x01 );
 2396              		.loc 1 932 0
 2397 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2398 0014 C0F3C000 		ubfx	r0, r0, #3, #1
 2399              	.L216:
 933:Lib/bq24157/bq24157.c **** }
 2400              		.loc 1 933 0
 2401 0018 03B0     		add	sp, sp, #12
 2402              	.LCFI154:
 2403              		.cfi_remember_state
 2404              		.cfi_def_cfa_offset 4
 2405              		@ sp needed
 2406 001a 5DF804FB 		ldr	pc, [sp], #4
 2407              	.L217:
 2408              	.LCFI155:
 2409              		.cfi_restore_state
 929:Lib/bq24157/bq24157.c ****     }
 2410              		.loc 1 929 0
 2411 001e 4FF0FF30 		mov	r0, #-1
 2412 0022 F9E7     		b	.L216
 2413              		.cfi_endproc
 2414              	.LFE166:
 2416              		.section	.text.bq24157_getSpecialChargerVoltage,"ax",%progbits
 2417              		.align	1
 2418              		.global	bq24157_getSpecialChargerVoltage
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu fpv4-sp-d16
 2424              	bq24157_getSpecialChargerVoltage:
 2425              	.LFB167:
 934:Lib/bq24157/bq24157.c **** 
 935:Lib/bq24157/bq24157.c **** int16_t bq24157_getSpecialChargerVoltage(void)
 936:Lib/bq24157/bq24157.c **** {
 2426              		.loc 1 936 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 60


 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430 0000 00B5     		push	{lr}
 2431              	.LCFI156:
 2432              		.cfi_def_cfa_offset 4
 2433              		.cfi_offset 14, -4
 2434 0002 83B0     		sub	sp, sp, #12
 2435              	.LCFI157:
 2436              		.cfi_def_cfa_offset 16
 937:Lib/bq24157/bq24157.c ****     uint8_t temp;
 938:Lib/bq24157/bq24157.c **** 
 939:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 940:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 2437              		.loc 1 940 0
 2438 0004 0DF10701 		add	r1, sp, #7
 2439 0008 0520     		movs	r0, #5
 2440 000a FFF7FEFF 		bl	bq24157_register_read
 2441              	.LVL120:
 2442 000e 68B1     		cbz	r0, .L221
 941:Lib/bq24157/bq24157.c ****     {
 942:Lib/bq24157/bq24157.c ****         return -1;
 943:Lib/bq24157/bq24157.c ****     }
 944:Lib/bq24157/bq24157.c **** 
 945:Lib/bq24157/bq24157.c ****     // Special charger voltage in mV offset of 4200mV
 946:Lib/bq24157/bq24157.c ****     return( ( ( (int16_t)(temp) & 0x07 ) * 80 ) + 4200 );
 2443              		.loc 1 946 0
 2444 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2445 0014 03F00703 		and	r3, r3, #7
 2446 0018 03EB8303 		add	r3, r3, r3, lsl #2
 2447 001c 1801     		lsls	r0, r3, #4
 2448 001e 00F58350 		add	r0, r0, #4192
 2449 0022 0830     		adds	r0, r0, #8
 2450 0024 00B2     		sxth	r0, r0
 2451              	.L220:
 947:Lib/bq24157/bq24157.c **** }
 2452              		.loc 1 947 0
 2453 0026 03B0     		add	sp, sp, #12
 2454              	.LCFI158:
 2455              		.cfi_remember_state
 2456              		.cfi_def_cfa_offset 4
 2457              		@ sp needed
 2458 0028 5DF804FB 		ldr	pc, [sp], #4
 2459              	.L221:
 2460              	.LCFI159:
 2461              		.cfi_restore_state
 942:Lib/bq24157/bq24157.c ****     }
 2462              		.loc 1 942 0
 2463 002c 4FF0FF30 		mov	r0, #-1
 2464 0030 F9E7     		b	.L220
 2465              		.cfi_endproc
 2466              	.LFE167:
 2468              		.section	.text.bq24157_setSpecialChargerVoltage,"ax",%progbits
 2469              		.align	1
 2470              		.global	bq24157_setSpecialChargerVoltage
 2471              		.syntax unified
 2472              		.thumb
 2473              		.thumb_func
 2474              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 61


 2476              	bq24157_setSpecialChargerVoltage:
 2477              	.LFB168:
 948:Lib/bq24157/bq24157.c **** 
 949:Lib/bq24157/bq24157.c **** bool bq24157_setSpecialChargerVoltage(uint16_t voltage)
 950:Lib/bq24157/bq24157.c **** {
 2478              		.loc 1 950 0
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 8
 2481              		@ frame_needed = 0, uses_anonymous_args = 0
 2482              	.LVL121:
 951:Lib/bq24157/bq24157.c ****     uint8_t temp;
 952:Lib/bq24157/bq24157.c **** 
 953:Lib/bq24157/bq24157.c ****     // Range check voltage.  Units are mV and allowed range is 4.2V-4.76V
 954:Lib/bq24157/bq24157.c ****     if( !( voltage >= 4200 && voltage <= 4760 ) )
 2483              		.loc 1 954 0
 2484 0000 A0F58353 		sub	r3, r0, #4192
 2485 0004 083B     		subs	r3, r3, #8
 2486 0006 9BB2     		uxth	r3, r3
 2487 0008 B3F50C7F 		cmp	r3, #560
 2488 000c 02D9     		bls	.L230
 955:Lib/bq24157/bq24157.c ****     {
 956:Lib/bq24157/bq24157.c ****         return false;
 2489              		.loc 1 956 0
 2490 000e 0023     		movs	r3, #0
 957:Lib/bq24157/bq24157.c ****     }
 958:Lib/bq24157/bq24157.c **** 
 959:Lib/bq24157/bq24157.c ****     // Read register memory location 0x05
 960:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SPEC_CHRG_EN_PIN_REG, &temp ) )
 961:Lib/bq24157/bq24157.c ****     {
 962:Lib/bq24157/bq24157.c ****         return false;
 963:Lib/bq24157/bq24157.c ****     }
 964:Lib/bq24157/bq24157.c **** 
 965:Lib/bq24157/bq24157.c ****     temp = temp | ( ( ( voltage - 4200 ) / 80 ) & 0xFF );
 966:Lib/bq24157/bq24157.c **** 
 967:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x05
 968:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_SPEC_CHRG_EN_PIN_REG, temp ) )
 969:Lib/bq24157/bq24157.c ****     {
 970:Lib/bq24157/bq24157.c ****         return false;
 971:Lib/bq24157/bq24157.c ****     }
 972:Lib/bq24157/bq24157.c **** 
 973:Lib/bq24157/bq24157.c ****     return true;
 974:Lib/bq24157/bq24157.c **** }
 2491              		.loc 1 974 0
 2492 0010 1846     		mov	r0, r3
 2493              	.LVL122:
 2494 0012 7047     		bx	lr
 2495              	.LVL123:
 2496              	.L230:
 950:Lib/bq24157/bq24157.c ****     uint8_t temp;
 2497              		.loc 1 950 0
 2498 0014 10B5     		push	{r4, lr}
 2499              	.LCFI160:
 2500              		.cfi_def_cfa_offset 8
 2501              		.cfi_offset 4, -8
 2502              		.cfi_offset 14, -4
 2503 0016 82B0     		sub	sp, sp, #8
 2504              	.LCFI161:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 62


 2505              		.cfi_def_cfa_offset 16
 2506 0018 0446     		mov	r4, r0
 960:Lib/bq24157/bq24157.c ****     {
 2507              		.loc 1 960 0
 2508 001a 0DF10701 		add	r1, sp, #7
 2509 001e 0520     		movs	r0, #5
 2510              	.LVL124:
 2511 0020 FFF7FEFF 		bl	bq24157_register_read
 2512              	.LVL125:
 2513 0024 0346     		mov	r3, r0
 2514 0026 10B9     		cbnz	r0, .L231
 2515              	.L224:
 2516              		.loc 1 974 0
 2517 0028 1846     		mov	r0, r3
 2518 002a 02B0     		add	sp, sp, #8
 2519              	.LCFI162:
 2520              		.cfi_remember_state
 2521              		.cfi_def_cfa_offset 8
 2522              		@ sp needed
 2523 002c 10BD     		pop	{r4, pc}
 2524              	.L231:
 2525              	.LCFI163:
 2526              		.cfi_restore_state
 965:Lib/bq24157/bq24157.c **** 
 2527              		.loc 1 965 0
 2528 002e A4F58350 		sub	r0, r4, #4192
 2529 0032 0838     		subs	r0, r0, #8
 2530 0034 0849     		ldr	r1, .L232
 2531 0036 81FB0031 		smull	r3, r1, r1, r0
 2532 003a C017     		asrs	r0, r0, #31
 2533 003c C0EB6110 		rsb	r0, r0, r1, asr #5
 2534 0040 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2535 0044 0843     		orrs	r0, r0, r1
 2536 0046 C1B2     		uxtb	r1, r0
 2537 0048 8DF80710 		strb	r1, [sp, #7]
 968:Lib/bq24157/bq24157.c ****     {
 2538              		.loc 1 968 0
 2539 004c 0520     		movs	r0, #5
 2540 004e FFF7FEFF 		bl	bq24157_register_write
 2541              	.LVL126:
 2542 0052 0346     		mov	r3, r0
 2543 0054 E8E7     		b	.L224
 2544              	.L233:
 2545 0056 00BF     		.align	2
 2546              	.L232:
 2547 0058 67666666 		.word	1717986919
 2548              		.cfi_endproc
 2549              	.LFE168:
 2551              		.section	.text.bq24157_getMaxChargeCurrentSenseVoltage,"ax",%progbits
 2552              		.align	1
 2553              		.global	bq24157_getMaxChargeCurrentSenseVoltage
 2554              		.syntax unified
 2555              		.thumb
 2556              		.thumb_func
 2557              		.fpu fpv4-sp-d16
 2559              	bq24157_getMaxChargeCurrentSenseVoltage:
 2560              	.LFB169:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 63


 975:Lib/bq24157/bq24157.c **** 
 976:Lib/bq24157/bq24157.c **** int16_t bq24157_getMaxChargeCurrentSenseVoltage(void)
 977:Lib/bq24157/bq24157.c **** {
 2561              		.loc 1 977 0
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 8
 2564              		@ frame_needed = 0, uses_anonymous_args = 0
 2565 0000 00B5     		push	{lr}
 2566              	.LCFI164:
 2567              		.cfi_def_cfa_offset 4
 2568              		.cfi_offset 14, -4
 2569 0002 83B0     		sub	sp, sp, #12
 2570              	.LCFI165:
 2571              		.cfi_def_cfa_offset 16
 978:Lib/bq24157/bq24157.c ****     uint8_t temp;
 979:Lib/bq24157/bq24157.c **** 
 980:Lib/bq24157/bq24157.c ****     // Read register memory location 0x06
 981:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SAFTEY_LIMIT_REG, &temp ) )
 2572              		.loc 1 981 0
 2573 0004 0DF10701 		add	r1, sp, #7
 2574 0008 0620     		movs	r0, #6
 2575 000a FFF7FEFF 		bl	bq24157_register_read
 2576              	.LVL127:
 2577 000e 60B1     		cbz	r0, .L236
 982:Lib/bq24157/bq24157.c ****     {
 983:Lib/bq24157/bq24157.c ****         return -1;
 984:Lib/bq24157/bq24157.c ****     }
 985:Lib/bq24157/bq24157.c **** 
 986:Lib/bq24157/bq24157.c ****     // Return the charge current sense voltage in unit of 0.1mV includes offset of 37.4mV
 987:Lib/bq24157/bq24157.c ****     return( ( ( temp >> 4 ) * 68 ) + 374 );
 2578              		.loc 1 987 0
 2579 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2580 0014 1B09     		lsrs	r3, r3, #4
 2581 0016 03EB0313 		add	r3, r3, r3, lsl #4
 2582 001a 9800     		lsls	r0, r3, #2
 2583 001c 80B2     		uxth	r0, r0
 2584 001e 00F5BB70 		add	r0, r0, #374
 2585 0022 00B2     		sxth	r0, r0
 2586              	.L235:
 988:Lib/bq24157/bq24157.c **** }
 2587              		.loc 1 988 0
 2588 0024 03B0     		add	sp, sp, #12
 2589              	.LCFI166:
 2590              		.cfi_remember_state
 2591              		.cfi_def_cfa_offset 4
 2592              		@ sp needed
 2593 0026 5DF804FB 		ldr	pc, [sp], #4
 2594              	.L236:
 2595              	.LCFI167:
 2596              		.cfi_restore_state
 983:Lib/bq24157/bq24157.c ****     }
 2597              		.loc 1 983 0
 2598 002a 4FF0FF30 		mov	r0, #-1
 2599 002e F9E7     		b	.L235
 2600              		.cfi_endproc
 2601              	.LFE169:
 2603              		.section	.text.bq24157_setMaxChargeCurrentSenseVoltage,"ax",%progbits
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 64


 2604              		.align	1
 2605              		.global	bq24157_setMaxChargeCurrentSenseVoltage
 2606              		.syntax unified
 2607              		.thumb
 2608              		.thumb_func
 2609              		.fpu fpv4-sp-d16
 2611              	bq24157_setMaxChargeCurrentSenseVoltage:
 2612              	.LFB170:
 989:Lib/bq24157/bq24157.c **** 
 990:Lib/bq24157/bq24157.c **** bool bq24157_setMaxChargeCurrentSenseVoltage(uint16_t voltage)
 991:Lib/bq24157/bq24157.c **** {
 2613              		.loc 1 991 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 8
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              	.LVL128:
 992:Lib/bq24157/bq24157.c ****     uint8_t temp;
 993:Lib/bq24157/bq24157.c **** 
 994:Lib/bq24157/bq24157.c ****     // Range check voltage.  Units are 0.1mV and range is 37.4mV to 105.4mV
 995:Lib/bq24157/bq24157.c ****     if( !( voltage >= 374 && voltage <= 1054 ) )
 2618              		.loc 1 995 0
 2619 0000 A0F5BB73 		sub	r3, r0, #374
 2620 0004 9BB2     		uxth	r3, r3
 2621 0006 B3F52A7F 		cmp	r3, #680
 2622 000a 02D9     		bls	.L245
 996:Lib/bq24157/bq24157.c ****     {
 997:Lib/bq24157/bq24157.c ****         return false;
 2623              		.loc 1 997 0
 2624 000c 0023     		movs	r3, #0
 998:Lib/bq24157/bq24157.c ****     }
 999:Lib/bq24157/bq24157.c **** 
1000:Lib/bq24157/bq24157.c ****     // Read register memory location 0x04
1001:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_BATT_TERM_CURRENT_REG, &temp ) )
1002:Lib/bq24157/bq24157.c ****     {
1003:Lib/bq24157/bq24157.c ****         return false;
1004:Lib/bq24157/bq24157.c ****     }
1005:Lib/bq24157/bq24157.c **** 
1006:Lib/bq24157/bq24157.c ****     temp = temp | ( ( ( voltage - 374 ) / 68 ) << 4 );
1007:Lib/bq24157/bq24157.c **** 
1008:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x04
1009:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_BATT_TERM_CURRENT_REG, temp ) )
1010:Lib/bq24157/bq24157.c ****     {
1011:Lib/bq24157/bq24157.c ****         return false;
1012:Lib/bq24157/bq24157.c ****     }
1013:Lib/bq24157/bq24157.c **** 
1014:Lib/bq24157/bq24157.c ****     return true;
1015:Lib/bq24157/bq24157.c **** }
 2625              		.loc 1 1015 0
 2626 000e 1846     		mov	r0, r3
 2627              	.LVL129:
 2628 0010 7047     		bx	lr
 2629              	.LVL130:
 2630              	.L245:
 991:Lib/bq24157/bq24157.c ****     uint8_t temp;
 2631              		.loc 1 991 0
 2632 0012 10B5     		push	{r4, lr}
 2633              	.LCFI168:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 65


 2634              		.cfi_def_cfa_offset 8
 2635              		.cfi_offset 4, -8
 2636              		.cfi_offset 14, -4
 2637 0014 82B0     		sub	sp, sp, #8
 2638              	.LCFI169:
 2639              		.cfi_def_cfa_offset 16
 2640 0016 0446     		mov	r4, r0
1001:Lib/bq24157/bq24157.c ****     {
 2641              		.loc 1 1001 0
 2642 0018 0DF10701 		add	r1, sp, #7
 2643 001c 0420     		movs	r0, #4
 2644              	.LVL131:
 2645 001e FFF7FEFF 		bl	bq24157_register_read
 2646              	.LVL132:
 2647 0022 0346     		mov	r3, r0
 2648 0024 10B9     		cbnz	r0, .L246
 2649              	.L239:
 2650              		.loc 1 1015 0
 2651 0026 1846     		mov	r0, r3
 2652 0028 02B0     		add	sp, sp, #8
 2653              	.LCFI170:
 2654              		.cfi_remember_state
 2655              		.cfi_def_cfa_offset 8
 2656              		@ sp needed
 2657 002a 10BD     		pop	{r4, pc}
 2658              	.L246:
 2659              	.LCFI171:
 2660              		.cfi_restore_state
1006:Lib/bq24157/bq24157.c **** 
 2661              		.loc 1 1006 0
 2662 002c A4F5BB70 		sub	r0, r4, #374
 2663 0030 084C     		ldr	r4, .L247
 2664 0032 84FB0034 		smull	r3, r4, r4, r0
 2665 0036 C017     		asrs	r0, r0, #31
 2666 0038 C0EB6410 		rsb	r0, r0, r4, asr #5
 2667 003c 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2668 0040 41EA0010 		orr	r0, r1, r0, lsl #4
 2669 0044 C1B2     		uxtb	r1, r0
 2670 0046 8DF80710 		strb	r1, [sp, #7]
1009:Lib/bq24157/bq24157.c ****     {
 2671              		.loc 1 1009 0
 2672 004a 0420     		movs	r0, #4
 2673 004c FFF7FEFF 		bl	bq24157_register_write
 2674              	.LVL133:
 2675 0050 0346     		mov	r3, r0
 2676 0052 E8E7     		b	.L239
 2677              	.L248:
 2678              		.align	2
 2679              	.L247:
 2680 0054 79787878 		.word	2021161081
 2681              		.cfi_endproc
 2682              	.LFE170:
 2684              		.section	.text.bq24157_getMaxBatteryRegulationVoltage,"ax",%progbits
 2685              		.align	1
 2686              		.global	bq24157_getMaxBatteryRegulationVoltage
 2687              		.syntax unified
 2688              		.thumb
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 66


 2689              		.thumb_func
 2690              		.fpu fpv4-sp-d16
 2692              	bq24157_getMaxBatteryRegulationVoltage:
 2693              	.LFB171:
1016:Lib/bq24157/bq24157.c **** 
1017:Lib/bq24157/bq24157.c **** int16_t bq24157_getMaxBatteryRegulationVoltage(void)
1018:Lib/bq24157/bq24157.c **** {
 2694              		.loc 1 1018 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 8
 2697              		@ frame_needed = 0, uses_anonymous_args = 0
 2698 0000 00B5     		push	{lr}
 2699              	.LCFI172:
 2700              		.cfi_def_cfa_offset 4
 2701              		.cfi_offset 14, -4
 2702 0002 83B0     		sub	sp, sp, #12
 2703              	.LCFI173:
 2704              		.cfi_def_cfa_offset 16
1019:Lib/bq24157/bq24157.c ****     uint8_t temp;
1020:Lib/bq24157/bq24157.c **** 
1021:Lib/bq24157/bq24157.c ****     // Read register memory location 0x06
1022:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SAFTEY_LIMIT_REG, &temp ) )
 2705              		.loc 1 1022 0
 2706 0004 0DF10701 		add	r1, sp, #7
 2707 0008 0620     		movs	r0, #6
 2708 000a FFF7FEFF 		bl	bq24157_register_read
 2709              	.LVL134:
 2710 000e 68B1     		cbz	r0, .L251
1023:Lib/bq24157/bq24157.c ****     {
1024:Lib/bq24157/bq24157.c ****         return -1;
1025:Lib/bq24157/bq24157.c ****     }
1026:Lib/bq24157/bq24157.c **** 
1027:Lib/bq24157/bq24157.c ****     // Return max battery regulation voltage in mV with offset of 4200mV
1028:Lib/bq24157/bq24157.c ****     return( ( ( temp & 0x0F ) * 20 ) + 4200 );
 2711              		.loc 1 1028 0
 2712 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2713 0014 03F00F03 		and	r3, r3, #15
 2714 0018 03EB8303 		add	r3, r3, r3, lsl #2
 2715 001c 9800     		lsls	r0, r3, #2
 2716 001e 00F58350 		add	r0, r0, #4192
 2717 0022 0830     		adds	r0, r0, #8
 2718 0024 00B2     		sxth	r0, r0
 2719              	.L250:
1029:Lib/bq24157/bq24157.c **** }
 2720              		.loc 1 1029 0
 2721 0026 03B0     		add	sp, sp, #12
 2722              	.LCFI174:
 2723              		.cfi_remember_state
 2724              		.cfi_def_cfa_offset 4
 2725              		@ sp needed
 2726 0028 5DF804FB 		ldr	pc, [sp], #4
 2727              	.L251:
 2728              	.LCFI175:
 2729              		.cfi_restore_state
1024:Lib/bq24157/bq24157.c ****     }
 2730              		.loc 1 1024 0
 2731 002c 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 67


 2732 0030 F9E7     		b	.L250
 2733              		.cfi_endproc
 2734              	.LFE171:
 2736              		.section	.text.bq24157_update,"ax",%progbits
 2737              		.align	1
 2738              		.global	bq24157_update
 2739              		.syntax unified
 2740              		.thumb
 2741              		.thumb_func
 2742              		.fpu fpv4-sp-d16
 2744              	bq24157_update:
 2745              	.LFB127:
  88:Lib/bq24157/bq24157.c ****     int16_t value;
 2746              		.loc 1 88 0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 0
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 2750              	.LVL135:
  93:Lib/bq24157/bq24157.c ****     {
 2751              		.loc 1 93 0
 2752 0000 554B     		ldr	r3, .L282
 2753 0002 B3F90030 		ldrsh	r3, [r3]
 2754 0006 002B     		cmp	r3, #0
 2755 0008 40F38A80 		ble	.L263
  88:Lib/bq24157/bq24157.c ****     int16_t value;
 2756              		.loc 1 88 0
 2757 000c 10B5     		push	{r4, lr}
 2758              	.LCFI176:
 2759              		.cfi_def_cfa_offset 8
 2760              		.cfi_offset 4, -8
 2761              		.cfi_offset 14, -4
 2762 000e 0446     		mov	r4, r0
  97:Lib/bq24157/bq24157.c **** 
 2763              		.loc 1 97 0
 2764 0010 0380     		strh	r3, [r0]	@ movhi
  99:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2765              		.loc 1 99 0
 2766 0012 FFF7FEFF 		bl	bq24157_getChargeCurrentSenseVoltage
 2767              	.LVL136:
 100:Lib/bq24157/bq24157.c ****     {
 2768              		.loc 1 100 0
 2769 0016 0028     		cmp	r0, #0
 2770              	.LVL137:
 2771 0018 C0F28480 		blt	.L264
 104:Lib/bq24157/bq24157.c **** 
 2772              		.loc 1 104 0
 2773 001c 00EB8000 		add	r0, r0, r0, lsl #2
 2774 0020 4300     		lsls	r3, r0, #1
 2775 0022 9BB2     		uxth	r3, r3
 2776 0024 2288     		ldrh	r2, [r4]
 2777 0026 B3FBF2F3 		udiv	r3, r3, r2
 2778 002a 03EB8303 		add	r3, r3, r3, lsl #2
 2779 002e 5A00     		lsls	r2, r3, #1
 2780 0030 6280     		strh	r2, [r4, #2]	@ movhi
 106:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2781              		.loc 1 106 0
 2782 0032 FFF7FEFF 		bl	bq24157_getTermCurrentSenseVoltage
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 68


 2783              	.LVL138:
 107:Lib/bq24157/bq24157.c ****     {
 2784              		.loc 1 107 0
 2785 0036 0028     		cmp	r0, #0
 2786              	.LVL139:
 2787 0038 76DB     		blt	.L265
 111:Lib/bq24157/bq24157.c **** 
 2788              		.loc 1 111 0
 2789 003a 00EB8000 		add	r0, r0, r0, lsl #2
 2790 003e 4300     		lsls	r3, r0, #1
 2791 0040 9BB2     		uxth	r3, r3
 2792 0042 2288     		ldrh	r2, [r4]
 2793 0044 B3FBF2F3 		udiv	r3, r3, r2
 2794 0048 03EB8303 		add	r3, r3, r3, lsl #2
 2795 004c 5A00     		lsls	r2, r3, #1
 2796 004e A280     		strh	r2, [r4, #4]	@ movhi
 113:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2797              		.loc 1 113 0
 2798 0050 FFF7FEFF 		bl	bq24157_getWeakBatteryThreshold
 2799              	.LVL140:
 114:Lib/bq24157/bq24157.c ****     {
 2800              		.loc 1 114 0
 2801 0054 0028     		cmp	r0, #0
 2802              	.LVL141:
 2803 0056 69DB     		blt	.L266
 118:Lib/bq24157/bq24157.c **** 
 2804              		.loc 1 118 0
 2805 0058 E080     		strh	r0, [r4, #6]	@ movhi
 120:Lib/bq24157/bq24157.c ****     {
 2806              		.loc 1 120 0
 2807 005a FFF7FEFF 		bl	bq24157_getInputCurrentLimit
 2808              	.LVL142:
 2809 005e 0328     		cmp	r0, #3
 2810 0060 66D8     		bhi	.L267
 2811 0062 DFE800F0 		tbb	[pc, r0]
 2812              	.L256:
 2813 0066 02       		.byte	(.L255-.L256)/2
 2814 0067 4F       		.byte	(.L257-.L256)/2
 2815 0068 53       		.byte	(.L258-.L256)/2
 2816 0069 57       		.byte	(.L259-.L256)/2
 2817              		.p2align 1
 2818              	.L255:
 124:Lib/bq24157/bq24157.c ****             break;
 2819              		.loc 1 124 0
 2820 006a 6423     		movs	r3, #100
 2821 006c 2381     		strh	r3, [r4, #8]	@ movhi
 2822              	.L260:
 148:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2823              		.loc 1 148 0
 2824 006e FFF7FEFF 		bl	bq24157_getBatteryRegulationVoltage
 2825              	.LVL143:
 149:Lib/bq24157/bq24157.c ****     {
 2826              		.loc 1 149 0
 2827 0072 0028     		cmp	r0, #0
 2828              	.LVL144:
 2829 0074 5EDB     		blt	.L268
 153:Lib/bq24157/bq24157.c **** 
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 69


 2830              		.loc 1 153 0
 2831 0076 6081     		strh	r0, [r4, #10]	@ movhi
 155:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2832              		.loc 1 155 0
 2833 0078 FFF7FEFF 		bl	bq24157_getSpecialChargerVoltage
 2834              	.LVL145:
 156:Lib/bq24157/bq24157.c ****     {
 2835              		.loc 1 156 0
 2836 007c 0028     		cmp	r0, #0
 2837              	.LVL146:
 2838 007e 5BDB     		blt	.L269
 160:Lib/bq24157/bq24157.c **** 
 2839              		.loc 1 160 0
 2840 0080 A081     		strh	r0, [r4, #12]	@ movhi
 162:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2841              		.loc 1 162 0
 2842 0082 FFF7FEFF 		bl	bq24157_getMaxBatteryRegulationVoltage
 2843              	.LVL147:
 163:Lib/bq24157/bq24157.c ****     {
 2844              		.loc 1 163 0
 2845 0086 0028     		cmp	r0, #0
 2846              	.LVL148:
 2847 0088 58DB     		blt	.L270
 167:Lib/bq24157/bq24157.c **** 
 2848              		.loc 1 167 0
 2849 008a E081     		strh	r0, [r4, #14]	@ movhi
 169:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2850              		.loc 1 169 0
 2851 008c FFF7FEFF 		bl	bq24157_getMaxChargeCurrentSenseVoltage
 2852              	.LVL149:
 170:Lib/bq24157/bq24157.c ****     {
 2853              		.loc 1 170 0
 2854 0090 0028     		cmp	r0, #0
 2855              	.LVL150:
 2856 0092 55DB     		blt	.L271
 174:Lib/bq24157/bq24157.c **** 
 2857              		.loc 1 174 0
 2858 0094 82B2     		uxth	r2, r0
 2859 0096 02EB8202 		add	r2, r2, r2, lsl #2
 2860 009a 5300     		lsls	r3, r2, #1
 2861 009c 2288     		ldrh	r2, [r4]
 2862 009e 93FBF2F3 		sdiv	r3, r3, r2
 2863 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2864 00a6 5A00     		lsls	r2, r3, #1
 2865 00a8 2282     		strh	r2, [r4, #16]	@ movhi
 176:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2866              		.loc 1 176 0
 2867 00aa FFF7FEFF 		bl	bq24157_getChargerEnable
 2868              	.LVL151:
 2869 00ae 00B2     		sxth	r0, r0
 2870              	.LVL152:
 177:Lib/bq24157/bq24157.c ****     {
 2871              		.loc 1 177 0
 2872 00b0 0028     		cmp	r0, #0
 2873 00b2 47DB     		blt	.L272
 181:Lib/bq24157/bq24157.c **** 
 2874              		.loc 1 181 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 70


 2875 00b4 B0FA80F0 		clz	r0, r0
 2876              	.LVL153:
 2877 00b8 4009     		lsrs	r0, r0, #5
 2878 00ba A075     		strb	r0, [r4, #22]
 183:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2879              		.loc 1 183 0
 2880 00bc FFF7FEFF 		bl	bq24157_getBoostMode
 2881              	.LVL154:
 2882 00c0 00B2     		sxth	r0, r0
 2883              	.LVL155:
 184:Lib/bq24157/bq24157.c ****     {
 2884              		.loc 1 184 0
 2885 00c2 0028     		cmp	r0, #0
 2886 00c4 40DB     		blt	.L273
 188:Lib/bq24157/bq24157.c **** 
 2887              		.loc 1 188 0
 2888 00c6 0030     		adds	r0, r0, #0
 2889 00c8 18BF     		it	ne
 2890 00ca 0120     		movne	r0, #1
 2891              	.LVL156:
 2892 00cc 6075     		strb	r0, [r4, #21]
 190:Lib/bq24157/bq24157.c ****     if( value < 0 )
 2893              		.loc 1 190 0
 2894 00ce FFF7FEFF 		bl	bq24157_getOtgPinStatus
 2895              	.LVL157:
 2896 00d2 00B2     		sxth	r0, r0
 2897              	.LVL158:
 191:Lib/bq24157/bq24157.c ****     {
 2898              		.loc 1 191 0
 2899 00d4 0028     		cmp	r0, #0
 2900 00d6 39DB     		blt	.L274
 195:Lib/bq24157/bq24157.c **** 
 2901              		.loc 1 195 0
 2902 00d8 0030     		adds	r0, r0, #0
 2903 00da 18BF     		it	ne
 2904 00dc 0120     		movne	r0, #1
 2905              	.LVL159:
 2906 00de E075     		strb	r0, [r4, #23]
 197:Lib/bq24157/bq24157.c ****     if( status == BQ24157_ERROR )
 2907              		.loc 1 197 0
 2908 00e0 FFF7FEFF 		bl	bq24157_getStatus
 2909              	.LVL160:
 198:Lib/bq24157/bq24157.c ****     {
 2910              		.loc 1 198 0
 2911 00e4 B0F1FF3F 		cmp	r0, #-1
 2912 00e8 32D0     		beq	.L275
 202:Lib/bq24157/bq24157.c **** 
 2913              		.loc 1 202 0
 2914 00ea A074     		strb	r0, [r4, #18]
 204:Lib/bq24157/bq24157.c ****     {
 2915              		.loc 1 204 0
 2916 00ec 0128     		cmp	r0, #1
 2917 00ee 14D0     		beq	.L281
 210:Lib/bq24157/bq24157.c ****     }
 2918              		.loc 1 210 0
 2919 00f0 0023     		movs	r3, #0
 2920 00f2 2375     		strb	r3, [r4, #20]
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 71


 2921              	.L262:
 213:Lib/bq24157/bq24157.c ****     if( fault == BQ24157_FAULT_ERROR )
 2922              		.loc 1 213 0
 2923 00f4 FFF7FEFF 		bl	bq24157_getFault
 2924              	.LVL161:
 214:Lib/bq24157/bq24157.c ****     {
 2925              		.loc 1 214 0
 2926 00f8 B0F1FF3F 		cmp	r0, #-1
 2927 00fc 2AD0     		beq	.L276
 218:Lib/bq24157/bq24157.c ****     
 2928              		.loc 1 218 0
 2929 00fe E074     		strb	r0, [r4, #19]
 220:Lib/bq24157/bq24157.c **** }
 2930              		.loc 1 220 0
 2931 0100 0120     		movs	r0, #1
 2932              	.LVL162:
 2933 0102 10BD     		pop	{r4, pc}
 2934              	.LVL163:
 2935              	.L257:
 129:Lib/bq24157/bq24157.c ****             break;
 2936              		.loc 1 129 0
 2937 0104 4FF4FA73 		mov	r3, #500
 2938 0108 2381     		strh	r3, [r4, #8]	@ movhi
 130:Lib/bq24157/bq24157.c ****         }
 2939              		.loc 1 130 0
 2940 010a B0E7     		b	.L260
 2941              	.L258:
 134:Lib/bq24157/bq24157.c ****             break;
 2942              		.loc 1 134 0
 2943 010c 4FF44873 		mov	r3, #800
 2944 0110 2381     		strh	r3, [r4, #8]	@ movhi
 135:Lib/bq24157/bq24157.c ****         }
 2945              		.loc 1 135 0
 2946 0112 ACE7     		b	.L260
 2947              	.L259:
 139:Lib/bq24157/bq24157.c ****             break;
 2948              		.loc 1 139 0
 2949 0114 0023     		movs	r3, #0
 2950 0116 2381     		strh	r3, [r4, #8]	@ movhi
 140:Lib/bq24157/bq24157.c ****         }
 2951              		.loc 1 140 0
 2952 0118 A9E7     		b	.L260
 2953              	.LVL164:
 2954              	.L281:
 206:Lib/bq24157/bq24157.c ****     }
 2955              		.loc 1 206 0
 2956 011a 0123     		movs	r3, #1
 2957 011c 2375     		strb	r3, [r4, #20]
 2958 011e E9E7     		b	.L262
 2959              	.LVL165:
 2960              	.L263:
 2961              	.LCFI177:
 2962              		.cfi_def_cfa_offset 0
 2963              		.cfi_restore 4
 2964              		.cfi_restore 14
  95:Lib/bq24157/bq24157.c ****     }
 2965              		.loc 1 95 0
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 72


 2966 0120 0020     		movs	r0, #0
 2967              	.LVL166:
 2968 0122 7047     		bx	lr
 2969              	.LVL167:
 2970              	.L264:
 2971              	.LCFI178:
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 4, -8
 2974              		.cfi_offset 14, -4
 102:Lib/bq24157/bq24157.c ****     }
 2975              		.loc 1 102 0
 2976 0124 0020     		movs	r0, #0
 2977 0126 10BD     		pop	{r4, pc}
 2978              	.LVL168:
 2979              	.L265:
 109:Lib/bq24157/bq24157.c ****     }
 2980              		.loc 1 109 0
 2981 0128 0020     		movs	r0, #0
 2982 012a 10BD     		pop	{r4, pc}
 2983              	.LVL169:
 2984              	.L266:
 116:Lib/bq24157/bq24157.c ****     }
 2985              		.loc 1 116 0
 2986 012c 0020     		movs	r0, #0
 2987 012e 10BD     		pop	{r4, pc}
 2988              	.LVL170:
 2989              	.L267:
 144:Lib/bq24157/bq24157.c ****         }
 2990              		.loc 1 144 0
 2991 0130 0020     		movs	r0, #0
 2992 0132 10BD     		pop	{r4, pc}
 2993              	.LVL171:
 2994              	.L268:
 151:Lib/bq24157/bq24157.c ****     }
 2995              		.loc 1 151 0
 2996 0134 0020     		movs	r0, #0
 2997 0136 10BD     		pop	{r4, pc}
 2998              	.LVL172:
 2999              	.L269:
 158:Lib/bq24157/bq24157.c ****     }
 3000              		.loc 1 158 0
 3001 0138 0020     		movs	r0, #0
 3002 013a 10BD     		pop	{r4, pc}
 3003              	.LVL173:
 3004              	.L270:
 165:Lib/bq24157/bq24157.c ****     }
 3005              		.loc 1 165 0
 3006 013c 0020     		movs	r0, #0
 3007 013e 10BD     		pop	{r4, pc}
 3008              	.LVL174:
 3009              	.L271:
 172:Lib/bq24157/bq24157.c ****     }
 3010              		.loc 1 172 0
 3011 0140 0020     		movs	r0, #0
 3012 0142 10BD     		pop	{r4, pc}
 3013              	.LVL175:
 3014              	.L272:
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 73


 179:Lib/bq24157/bq24157.c ****     }
 3015              		.loc 1 179 0
 3016 0144 0020     		movs	r0, #0
 3017              	.LVL176:
 3018 0146 10BD     		pop	{r4, pc}
 3019              	.LVL177:
 3020              	.L273:
 186:Lib/bq24157/bq24157.c ****     }
 3021              		.loc 1 186 0
 3022 0148 0020     		movs	r0, #0
 3023              	.LVL178:
 3024 014a 10BD     		pop	{r4, pc}
 3025              	.LVL179:
 3026              	.L274:
 193:Lib/bq24157/bq24157.c ****     }
 3027              		.loc 1 193 0
 3028 014c 0020     		movs	r0, #0
 3029              	.LVL180:
 3030 014e 10BD     		pop	{r4, pc}
 3031              	.LVL181:
 3032              	.L275:
 200:Lib/bq24157/bq24157.c ****     }
 3033              		.loc 1 200 0
 3034 0150 0020     		movs	r0, #0
 3035              	.LVL182:
 3036 0152 10BD     		pop	{r4, pc}
 3037              	.LVL183:
 3038              	.L276:
 216:Lib/bq24157/bq24157.c ****     }
 3039              		.loc 1 216 0
 3040 0154 0020     		movs	r0, #0
 3041              	.LVL184:
 221:Lib/bq24157/bq24157.c **** 
 3042              		.loc 1 221 0
 3043 0156 10BD     		pop	{r4, pc}
 3044              	.LVL185:
 3045              	.L283:
 3046              		.align	2
 3047              	.L282:
 3048 0158 00000000 		.word	_rSense_mOhm
 3049              		.cfi_endproc
 3050              	.LFE127:
 3052              		.section	.text.bq24157_setMaxBatteryRegulationVoltage,"ax",%progbits
 3053              		.align	1
 3054              		.global	bq24157_setMaxBatteryRegulationVoltage
 3055              		.syntax unified
 3056              		.thumb
 3057              		.thumb_func
 3058              		.fpu fpv4-sp-d16
 3060              	bq24157_setMaxBatteryRegulationVoltage:
 3061              	.LFB172:
1030:Lib/bq24157/bq24157.c **** 
1031:Lib/bq24157/bq24157.c **** bool bq24157_setMaxBatteryRegulationVoltage(uint16_t voltage)
1032:Lib/bq24157/bq24157.c **** {
 3062              		.loc 1 1032 0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 74


 3065              		@ frame_needed = 0, uses_anonymous_args = 0
 3066              	.LVL186:
1033:Lib/bq24157/bq24157.c ****     uint8_t temp;
1034:Lib/bq24157/bq24157.c **** 
1035:Lib/bq24157/bq24157.c ****     // Range check voltage.  Units are mV and range is 4200mV to 4440mV
1036:Lib/bq24157/bq24157.c ****     if( !( voltage >= 4200 && voltage <= 4440 ) )
 3067              		.loc 1 1036 0
 3068 0000 A0F58353 		sub	r3, r0, #4192
 3069 0004 083B     		subs	r3, r3, #8
 3070 0006 9BB2     		uxth	r3, r3
 3071 0008 F02B     		cmp	r3, #240
 3072 000a 02D9     		bls	.L291
1037:Lib/bq24157/bq24157.c ****     {
1038:Lib/bq24157/bq24157.c ****         return false;
 3073              		.loc 1 1038 0
 3074 000c 0023     		movs	r3, #0
1039:Lib/bq24157/bq24157.c ****     }
1040:Lib/bq24157/bq24157.c **** 
1041:Lib/bq24157/bq24157.c ****     // Read register memory location 0x06
1042:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SAFTEY_LIMIT_REG, &temp ) )
1043:Lib/bq24157/bq24157.c ****     {
1044:Lib/bq24157/bq24157.c ****         return false;
1045:Lib/bq24157/bq24157.c ****     }
1046:Lib/bq24157/bq24157.c **** 
1047:Lib/bq24157/bq24157.c ****     temp = temp | ( ( voltage - 4200 ) / 20 );
1048:Lib/bq24157/bq24157.c **** 
1049:Lib/bq24157/bq24157.c ****     // Write new register value to memory location 0x06
1050:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_SAFTEY_LIMIT_REG, temp ) )
1051:Lib/bq24157/bq24157.c ****     {
1052:Lib/bq24157/bq24157.c ****         return false;
1053:Lib/bq24157/bq24157.c ****     }
1054:Lib/bq24157/bq24157.c **** 
1055:Lib/bq24157/bq24157.c ****     return true;
1056:Lib/bq24157/bq24157.c **** }...
 3075              		.loc 1 1056 0
 3076 000e 1846     		mov	r0, r3
 3077              	.LVL187:
 3078 0010 7047     		bx	lr
 3079              	.LVL188:
 3080              	.L291:
1032:Lib/bq24157/bq24157.c **** {
 3081              		.loc 1 1032 0
 3082 0012 10B5     		push	{r4, lr}
 3083              	.LCFI179:
 3084              		.cfi_def_cfa_offset 8
 3085              		.cfi_offset 4, -8
 3086              		.cfi_offset 14, -4
 3087 0014 82B0     		sub	sp, sp, #8
 3088              	.LCFI180:
 3089              		.cfi_def_cfa_offset 16
 3090 0016 0446     		mov	r4, r0
1042:Lib/bq24157/bq24157.c ****     if( !bq24157_register_read( BQ24157_SAFTEY_LIMIT_REG, &temp ) )
 3091              		.loc 1 1042 0
 3092 0018 0DF10701 		add	r1, sp, #7
 3093 001c 0620     		movs	r0, #6
 3094              	.LVL189:
 3095 001e FFF7FEFF 		bl	bq24157_register_read
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 75


 3096              	.LVL190:
 3097 0022 0346     		mov	r3, r0
 3098 0024 10B9     		cbnz	r0, .L292
 3099              	.L285:
 3100              		.loc 1 1056 0
 3101 0026 1846     		mov	r0, r3
 3102 0028 02B0     		add	sp, sp, #8
 3103              	.LCFI181:
 3104              		.cfi_remember_state
 3105              		.cfi_def_cfa_offset 8
 3106              		@ sp needed
 3107 002a 10BD     		pop	{r4, pc}
 3108              	.L292:
 3109              	.LCFI182:
 3110              		.cfi_restore_state
1047:Lib/bq24157/bq24157.c ****     temp = temp | ( ( voltage - 4200 ) / 20 );
 3111              		.loc 1 1047 0
 3112 002c A4F58350 		sub	r0, r4, #4192
 3113 0030 0838     		subs	r0, r0, #8
 3114 0032 0849     		ldr	r1, .L293
 3115 0034 81FB0031 		smull	r3, r1, r1, r0
 3116 0038 C017     		asrs	r0, r0, #31
 3117 003a C0EBE100 		rsb	r0, r0, r1, asr #3
 3118 003e 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 3119 0042 0843     		orrs	r0, r0, r1
 3120 0044 C1B2     		uxtb	r1, r0
 3121 0046 8DF80710 		strb	r1, [sp, #7]
1050:Lib/bq24157/bq24157.c ****     if( !bq24157_register_write( BQ24157_SAFTEY_LIMIT_REG, temp ) )
 3122              		.loc 1 1050 0
 3123 004a 0620     		movs	r0, #6
 3124 004c FFF7FEFF 		bl	bq24157_register_write
 3125              	.LVL191:
 3126 0050 0346     		mov	r3, r0
 3127 0052 E8E7     		b	.L285
 3128              	.L294:
 3129              		.align	2
 3130              	.L293:
 3131 0054 67666666 		.word	1717986919
 3132              		.cfi_endproc
 3133              	.LFE172:
 3135              		.comm	_rSense_mOhm,2,2
 3136              		.text
 3137              	.Letext0:
 3138              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3139              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3140              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3141              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3142              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3143              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3144              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3145              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 3146              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 3147              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3148              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3149              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 3150              		.file 14 "Lib/bq24157/bq24157.h"
 3151              		.file 15 "Inc/i2c.h"
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 76


ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 bq24157.c
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:18     .text.bq24157_register_write:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:25     .text.bq24157_register_write:00000000 bq24157_register_write
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:79     .text.bq24157_register_write:0000002c $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:84     .text.bq24157_register_read:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:91     .text.bq24157_register_read:00000000 bq24157_register_read
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:159    .text.bq24157_register_read:00000038 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:164    .text.bq24157_setRSense:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:171    .text.bq24157_setRSense:00000000 bq24157_setRSense
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:199    .text.bq24157_setRSense:00000010 $d
                            *COM*:00000002 _rSense_mOhm
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:204    .text.bq24157_getRSense:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:211    .text.bq24157_getRSense:00000000 bq24157_getRSense
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:225    .text.bq24157_getRSense:00000008 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:230    .text.bq24157_resetSafteyTimer:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:237    .text.bq24157_resetSafteyTimer:00000000 bq24157_resetSafteyTimer
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:283    .text.bq24157_getOtgPinStatus:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:290    .text.bq24157_getOtgPinStatus:00000000 bq24157_getOtgPinStatus
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:337    .text.bq24157_getStatPinFunction:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:344    .text.bq24157_getStatPinFunction:00000000 bq24157_getStatPinFunction
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:391    .text.bq24157_setStatPinFunction:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:398    .text.bq24157_setStatPinFunction:00000000 bq24157_setStatPinFunction
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:451    .text.bq24157_getStatus:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:458    .text.bq24157_getStatus:00000000 bq24157_getStatus
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:498    .text.bq24157_getBoostMode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:505    .text.bq24157_getBoostMode:00000000 bq24157_getBoostMode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:545    .text.bq24157_getFault:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:552    .text.bq24157_getFault:00000000 bq24157_getFault
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:607    .text.bq24157_getInputCurrentLimit:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:614    .text.bq24157_getInputCurrentLimit:00000000 bq24157_getInputCurrentLimit
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:654    .text.bq24157_setInputCurrentLimit:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:661    .text.bq24157_setInputCurrentLimit:00000000 bq24157_setInputCurrentLimit
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:714    .text.bq24157_getWeakBatteryThreshold:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:721    .text.bq24157_getWeakBatteryThreshold:00000000 bq24157_getWeakBatteryThreshold
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:748    .text.bq24157_getWeakBatteryThreshold:00000020 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:752    .text.bq24157_getWeakBatteryThreshold:00000024 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:787    .text.bq24157_setWeakBatteryThreshold:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:794    .text.bq24157_setWeakBatteryThreshold:00000000 bq24157_setWeakBatteryThreshold
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:876    .text.bq24157_setWeakBatteryThreshold:00000068 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:882    .text.bq24157_getChargeCurrentTerm:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:889    .text.bq24157_getChargeCurrentTerm:00000000 bq24157_getChargeCurrentTerm
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:929    .text.bq24157_setChargeCurrentTerm:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:936    .text.bq24157_setChargeCurrentTerm:00000000 bq24157_setChargeCurrentTerm
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:989    .text.bq24157_getChargerEnable:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:996    .text.bq24157_getChargerEnable:00000000 bq24157_getChargerEnable
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1036   .text.bq24157_setChargerEnable:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1043   .text.bq24157_setChargerEnable:00000000 bq24157_setChargerEnable
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1096   .text.bq24157_getHighImpedanceMode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1103   .text.bq24157_getHighImpedanceMode:00000000 bq24157_getHighImpedanceMode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1143   .text.bq24157_setHighImpedanceMode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1150   .text.bq24157_setHighImpedanceMode:00000000 bq24157_setHighImpedanceMode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1203   .text.bq24157_getOperationMode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1210   .text.bq24157_getOperationMode:00000000 bq24157_getOperationMode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1250   .text.bq24157_setOperationMode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1257   .text.bq24157_setOperationMode:00000000 bq24157_setOperationMode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1309   .text.bq24157_getBatteryRegulationVoltage:00000000 $t
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 78


C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1316   .text.bq24157_getBatteryRegulationVoltage:00000000 bq24157_getBatteryRegulationVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1360   .text.bq24157_setBatteryRegulationVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1367   .text.bq24157_setBatteryRegulationVoltage:00000000 bq24157_setBatteryRegulationVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1438   .text.bq24157_setBatteryRegulationVoltage:00000058 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1443   .text.bq24157_getOtgPinPolarity:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1450   .text.bq24157_getOtgPinPolarity:00000000 bq24157_getOtgPinPolarity
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1490   .text.bq24157_setOtgPinPolarity:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1497   .text.bq24157_setOtgPinPolarity:00000000 bq24157_setOtgPinPolarity
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1550   .text.bq24157_getOtgPinEnable:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1557   .text.bq24157_getOtgPinEnable:00000000 bq24157_getOtgPinEnable
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1597   .text.bq24157_setOtgPinEnable:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1604   .text.bq24157_setOtgPinEnable:00000000 bq24157_setOtgPinEnable
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1656   .text.bq24157_getVendorCode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1663   .text.bq24157_getVendorCode:00000000 bq24157_getVendorCode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1703   .text.bq24157_getPartCode:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1710   .text.bq24157_getPartCode:00000000 bq24157_getPartCode
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1750   .text.bq24157_getPartRevision:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1757   .text.bq24157_getPartRevision:00000000 bq24157_getPartRevision
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1797   .text.bq24157_setReset:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1804   .text.bq24157_setReset:00000000 bq24157_setReset
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1850   .text.bq24157_getChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1857   .text.bq24157_getChargeCurrentSenseVoltage:00000000 bq24157_getChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1902   .text.bq24157_setChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1909   .text.bq24157_setChargeCurrentSenseVoltage:00000000 bq24157_setChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1981   .text.bq24157_setChargeCurrentSenseVoltage:0000005c $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1986   .text.bq24157_getTermCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:1993   .text.bq24157_getTermCurrentSenseVoltage:00000000 bq24157_getTermCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2038   .text.bq24157_setTermCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2045   .text.bq24157_setTermCurrentSenseVoltage:00000000 bq24157_setTermCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2116   .text.bq24157_setTermCurrentSenseVoltage:00000054 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2121   .text.bq24157_init:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2128   .text.bq24157_init:00000000 bq24157_init
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2211   .text.bq24157_init:00000078 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2216   .text.bq24157_getLowChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2223   .text.bq24157_getLowChargeCurrentSenseVoltage:00000000 bq24157_getLowChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2263   .text.bq24157_setLowChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2270   .text.bq24157_setLowChargeCurrentSenseVoltage:00000000 bq24157_setLowChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2323   .text.bq24157_getDpmStatus:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2330   .text.bq24157_getDpmStatus:00000000 bq24157_getDpmStatus
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2370   .text.bq24157_getCdStatus:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2377   .text.bq24157_getCdStatus:00000000 bq24157_getCdStatus
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2417   .text.bq24157_getSpecialChargerVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2424   .text.bq24157_getSpecialChargerVoltage:00000000 bq24157_getSpecialChargerVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2469   .text.bq24157_setSpecialChargerVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2476   .text.bq24157_setSpecialChargerVoltage:00000000 bq24157_setSpecialChargerVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2547   .text.bq24157_setSpecialChargerVoltage:00000058 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2552   .text.bq24157_getMaxChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2559   .text.bq24157_getMaxChargeCurrentSenseVoltage:00000000 bq24157_getMaxChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2604   .text.bq24157_setMaxChargeCurrentSenseVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2611   .text.bq24157_setMaxChargeCurrentSenseVoltage:00000000 bq24157_setMaxChargeCurrentSenseVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2680   .text.bq24157_setMaxChargeCurrentSenseVoltage:00000054 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2685   .text.bq24157_getMaxBatteryRegulationVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2692   .text.bq24157_getMaxBatteryRegulationVoltage:00000000 bq24157_getMaxBatteryRegulationVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2737   .text.bq24157_update:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2744   .text.bq24157_update:00000000 bq24157_update
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2813   .text.bq24157_update:00000066 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:2817   .text.bq24157_update:0000006a $t
ARM GAS  C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s 			page 79


C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:3048   .text.bq24157_update:00000158 $d
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:3053   .text.bq24157_setMaxBatteryRegulationVoltage:00000000 $t
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:3060   .text.bq24157_setMaxBatteryRegulationVoltage:00000000 bq24157_setMaxBatteryRegulationVoltage
C:\Users\svcgu\AppData\Local\Temp\cc86WjMY.s:3131   .text.bq24157_setMaxBatteryRegulationVoltage:00000054 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c2
HAL_I2C_Master_Receive
